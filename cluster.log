
PLAY [Bootstrap Management cluster] ********************************************

TASK [Install kubernetes python package] ***************************************
Monday 13 October 2025  16:19:05 +0000 (0:00:00.028)       0:00:00.028 ******** 
Monday 13 October 2025  16:19:05 +0000 (0:00:00.027)       0:00:00.027 ******** 
ok: [127.0.0.1]

TASK [Install kpt command-line] ************************************************
Monday 13 October 2025  16:19:07 +0000 (0:00:01.667)       0:00:01.696 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:01.667)       0:00:01.695 ******** 
included: andrewrothstein.kpt for 127.0.0.1

TASK [Installing andrewrothstein.git] ******************************************
Monday 13 October 2025  16:19:07 +0000 (0:00:00.092)       0:00:01.789 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:00.092)       0:00:01.788 ******** 
included: andrewrothstein.git for 127.0.0.1

TASK [andrewrothstein.git : Resolve platform specific vars] ********************
Monday 13 October 2025  16:19:07 +0000 (0:00:00.072)       0:00:01.861 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:00.072)       0:00:01.860 ******** 
skipping: [127.0.0.1]

TASK [Install git from source] *************************************************
Monday 13 October 2025  16:19:07 +0000 (0:00:00.043)       0:00:01.905 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:00.043)       0:00:01.904 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.git : Running pkg installer...] **************************
Monday 13 October 2025  16:19:07 +0000 (0:00:00.085)       0:00:01.991 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:00.085)       0:00:01.990 ******** 
included: /home/rehanfazal/.ansible/roles/andrewrothstein.git/tasks/pkg.yml for 127.0.0.1

TASK [andrewrothstein.git : Install git os pkgs...] ****************************
Monday 13 October 2025  16:19:07 +0000 (0:00:00.093)       0:00:02.084 ******** 
Monday 13 October 2025  16:19:07 +0000 (0:00:00.093)       0:00:02.083 ******** 
ok: [127.0.0.1]

TASK [andrewrothstein.git : Install git-lfs os pkgs...] ************************
Monday 13 October 2025  16:19:09 +0000 (0:00:01.265)       0:00:03.350 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:01.265)       0:00:03.349 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.git : Configurating git in /etc/gitconfig] ***************
Monday 13 October 2025  16:19:09 +0000 (0:00:00.040)       0:00:03.390 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.040)       0:00:03.389 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Resolve platform specific vars] ********************
Monday 13 October 2025  16:19:09 +0000 (0:00:00.097)       0:00:03.488 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.097)       0:00:03.487 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Check for installation in /usr/local/kpt_linux_amd64-1.0.0-beta.57/kpt] ***
Monday 13 October 2025  16:19:09 +0000 (0:00:00.065)       0:00:03.553 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.065)       0:00:03.552 ******** 
ok: [127.0.0.1]

TASK [andrewrothstein.kpt : Downloading https://github.com/GoogleContainerTools/kpt/releases/download/v1.0.0-beta.57/kpt_linux_amd64-1.0.0-beta.57.tar.gz to /tmp/kpt_linux_amd64-1.0.0-beta.57.tar.gz] ***
Monday 13 October 2025  16:19:09 +0000 (0:00:00.656)       0:00:04.209 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.656)       0:00:04.208 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Mkdir /usr/local/kpt_linux_amd64-1.0.0-beta.57] ****
Monday 13 October 2025  16:19:09 +0000 (0:00:00.048)       0:00:04.257 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.048)       0:00:04.256 ******** 
skipping: [127.0.0.1]

TASK [Installing andrewrothstein.unarchivedeps] ********************************
Monday 13 October 2025  16:19:09 +0000 (0:00:00.044)       0:00:04.302 ******** 
Monday 13 October 2025  16:19:09 +0000 (0:00:00.044)       0:00:04.301 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Unarchive /tmp/kpt_linux_amd64-1.0.0-beta.57.tar.gz into /usr/local/kpt_linux_amd64-1.0.0-beta.57] ***
Monday 13 October 2025  16:19:10 +0000 (0:00:00.051)       0:00:04.354 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.051)       0:00:04.353 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Rm -f /tmp/kpt_linux_amd64-1.0.0-beta.57.tar.gz] ***
Monday 13 October 2025  16:19:10 +0000 (0:00:00.043)       0:00:04.397 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.043)       0:00:04.396 ******** 
skipping: [127.0.0.1]

TASK [andrewrothstein.kpt : Link /usr/local/bin/kpt to /usr/local/kpt_linux_amd64-1.0.0-beta.57/kpt] ***
Monday 13 October 2025  16:19:10 +0000 (0:00:00.045)       0:00:04.442 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.045)       0:00:04.441 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Apply kpt packages] ******************************************
Monday 13 October 2025  16:19:10 +0000 (0:00:00.567)       0:00:05.010 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.567)       0:00:05.009 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/apply-pkgs.yml for 127.0.0.1

TASK [bootstrap : Init job ids array] ******************************************
Monday 13 October 2025  16:19:10 +0000 (0:00:00.141)       0:00:05.151 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.141)       0:00:05.150 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Create list of packages] *************************************
Monday 13 October 2025  16:19:10 +0000 (0:00:00.053)       0:00:05.204 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.053)       0:00:05.203 ******** 
ok: [127.0.0.1]

TASK [Deploy base packages] ****************************************************
Monday 13 October 2025  16:19:10 +0000 (0:00:00.080)       0:00:05.285 ******** 
Monday 13 October 2025  16:19:10 +0000 (0:00:00.080)       0:00:05.284 ******** 
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'distros/sandbox/cert-manager', 'version': 'main', 'async': 660, 'poll': 0})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'distros/sandbox/gitea', 'version': 'main', 'async': 780, 'poll': 0})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/optional/resource-backend', 'version': 'main', 'async': 780, 'poll': 0})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'distros/sandbox/metallb', 'version': 'main', 'async': 1020, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'distros/sandbox/metallb-sandbox-config', 'version': 'main', 'async': 660, 'poll': 0})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'infra/capi/cluster-capi', 'version': 'main', 'async': 900, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'infra/capi/cluster-capi-infrastructure-docker', 'version': 'main', 'async': 780, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'infra/capi/cluster-capi-kind-docker-templates', 'version': 'main', 'async': 1500, 'poll': 0})

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:11 +0000 (0:00:00.324)       0:00:05.609 ******** 
Monday 13 October 2025  16:19:11 +0000 (0:00:00.324)       0:00:05.609 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/distros/sandbox/cert-manager] ***
Monday 13 October 2025  16:19:11 +0000 (0:00:00.081)       0:00:05.690 ******** 
Monday 13 October 2025  16:19:11 +0000 (0:00:00.081)       0:00:05.690 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/cert-manager] ***********************
Monday 13 October 2025  16:19:11 +0000 (0:00:00.264)       0:00:05.954 ******** 
Monday 13 October 2025  16:19:11 +0000 (0:00:00.264)       0:00:05.954 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/cert-manager] ***
Monday 13 October 2025  16:19:12 +0000 (0:00:00.474)       0:00:06.429 ******** 
Monday 13 October 2025  16:19:12 +0000 (0:00:00.474)       0:00:06.428 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/cert-manager] ***
Monday 13 October 2025  16:19:12 +0000 (0:00:00.404)       0:00:06.834 ******** 
Monday 13 October 2025  16:19:12 +0000 (0:00:00.404)       0:00:06.833 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"cert-manager\"",
        "├── [Kptfile]  Kptfile cert-manager",
        "├── [cert-manager.yaml]  Namespace cert-manager",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-cainjector",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-cainjector",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-cluster-view",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-approve:cert-manager-io",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-approve:cert-manager-io",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-certificates",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-certificates",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-certificatesigningrequests",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-certificatesigningrequests",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-challenges",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-challenges",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-clusterissuers",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-clusterissuers",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-ingress-shim",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-ingress-shim",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-issuers",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-issuers",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-controller-orders",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-controller-orders",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-edit",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-view",
        "├── [cert-manager.yaml]  MutatingWebhookConfiguration cert-manager-webhook",
        "├── [cert-manager.yaml]  ValidatingWebhookConfiguration cert-manager-webhook",
        "├── [cert-manager.yaml]  ClusterRole cert-manager-webhook:subjectaccessreviews",
        "├── [cert-manager.yaml]  ClusterRoleBinding cert-manager-webhook:subjectaccessreviews",
        "├── [cert-manager.yaml]  CustomResourceDefinition certificaterequests.cert-manager.io",
        "├── [cert-manager.yaml]  CustomResourceDefinition certificates.cert-manager.io",
        "├── [cert-manager.yaml]  CustomResourceDefinition challenges.acme.cert-manager.io",
        "├── [cert-manager.yaml]  CustomResourceDefinition clusterissuers.cert-manager.io",
        "├── [cert-manager.yaml]  CustomResourceDefinition issuers.cert-manager.io",
        "├── [cert-manager.yaml]  CustomResourceDefinition orders.acme.cert-manager.io",
        "├── [cert-manager.yaml]  ConfigMap cert-manager/cert-manager",
        "├── [cert-manager.yaml]  Deployment cert-manager/cert-manager",
        "├── [cert-manager.yaml]  Service cert-manager/cert-manager",
        "├── [cert-manager.yaml]  ServiceAccount cert-manager/cert-manager",
        "├── [cert-manager.yaml]  Deployment cert-manager/cert-manager-cainjector",
        "├── [cert-manager.yaml]  ServiceAccount cert-manager/cert-manager-cainjector",
        "├── [cert-manager.yaml]  ConfigMap cert-manager/cert-manager-webhook",
        "├── [cert-manager.yaml]  Deployment cert-manager/cert-manager-webhook",
        "├── [cert-manager.yaml]  Service cert-manager/cert-manager-webhook",
        "├── [cert-manager.yaml]  ServiceAccount cert-manager/cert-manager-webhook",
        "├── [cert-manager.yaml]  Role cert-manager/cert-manager-webhook:dynamic-serving",
        "├── [cert-manager.yaml]  RoleBinding cert-manager/cert-manager-webhook:dynamic-serving",
        "├── [cert-manager.yaml]  Role kube-system/cert-manager-cainjector:leaderelection",
        "├── [cert-manager.yaml]  RoleBinding kube-system/cert-manager-cainjector:leaderelection",
        "├── [cert-manager.yaml]  Role kube-system/cert-manager:leaderelection",
        "├── [cert-manager.yaml]  RoleBinding kube-system/cert-manager:leaderelection",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup default/inventory-36147176"
    ]
}

TASK [kpt : Render package: distros/sandbox/cert-manager] **********************
Monday 13 October 2025  16:19:12 +0000 (0:00:00.062)       0:00:06.896 ******** 
Monday 13 October 2025  16:19:12 +0000 (0:00:00.062)       0:00:06.895 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:13 +0000 (0:00:00.595)       0:00:07.491 ******** 
Monday 13 October 2025  16:19:13 +0000 (0:00:00.595)       0:00:07.490 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/cert-manager] ***
Monday 13 October 2025  16:19:13 +0000 (0:00:00.277)       0:00:07.769 ******** 
Monday 13 October 2025  16:19:13 +0000 (0:00:00.277)       0:00:07.768 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/cert-manager] ***********
Monday 13 October 2025  16:19:17 +0000 (0:00:04.261)       0:00:12.031 ******** 
Monday 13 October 2025  16:19:17 +0000 (0:00:04.261)       0:00:12.030 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2769267046/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:17 +0000 (0:00:00.115)       0:00:12.147 ******** 
Monday 13 October 2025  16:19:17 +0000 (0:00:00.115)       0:00:12.146 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/cert-manager] ************************
Monday 13 October 2025  16:19:18 +0000 (0:00:00.369)       0:00:12.516 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.369)       0:00:12.516 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/cert-manager] *****
Monday 13 October 2025  16:19:18 +0000 (0:00:00.063)       0:00:12.580 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.063)       0:00:12.579 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: distros/sandbox/cert-manager] ***********************
Monday 13 October 2025  16:19:18 +0000 (0:00:00.067)       0:00:12.647 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.067)       0:00:12.646 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:18 +0000 (0:00:00.429)       0:00:13.076 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.429)       0:00:13.075 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:18 +0000 (0:00:00.053)       0:00:13.129 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.053)       0:00:13.129 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:18 +0000 (0:00:00.099)       0:00:13.229 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.099)       0:00:13.228 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/distros/sandbox/gitea] ***
Monday 13 October 2025  16:19:18 +0000 (0:00:00.076)       0:00:13.305 ******** 
Monday 13 October 2025  16:19:18 +0000 (0:00:00.076)       0:00:13.304 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/gitea] ******************************
Monday 13 October 2025  16:19:19 +0000 (0:00:00.306)       0:00:13.612 ******** 
Monday 13 October 2025  16:19:19 +0000 (0:00:00.306)       0:00:13.611 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/gitea] *********
Monday 13 October 2025  16:19:19 +0000 (0:00:00.394)       0:00:14.006 ******** 
Monday 13 October 2025  16:19:19 +0000 (0:00:00.394)       0:00:14.005 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/gitea] *******
Monday 13 October 2025  16:19:20 +0000 (0:00:00.437)       0:00:14.443 ******** 
Monday 13 October 2025  16:19:20 +0000 (0:00:00.437)       0:00:14.443 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"gitea\"",
        "├── [Kptfile]  Kptfile gitea",
        "├── [deployment-memcached.yaml]  Deployment gitea/gitea-memcached",
        "├── [namespace.yaml]  Namespace gitea",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [resourcegroup.yaml]  ResourceGroup gitea/inventory-57867881",
        "├── [secret-git-user.yaml]  Secret gitea/git-user-secret",
        "├── [secret-gitea-init.yaml]  Secret gitea/gitea-init",
        "├── [secret-gitea-inline-config.yaml]  Secret gitea/gitea-inline-config",
        "├── [secret-gitea.yaml]  Secret gitea/gitea",
        "├── [secret-postgresql.yaml]  Secret gitea/gitea-postgresql",
        "├── [service-gitea.yaml]  Service gitea/gitea",
        "├── [service-memcached.yaml]  Service gitea/gitea-memcached",
        "├── [service-postgresql-hl.yaml]  Service gitea/gitea-postgresql-hl",
        "├── [service-postgresql.yaml]  Service gitea/gitea-postgresql",
        "├── [statefulset-gitea.yaml]  StatefulSet gitea/gitea",
        "└── [statefulset-postgres.yaml]  StatefulSet gitea/gitea-postgresql"
    ]
}

TASK [kpt : Render package: distros/sandbox/gitea] *****************************
Monday 13 October 2025  16:19:20 +0000 (0:00:00.075)       0:00:14.519 ******** 
Monday 13 October 2025  16:19:20 +0000 (0:00:00.075)       0:00:14.518 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:20 +0000 (0:00:00.404)       0:00:14.923 ******** 
Monday 13 October 2025  16:19:20 +0000 (0:00:00.404)       0:00:14.922 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/gitea] ***
Monday 13 October 2025  16:19:20 +0000 (0:00:00.344)       0:00:15.268 ******** 
Monday 13 October 2025  16:19:20 +0000 (0:00:00.344)       0:00:15.267 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/gitea] ******************
Monday 13 October 2025  16:19:22 +0000 (0:00:01.554)       0:00:16.823 ******** 
Monday 13 October 2025  16:19:22 +0000 (0:00:01.554)       0:00:16.822 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2610639436/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:22 +0000 (0:00:00.066)       0:00:16.889 ******** 
Monday 13 October 2025  16:19:22 +0000 (0:00:00.066)       0:00:16.888 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/gitea] *******************************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.466)       0:00:17.355 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.466)       0:00:17.354 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/gitea] ************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.065)       0:00:17.421 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.065)       0:00:17.420 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: distros/sandbox/gitea] ******************************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.086)       0:00:17.507 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.086)       0:00:17.506 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.411)       0:00:17.919 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.411)       0:00:17.918 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.048)       0:00:17.967 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.048)       0:00:17.966 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:23 +0000 (0:00:00.097)       0:00:18.065 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.097)       0:00:18.064 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/optional/resource-backend] ***
Monday 13 October 2025  16:19:23 +0000 (0:00:00.081)       0:00:18.147 ******** 
Monday 13 October 2025  16:19:23 +0000 (0:00:00.081)       0:00:18.146 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/resource-backend] *******************
Monday 13 October 2025  16:19:24 +0000 (0:00:00.372)       0:00:18.519 ******** 
Monday 13 October 2025  16:19:24 +0000 (0:00:00.372)       0:00:18.518 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/resource-backend] ***
Monday 13 October 2025  16:19:24 +0000 (0:00:00.291)       0:00:18.811 ******** 
Monday 13 October 2025  16:19:24 +0000 (0:00:00.291)       0:00:18.810 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/resource-backend] ***
Monday 13 October 2025  16:19:24 +0000 (0:00:00.384)       0:00:19.195 ******** 
Monday 13 October 2025  16:19:24 +0000 (0:00:00.384)       0:00:19.194 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"resource-backend\"",
        "├── [Kptfile]  Kptfile resource-backend",
        "├── [namespace.yaml]  Namespace backend-system",
        "├── [resourcegroup.yaml]  ResourceGroup backend-system/inventory-23633092",
        "├── Package \"app\"",
        "│   ├── [Kptfile]  Kptfile resource-backend/app",
        "│   └── controller",
        "│       ├── [clusterrole-controller.yaml]  ClusterRole resource-backend-controller-controller-role",
        "│       ├── [clusterrolebinding-controller.yaml]  ClusterRoleBinding resource-backend-controller-controller-role-binding",
        "│       ├── [deployment-controller.yaml]  Deployment backend-system/resource-backend-controller",
        "│       ├── [role-leader-election.yaml]  Role backend-system/resource-backend-controller-leader-election-role",
        "│       ├── [rolebinding-leader-election.yaml]  RoleBinding backend-system/resource-backend-controller-leader-election-role-binding",
        "│       ├── [serviceaccount-controller.yaml]  ServiceAccount backend-system/resource-backend-controller",
        "│       └── grpc",
        "│           └── [service-grpc.yaml]  Service backend-system/resource-backend-controller-grpc-svc",
        "└── Package \"crd\"",
        "    ├── [Kptfile]  Kptfile crd",
        "    └── bases",
        "        ├── [inv.nephio.org_endpoints.yaml]  CustomResourceDefinition endpoints.inv.nephio.org",
        "        ├── [inv.nephio.org_links.yaml]  CustomResourceDefinition links.inv.nephio.org",
        "        ├── [inv.nephio.org_nodes.yaml]  CustomResourceDefinition nodes.inv.nephio.org",
        "        ├── [inv.nephio.org_targets.yaml]  CustomResourceDefinition targets.inv.nephio.org",
        "        ├── [ipam.resource.nephio.org_ipclaims.yaml]  CustomResourceDefinition ipclaims.ipam.resource.nephio.org",
        "        ├── [ipam.resource.nephio.org_ipprefixes.yaml]  CustomResourceDefinition ipprefixes.ipam.resource.nephio.org",
        "        ├── [ipam.resource.nephio.org_networkinstances.yaml]  CustomResourceDefinition networkinstances.ipam.resource.nephio.org",
        "        ├── [topo.nephio.org_rawtopologies.yaml]  CustomResourceDefinition rawtopologies.topo.nephio.org",
        "        ├── [vlan.resource.nephio.org_vlanclaims.yaml]  CustomResourceDefinition vlanclaims.vlan.resource.nephio.org",
        "        ├── [vlan.resource.nephio.org_vlanindices.yaml]  CustomResourceDefinition vlanindices.vlan.resource.nephio.org",
        "        └── [vlan.resource.nephio.org_vlans.yaml]  CustomResourceDefinition vlans.vlan.resource.nephio.org"
    ]
}

TASK [kpt : Render package: nephio/optional/resource-backend] ******************
Monday 13 October 2025  16:19:24 +0000 (0:00:00.061)       0:00:19.257 ******** 
Monday 13 October 2025  16:19:24 +0000 (0:00:00.061)       0:00:19.256 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:25 +0000 (0:00:00.489)       0:00:19.747 ******** 
Monday 13 October 2025  16:19:25 +0000 (0:00:00.489)       0:00:19.746 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/resource-backend] ***
Monday 13 October 2025  16:19:25 +0000 (0:00:00.314)       0:00:20.062 ******** 
Monday 13 October 2025  16:19:25 +0000 (0:00:00.314)       0:00:20.061 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/resource-backend] *******
Monday 13 October 2025  16:19:27 +0000 (0:00:01.578)       0:00:21.641 ******** 
Monday 13 October 2025  16:19:27 +0000 (0:00:01.578)       0:00:21.640 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Common subdirectories: /tmp/kpt-1297634278/local-main/app and /tmp/kpt-1297634278/target-main/app",
        "Common subdirectories: /tmp/kpt-1297634278/local-main/crd and /tmp/kpt-1297634278/target-main/crd",
        "Only in /tmp/kpt-1297634278/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:27 +0000 (0:00:00.083)       0:00:21.724 ******** 
Monday 13 October 2025  16:19:27 +0000 (0:00:00.083)       0:00:21.723 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/resource-backend] ********************
Monday 13 October 2025  16:19:27 +0000 (0:00:00.413)       0:00:22.137 ******** 
Monday 13 October 2025  16:19:27 +0000 (0:00:00.413)       0:00:22.136 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/resource-backend] ***
Monday 13 October 2025  16:19:27 +0000 (0:00:00.056)       0:00:22.194 ******** 
Monday 13 October 2025  16:19:27 +0000 (0:00:00.056)       0:00:22.193 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/optional/resource-backend] *******************
Monday 13 October 2025  16:19:27 +0000 (0:00:00.076)       0:00:22.270 ******** 
Monday 13 October 2025  16:19:27 +0000 (0:00:00.076)       0:00:22.269 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:28 +0000 (0:00:00.340)       0:00:22.611 ******** 
Monday 13 October 2025  16:19:28 +0000 (0:00:00.340)       0:00:22.610 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:28 +0000 (0:00:00.056)       0:00:22.668 ******** 
Monday 13 October 2025  16:19:28 +0000 (0:00:00.056)       0:00:22.667 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:28 +0000 (0:00:00.109)       0:00:22.777 ******** 
Monday 13 October 2025  16:19:28 +0000 (0:00:00.109)       0:00:22.776 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/distros/sandbox/metallb] ***
Monday 13 October 2025  16:19:28 +0000 (0:00:00.059)       0:00:22.837 ******** 
Monday 13 October 2025  16:19:28 +0000 (0:00:00.059)       0:00:22.836 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/metallb] ****************************
Monday 13 October 2025  16:19:28 +0000 (0:00:00.280)       0:00:23.117 ******** 
Monday 13 October 2025  16:19:28 +0000 (0:00:00.280)       0:00:23.117 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/metallb] *******
Monday 13 October 2025  16:19:29 +0000 (0:00:00.333)       0:00:23.451 ******** 
Monday 13 October 2025  16:19:29 +0000 (0:00:00.333)       0:00:23.450 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/metallb] *****
Monday 13 October 2025  16:19:29 +0000 (0:00:00.324)       0:00:23.775 ******** 
Monday 13 October 2025  16:19:29 +0000 (0:00:00.324)       0:00:23.775 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"metallb\"",
        "├── [Kptfile]  Kptfile metallb",
        "├── [metallb-native.yaml]  CustomResourceDefinition addresspools.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition bfdprofiles.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition bgpadvertisements.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition bgppeers.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition communities.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition ipaddresspools.metallb.io",
        "├── [metallb-native.yaml]  CustomResourceDefinition l2advertisements.metallb.io",
        "├── [metallb-native.yaml]  Namespace metallb-system",
        "├── [metallb-native.yaml]  ClusterRole metallb-system:controller",
        "├── [metallb-native.yaml]  ClusterRoleBinding metallb-system:controller",
        "├── [metallb-native.yaml]  ClusterRole metallb-system:speaker",
        "├── [metallb-native.yaml]  ClusterRoleBinding metallb-system:speaker",
        "├── [metallb-native.yaml]  ValidatingWebhookConfiguration metallb-webhook-configuration",
        "├── [metallb-native.yaml]  Deployment metallb-system/controller",
        "├── [metallb-native.yaml]  Role metallb-system/controller",
        "├── [metallb-native.yaml]  RoleBinding metallb-system/controller",
        "├── [metallb-native.yaml]  ServiceAccount metallb-system/controller",
        "├── [metallb-native.yaml]  Role metallb-system/pod-lister",
        "├── [metallb-native.yaml]  RoleBinding metallb-system/pod-lister",
        "├── [metallb-native.yaml]  DaemonSet metallb-system/speaker",
        "├── [metallb-native.yaml]  ServiceAccount metallb-system/speaker",
        "├── [metallb-native.yaml]  Secret metallb-system/webhook-server-cert",
        "├── [metallb-native.yaml]  Service metallb-system/webhook-service",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup metallb-system/inventory-87102548"
    ]
}

TASK [kpt : Render package: distros/sandbox/metallb] ***************************
Monday 13 October 2025  16:19:29 +0000 (0:00:00.084)       0:00:23.860 ******** 
Monday 13 October 2025  16:19:29 +0000 (0:00:00.084)       0:00:23.860 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:30 +0000 (0:00:00.464)       0:00:24.325 ******** 
Monday 13 October 2025  16:19:30 +0000 (0:00:00.464)       0:00:24.324 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/metallb] ***
Monday 13 October 2025  16:19:30 +0000 (0:00:00.315)       0:00:24.641 ******** 
Monday 13 October 2025  16:19:30 +0000 (0:00:00.315)       0:00:24.640 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/metallb] ****************
Monday 13 October 2025  16:19:32 +0000 (0:00:01.693)       0:00:26.334 ******** 
Monday 13 October 2025  16:19:32 +0000 (0:00:01.693)       0:00:26.333 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-326629401/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:32 +0000 (0:00:00.073)       0:00:26.407 ******** 
Monday 13 October 2025  16:19:32 +0000 (0:00:00.073)       0:00:26.406 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/metallb] *****************************
Monday 13 October 2025  16:19:32 +0000 (0:00:00.319)       0:00:26.726 ******** 
Monday 13 October 2025  16:19:32 +0000 (0:00:00.319)       0:00:26.725 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/metallb] **********
Monday 13 October 2025  16:19:32 +0000 (0:00:00.097)       0:00:26.823 ******** 
Monday 13 October 2025  16:19:32 +0000 (0:00:00.096)       0:00:26.822 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: distros/sandbox/metallb] ****************************
Monday 13 October 2025  16:19:32 +0000 (0:00:00.060)       0:00:26.884 ******** 
Monday 13 October 2025  16:19:32 +0000 (0:00:00.060)       0:00:26.883 ******** 
ASYNC OK on 127.0.0.1: jid=j670061789920.194945
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:38 +0000 (0:00:05.848)       0:00:32.733 ******** 
Monday 13 October 2025  16:19:38 +0000 (0:00:05.848)       0:00:32.732 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:38 +0000 (0:00:00.053)       0:00:32.786 ******** 
Monday 13 October 2025  16:19:38 +0000 (0:00:00.053)       0:00:32.786 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:38 +0000 (0:00:00.083)       0:00:32.870 ******** 
Monday 13 October 2025  16:19:38 +0000 (0:00:00.083)       0:00:32.869 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:38 +0000 (0:00:00.073)       0:00:32.944 ******** 
Monday 13 October 2025  16:19:38 +0000 (0:00:00.074)       0:00:32.943 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/metallb-sandbox-config] *************
Monday 13 October 2025  16:19:38 +0000 (0:00:00.337)       0:00:33.282 ******** 
Monday 13 October 2025  16:19:38 +0000 (0:00:00.337)       0:00:33.281 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:39 +0000 (0:00:00.275)       0:00:33.557 ******** 
Monday 13 October 2025  16:19:39 +0000 (0:00:00.275)       0:00:33.557 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:39 +0000 (0:00:00.382)       0:00:33.940 ******** 
Monday 13 October 2025  16:19:39 +0000 (0:00:00.382)       0:00:33.939 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"metallb-sandbox-config\"",
        "├── [Kptfile]  Kptfile metallb-sandbox-config",
        "├── [ipaddresspool.yaml]  IPAddressPool metallb-system/nephio",
        "├── [l2advertisement.yaml]  L2Advertisement metallb-system/nephio",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup metallb-system/inventory-41038844"
    ]
}

TASK [kpt : Render package: distros/sandbox/metallb-sandbox-config] ************
Monday 13 October 2025  16:19:39 +0000 (0:00:00.070)       0:00:34.011 ******** 
Monday 13 October 2025  16:19:39 +0000 (0:00:00.070)       0:00:34.010 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:40 +0000 (0:00:00.385)       0:00:34.396 ******** 
Monday 13 October 2025  16:19:40 +0000 (0:00:00.385)       0:00:34.395 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:40 +0000 (0:00:00.299)       0:00:34.696 ******** 
Monday 13 October 2025  16:19:40 +0000 (0:00:00.299)       0:00:34.695 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:41 +0000 (0:00:01.466)       0:00:36.163 ******** 
Monday 13 October 2025  16:19:41 +0000 (0:00:01.466)       0:00:36.162 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2231452757/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:41 +0000 (0:00:00.069)       0:00:36.232 ******** 
Monday 13 October 2025  16:19:41 +0000 (0:00:00.069)       0:00:36.231 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/metallb-sandbox-config] **************
Monday 13 October 2025  16:19:42 +0000 (0:00:00.354)       0:00:36.587 ******** 
Monday 13 October 2025  16:19:42 +0000 (0:00:00.354)       0:00:36.586 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/metallb-sandbox-config] ***
Monday 13 October 2025  16:19:42 +0000 (0:00:00.120)       0:00:36.707 ******** 
Monday 13 October 2025  16:19:42 +0000 (0:00:00.120)       0:00:36.706 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: distros/sandbox/metallb-sandbox-config] *************
Monday 13 October 2025  16:19:42 +0000 (0:00:00.072)       0:00:36.780 ******** 
Monday 13 October 2025  16:19:42 +0000 (0:00:00.072)       0:00:36.779 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:42 +0000 (0:00:00.399)       0:00:37.179 ******** 
Monday 13 October 2025  16:19:42 +0000 (0:00:00.399)       0:00:37.179 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:42 +0000 (0:00:00.060)       0:00:37.240 ******** 
Monday 13 October 2025  16:19:42 +0000 (0:00:00.060)       0:00:37.239 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:43 +0000 (0:00:00.101)       0:00:37.342 ******** 
Monday 13 October 2025  16:19:43 +0000 (0:00:00.101)       0:00:37.341 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/infra/capi/cluster-capi] ***
Monday 13 October 2025  16:19:43 +0000 (0:00:00.063)       0:00:37.406 ******** 
Monday 13 October 2025  16:19:43 +0000 (0:00:00.063)       0:00:37.405 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: infra/capi/cluster-capi] ****************************
Monday 13 October 2025  16:19:43 +0000 (0:00:00.357)       0:00:37.764 ******** 
Monday 13 October 2025  16:19:43 +0000 (0:00:00.357)       0:00:37.763 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for infra/capi/cluster-capi] *******
Monday 13 October 2025  16:19:43 +0000 (0:00:00.395)       0:00:38.159 ******** 
Monday 13 October 2025  16:19:43 +0000 (0:00:00.395)       0:00:38.159 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for infra/capi/cluster-capi] *****
Monday 13 October 2025  16:19:44 +0000 (0:00:00.522)       0:00:38.682 ******** 
Monday 13 October 2025  16:19:44 +0000 (0:00:00.522)       0:00:38.681 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"cluster-capi\"",
        "├── [Kptfile]  Kptfile cluster-capi",
        "├── [cluster-api-bootstrap.yaml]  ClusterRole capi-kubeadm-bootstrap-manager-role",
        "├── [cluster-api-bootstrap.yaml]  ClusterRoleBinding capi-kubeadm-bootstrap-manager-rolebinding",
        "├── [cluster-api-bootstrap.yaml]  MutatingWebhookConfiguration capi-kubeadm-bootstrap-mutating-webhook-configuration",
        "├── [cluster-api-bootstrap.yaml]  Namespace capi-kubeadm-bootstrap-system",
        "├── [cluster-api-bootstrap.yaml]  ValidatingWebhookConfiguration capi-kubeadm-bootstrap-validating-webhook-configuration",
        "├── [cluster-api-bootstrap.yaml]  CustomResourceDefinition kubeadmconfigs.bootstrap.cluster.x-k8s.io",
        "├── [cluster-api-bootstrap.yaml]  CustomResourceDefinition kubeadmconfigtemplates.bootstrap.cluster.x-k8s.io",
        "├── [cluster-api-bootstrap.yaml]  Deployment capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-controller-manager",
        "├── [cluster-api-bootstrap.yaml]  Role capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-leader-election-role",
        "├── [cluster-api-bootstrap.yaml]  RoleBinding capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-leader-election-rolebinding",
        "├── [cluster-api-bootstrap.yaml]  ServiceAccount capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-manager",
        "├── [cluster-api-bootstrap.yaml]  Issuer capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-selfsigned-issuer",
        "├── [cluster-api-bootstrap.yaml]  Certificate capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-serving-cert",
        "├── [cluster-api-bootstrap.yaml]  Service capi-kubeadm-bootstrap-system/capi-kubeadm-bootstrap-webhook-service",
        "├── [cluster-api-control-plane.yaml]  ClusterRole capi-kubeadm-control-plane-aggregated-manager-role",
        "├── [cluster-api-control-plane.yaml]  ClusterRole capi-kubeadm-control-plane-manager-role",
        "├── [cluster-api-control-plane.yaml]  ClusterRoleBinding capi-kubeadm-control-plane-manager-rolebinding",
        "├── [cluster-api-control-plane.yaml]  MutatingWebhookConfiguration capi-kubeadm-control-plane-mutating-webhook-configuration",
        "├── [cluster-api-control-plane.yaml]  Namespace capi-kubeadm-control-plane-system",
        "├── [cluster-api-control-plane.yaml]  ValidatingWebhookConfiguration capi-kubeadm-control-plane-validating-webhook-configuration",
        "├── [cluster-api-control-plane.yaml]  CustomResourceDefinition kubeadmcontrolplanes.controlplane.cluster.x-k8s.io",
        "├── [cluster-api-control-plane.yaml]  CustomResourceDefinition kubeadmcontrolplanetemplates.controlplane.cluster.x-k8s.io",
        "├── [cluster-api-control-plane.yaml]  Deployment capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-controller-manager",
        "├── [cluster-api-control-plane.yaml]  Role capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-leader-election-role",
        "├── [cluster-api-control-plane.yaml]  RoleBinding capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-leader-election-rolebinding",
        "├── [cluster-api-control-plane.yaml]  ServiceAccount capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-manager",
        "├── [cluster-api-control-plane.yaml]  Issuer capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-selfsigned-issuer",
        "├── [cluster-api-control-plane.yaml]  Certificate capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-serving-cert",
        "├── [cluster-api-control-plane.yaml]  Service capi-kubeadm-control-plane-system/capi-kubeadm-control-plane-webhook-service",
        "├── [cluster-api-core.yaml]  ClusterRole capi-aggregated-manager-role",
        "├── [cluster-api-core.yaml]  ClusterRole capi-manager-role",
        "├── [cluster-api-core.yaml]  ClusterRoleBinding capi-manager-rolebinding",
        "├── [cluster-api-core.yaml]  MutatingWebhookConfiguration capi-mutating-webhook-configuration",
        "├── [cluster-api-core.yaml]  Namespace capi-system",
        "├── [cluster-api-core.yaml]  ValidatingWebhookConfiguration capi-validating-webhook-configuration",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition clusterclasses.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition clusterresourcesetbindings.addons.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition clusterresourcesets.addons.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition clusters.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition extensionconfigs.runtime.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition ipaddressclaims.ipam.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition ipaddresses.ipam.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition machinedeployments.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition machinehealthchecks.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition machinepools.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition machines.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  CustomResourceDefinition machinesets.cluster.x-k8s.io",
        "├── [cluster-api-core.yaml]  Deployment capi-system/capi-controller-manager",
        "├── [cluster-api-core.yaml]  Role capi-system/capi-leader-election-role",
        "├── [cluster-api-core.yaml]  RoleBinding capi-system/capi-leader-election-rolebinding",
        "├── [cluster-api-core.yaml]  ServiceAccount capi-system/capi-manager",
        "├── [cluster-api-core.yaml]  Issuer capi-system/capi-selfsigned-issuer",
        "├── [cluster-api-core.yaml]  Certificate capi-system/capi-serving-cert",
        "├── [cluster-api-core.yaml]  Service capi-system/capi-webhook-service",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup default/inventory-71786333"
    ]
}

TASK [kpt : Render package: infra/capi/cluster-capi] ***************************
Monday 13 October 2025  16:19:44 +0000 (0:00:00.082)       0:00:38.764 ******** 
Monday 13 October 2025  16:19:44 +0000 (0:00:00.082)       0:00:38.764 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:45 +0000 (0:00:00.793)       0:00:39.557 ******** 
Monday 13 October 2025  16:19:45 +0000 (0:00:00.793)       0:00:39.557 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: infra/capi/cluster-capi] ***
Monday 13 October 2025  16:19:45 +0000 (0:00:00.280)       0:00:39.838 ******** 
Monday 13 October 2025  16:19:45 +0000 (0:00:00.280)       0:00:39.837 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: infra/capi/cluster-capi] ****************
Monday 13 October 2025  16:19:47 +0000 (0:00:02.182)       0:00:42.020 ******** 
Monday 13 October 2025  16:19:47 +0000 (0:00:02.182)       0:00:42.020 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-4176848326/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:47 +0000 (0:00:00.069)       0:00:42.090 ******** 
Monday 13 October 2025  16:19:47 +0000 (0:00:00.069)       0:00:42.089 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: infra/capi/cluster-capi] *****************************
Monday 13 October 2025  16:19:48 +0000 (0:00:00.262)       0:00:42.353 ******** 
Monday 13 October 2025  16:19:48 +0000 (0:00:00.262)       0:00:42.352 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for infra/capi/cluster-capi] **********
Monday 13 October 2025  16:19:48 +0000 (0:00:00.039)       0:00:42.392 ******** 
Monday 13 October 2025  16:19:48 +0000 (0:00:00.039)       0:00:42.392 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: infra/capi/cluster-capi] ****************************
Monday 13 October 2025  16:19:48 +0000 (0:00:00.138)       0:00:42.531 ******** 
Monday 13 October 2025  16:19:48 +0000 (0:00:00.138)       0:00:42.530 ******** 
ASYNC OK on 127.0.0.1: jid=j703207544562.196665
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:19:54 +0000 (0:00:05.833)       0:00:48.364 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:05.833)       0:00:48.363 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:19:54 +0000 (0:00:00.043)       0:00:48.408 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:00.043)       0:00:48.407 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:19:54 +0000 (0:00:00.082)       0:00:48.491 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:00.082)       0:00:48.490 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:54 +0000 (0:00:00.076)       0:00:48.567 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:00.076)       0:00:48.566 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: infra/capi/cluster-capi-infrastructure-docker] ******
Monday 13 October 2025  16:19:54 +0000 (0:00:00.275)       0:00:48.843 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:00.275)       0:00:48.842 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:54 +0000 (0:00:00.288)       0:00:49.132 ******** 
Monday 13 October 2025  16:19:54 +0000 (0:00:00.288)       0:00:49.131 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:55 +0000 (0:00:00.391)       0:00:49.523 ******** 
Monday 13 October 2025  16:19:55 +0000 (0:00:00.391)       0:00:49.522 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"cluster-capi-infrastructure-docker\"",
        "├── [Kptfile]  Kptfile cluster-capi-infrastructure-docker",
        "├── [cluster-api-infrastructure-docker.yaml]  ClusterRole capd-manager-role",
        "├── [cluster-api-infrastructure-docker.yaml]  ClusterRoleBinding capd-manager-rolebinding",
        "├── [cluster-api-infrastructure-docker.yaml]  MutatingWebhookConfiguration capd-mutating-webhook-configuration",
        "├── [cluster-api-infrastructure-docker.yaml]  Namespace capd-system",
        "├── [cluster-api-infrastructure-docker.yaml]  ValidatingWebhookConfiguration capd-validating-webhook-configuration",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockerclusters.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockerclustertemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockermachinepools.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockermachinepooltemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockermachines.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  CustomResourceDefinition dockermachinetemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-docker.yaml]  Deployment capd-system/capd-controller-manager",
        "├── [cluster-api-infrastructure-docker.yaml]  Role capd-system/capd-leader-election-role",
        "├── [cluster-api-infrastructure-docker.yaml]  RoleBinding capd-system/capd-leader-election-rolebinding",
        "├── [cluster-api-infrastructure-docker.yaml]  ServiceAccount capd-system/capd-manager",
        "├── [cluster-api-infrastructure-docker.yaml]  Issuer capd-system/capd-selfsigned-issuer",
        "├── [cluster-api-infrastructure-docker.yaml]  Certificate capd-system/capd-serving-cert",
        "├── [cluster-api-infrastructure-docker.yaml]  Service capd-system/capd-webhook-service",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup capd-system/inventory-08298698"
    ]
}

TASK [kpt : Render package: infra/capi/cluster-capi-infrastructure-docker] *****
Monday 13 October 2025  16:19:55 +0000 (0:00:00.074)       0:00:49.598 ******** 
Monday 13 October 2025  16:19:55 +0000 (0:00:00.074)       0:00:49.597 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:19:55 +0000 (0:00:00.409)       0:00:50.007 ******** 
Monday 13 October 2025  16:19:55 +0000 (0:00:00.409)       0:00:50.006 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:56 +0000 (0:00:00.372)       0:00:50.379 ******** 
Monday 13 October 2025  16:19:56 +0000 (0:00:00.372)       0:00:50.378 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:57 +0000 (0:00:01.662)       0:00:52.041 ******** 
Monday 13 October 2025  16:19:57 +0000 (0:00:01.662)       0:00:52.041 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2247838391/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:19:57 +0000 (0:00:00.072)       0:00:52.114 ******** 
Monday 13 October 2025  16:19:57 +0000 (0:00:00.072)       0:00:52.113 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: infra/capi/cluster-capi-infrastructure-docker] *******
Monday 13 October 2025  16:19:58 +0000 (0:00:00.286)       0:00:52.400 ******** 
Monday 13 October 2025  16:19:58 +0000 (0:00:00.286)       0:00:52.399 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for infra/capi/cluster-capi-infrastructure-docker] ***
Monday 13 October 2025  16:19:58 +0000 (0:00:00.052)       0:00:52.453 ******** 
Monday 13 October 2025  16:19:58 +0000 (0:00:00.052)       0:00:52.452 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: infra/capi/cluster-capi-infrastructure-docker] ******
Monday 13 October 2025  16:19:58 +0000 (0:00:00.076)       0:00:52.529 ******** 
Monday 13 October 2025  16:19:58 +0000 (0:00:00.076)       0:00:52.528 ******** 
ASYNC OK on 127.0.0.1: jid=j945689158680.197757
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:20:04 +0000 (0:00:05.909)       0:00:58.439 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:05.909)       0:00:58.438 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:20:04 +0000 (0:00:00.040)       0:00:58.479 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:00.040)       0:00:58.478 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:20:04 +0000 (0:00:00.084)       0:00:58.564 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:00.084)       0:00:58.563 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:04 +0000 (0:00:00.070)       0:00:58.635 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:00.070)       0:00:58.634 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: infra/capi/cluster-capi-kind-docker-templates] ******
Monday 13 October 2025  16:20:04 +0000 (0:00:00.291)       0:00:58.926 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:00.291)       0:00:58.925 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:04 +0000 (0:00:00.266)       0:00:59.192 ******** 
Monday 13 October 2025  16:20:04 +0000 (0:00:00.266)       0:00:59.191 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:05 +0000 (0:00:00.343)       0:00:59.536 ******** 
Monday 13 October 2025  16:20:05 +0000 (0:00:00.343)       0:00:59.535 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"cluster-capi-kind-docker-templates\"",
        "├── [Kptfile]  Kptfile cluster-capi-kind-docker-templates",
        "├── [cluster_class.yaml]  ClusterClass default/docker",
        "├── [docker_cluster_template.yaml]  DockerClusterTemplate default/docker-cluster",
        "├── [docker_machine_template_control_plane.yaml]  DockerMachineTemplate default/docker-control-plane",
        "├── [docker_machine_template_worker.yaml]  DockerMachineTemplate default/docker-default-worker-machinetemplate",
        "├── [kubeadm_config_template.yaml]  KubeadmConfigTemplate default/docker-default-worker-bootstraptemplate",
        "├── [kubeadm_controlplane_template.yaml]  KubeadmControlPlaneTemplate default/docker-control-plane",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup default/inventory-87932671"
    ]
}

TASK [kpt : Render package: infra/capi/cluster-capi-kind-docker-templates] *****
Monday 13 October 2025  16:20:05 +0000 (0:00:00.071)       0:00:59.607 ******** 
Monday 13 October 2025  16:20:05 +0000 (0:00:00.071)       0:00:59.606 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:20:05 +0000 (0:00:00.408)       0:01:00.016 ******** 
Monday 13 October 2025  16:20:05 +0000 (0:00:00.408)       0:01:00.015 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:06 +0000 (0:00:00.389)       0:01:00.406 ******** 
Monday 13 October 2025  16:20:06 +0000 (0:00:00.389)       0:01:00.405 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:07 +0000 (0:00:01.560)       0:01:01.966 ******** 
Monday 13 October 2025  16:20:07 +0000 (0:00:01.560)       0:01:01.965 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-3754829847/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:20:07 +0000 (0:00:00.080)       0:01:02.046 ******** 
Monday 13 October 2025  16:20:07 +0000 (0:00:00.080)       0:01:02.046 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: infra/capi/cluster-capi-kind-docker-templates] *******
Monday 13 October 2025  16:20:08 +0000 (0:00:00.316)       0:01:02.363 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.316)       0:01:02.362 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for infra/capi/cluster-capi-kind-docker-templates] ***
Monday 13 October 2025  16:20:08 +0000 (0:00:00.051)       0:01:02.414 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.051)       0:01:02.414 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: infra/capi/cluster-capi-kind-docker-templates] ******
Monday 13 October 2025  16:20:08 +0000 (0:00:00.076)       0:01:02.491 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.076)       0:01:02.490 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:20:08 +0000 (0:00:00.340)       0:01:02.832 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.340)       0:01:02.831 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:20:08 +0000 (0:00:00.037)       0:01:02.870 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.037)       0:01:02.869 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [bootstrap : Wait for packages to be applied] *****************************
Monday 13 October 2025  16:20:08 +0000 (0:00:00.107)       0:01:02.977 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.107)       0:01:02.977 ******** 
skipping: [127.0.0.1]

TASK [bootstrap : Create list of namespaces] ***********************************
Monday 13 October 2025  16:20:08 +0000 (0:00:00.053)       0:01:03.031 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.053)       0:01:03.030 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Wait for deployments] ****************************************
Monday 13 October 2025  16:20:08 +0000 (0:00:00.104)       0:01:03.135 ******** 
Monday 13 October 2025  16:20:08 +0000 (0:00:00.104)       0:01:03.134 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=cert-manager)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=gitea)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=backend-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=metallb-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=capi-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=capi-kubeadm-control-plane-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=capi-kubeadm-bootstrap-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=capd-system)

TASK [bootstrap : Get deployment resources in namespace cert-manager] **********
Monday 13 October 2025  16:20:09 +0000 (0:00:00.265)       0:01:03.401 ******** 
Monday 13 October 2025  16:20:09 +0000 (0:00:00.265)       0:01:03.400 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace cert-manager] ********
Monday 13 October 2025  16:20:10 +0000 (0:00:01.217)       0:01:04.618 ******** 
Monday 13 October 2025  16:20:10 +0000 (0:00:01.217)       0:01:04.617 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|cert-manager|cert-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|cert-manager|cert-manager\"},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\",\"app.kubernetes.io/version\":\"v1.13.2\"},\"name\":\"cert-manager\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9402\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\",\"app.kubernetes.io/version\":\"v1.13.2\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--cluster-resource-namespace=$(POD_NAMESPACE)\",\"--leader-election-namespace=kube-system\",\"--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.13.2\",\"--max-concurrent-challenges=60\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-controller:v1.13.2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager-controller\",\"ports\":[{\"containerPort\":9402,\"name\":\"http-metrics\",\"protocol\":\"TCP\"},{\"containerPort\":9403,\"name\":\"http-healthz\",\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:37Z",
                "generation": 1,
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.13.2"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/instance": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/version": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/path": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"cert-manager-controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":9402,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9403,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:enableServiceLinks": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:37Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:53:06Z"
                    }
                ],
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "26210",
                "uid": "344879ab-3892-48e9-85f4-909b56fdcb16"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cert-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cert-manager",
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cert-manager",
                            "app.kubernetes.io/version": "v1.13.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--cluster-resource-namespace=$(POD_NAMESPACE)",
                                    "--leader-election-namespace=kube-system",
                                    "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.13.2",
                                    "--max-concurrent-challenges=60"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-controller:v1.13.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager-controller",
                                "ports": [
                                    {
                                        "containerPort": 9402,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9403,
                                        "name": "http-healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager",
                        "serviceAccountName": "cert-manager",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:53:06Z",
                        "lastUpdateTime": "2025-10-13T15:53:06Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:37Z",
                        "lastUpdateTime": "2025-10-13T15:53:06Z",
                        "message": "ReplicaSet \"cert-manager-7d75f47cc5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|cert-manager|cert-manager-cainjector",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|cert-manager|cert-manager-cainjector\"},\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\",\"app.kubernetes.io/version\":\"v1.13.2\"},\"name\":\"cert-manager-cainjector\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\",\"app.kubernetes.io/version\":\"v1.13.2\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--leader-election-namespace=kube-system\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-cainjector:v1.13.2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager-cainjector\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager-cainjector\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:37Z",
                "generation": 1,
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.13.2"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/instance": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/version": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"cert-manager-cainjector\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:enableServiceLinks": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:37Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:53:09Z"
                    }
                ],
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "26229",
                "uid": "b5659ccd-6f0b-4f37-ac48-1e3f0ddc8186"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "cainjector",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cainjector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cainjector",
                            "app.kubernetes.io/component": "cainjector",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cainjector",
                            "app.kubernetes.io/version": "v1.13.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election-namespace=kube-system"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-cainjector:v1.13.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager-cainjector",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-cainjector",
                        "serviceAccountName": "cert-manager-cainjector",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:53:09Z",
                        "lastUpdateTime": "2025-10-13T15:53:09Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:37Z",
                        "lastUpdateTime": "2025-10-13T15:53:09Z",
                        "message": "ReplicaSet \"cert-manager-cainjector-c778d44d8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|cert-manager|cert-manager-webhook",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|cert-manager|cert-manager-webhook\"},\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\",\"app.kubernetes.io/version\":\"v1.13.2\"},\"name\":\"cert-manager-webhook\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\",\"app.kubernetes.io/version\":\"v1.13.2\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--secure-port=10250\",\"--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)\",\"--dynamic-serving-ca-secret-name=cert-manager-webhook-ca\",\"--dynamic-serving-dns-names=cert-manager-webhook\",\"--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)\",\"--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-webhook:v1.13.2\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"cert-manager-webhook\",\"ports\":[{\"containerPort\":10250,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":6080,\"name\":\"healthcheck\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager-webhook\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:37Z",
                "generation": 1,
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.13.2"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/instance": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/version": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"cert-manager-webhook\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":6080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:enableServiceLinks": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:37Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:53:25Z"
                    }
                ],
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "26279",
                "uid": "4ee0df46-15fe-49b3-a5fb-43b43b4356bd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "webhook",
                            "app.kubernetes.io/component": "webhook",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "webhook",
                            "app.kubernetes.io/version": "v1.13.2"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--secure-port=10250",
                                    "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                                    "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                                    "--dynamic-serving-dns-names=cert-manager-webhook",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-webhook:v1.13.2",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cert-manager-webhook",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 6080,
                                        "name": "healthcheck",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-webhook",
                        "serviceAccountName": "cert-manager-webhook",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:53:25Z",
                        "lastUpdateTime": "2025-10-13T15:53:25Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:37Z",
                        "lastUpdateTime": "2025-10-13T15:53:25Z",
                        "message": "ReplicaSet \"cert-manager-webhook-55d76f97bb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace cert-manager] **************
Monday 13 October 2025  16:20:10 +0000 (0:00:00.128)       0:01:04.746 ******** 
Monday 13 October 2025  16:20:10 +0000 (0:00:00.128)       0:01:04.745 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'cert-manager', 'namespace': 'cert-manager', 'uid': '344879ab-3892-48e9-85f4-909b56fdcb16', 'resourceVersion': '26210', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:37Z', 'labels': {'app': 'cert-manager', 'app.kubernetes.io/component': 'controller', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cert-manager', 'app.kubernetes.io/version': 'v1.13.2'}, 'annotations': {'config.k8s.io/owning-inventory': '588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|cert-manager|cert-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580","internal.kpt.dev/upstream-identifier":"apps|Deployment|cert-manager|cert-manager"},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"v1.13.2"},"name":"cert-manager","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager"}},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"9402","prometheus.io/scrape":"true"},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"v1.13.2"}},"spec":{"containers":[{"args":["--v=2","--cluster-resource-namespace=$(POD_NAMESPACE)","--leader-election-namespace=kube-system","--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.13.2","--max-concurrent-challenges=60"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-controller:v1.13.2","imagePullPolicy":"IfNotPresent","name":"cert-manager-controller","ports":[{"containerPort":9402,"name":"http-metrics","protocol":"TCP"},{"containerPort":9403,"name":"http-healthz","protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/path': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:containers': {'k:{"name":"cert-manager-controller"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":9402,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9403,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:53:06Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/component': 'controller', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cert-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'cert-manager', 'app.kubernetes.io/component': 'controller', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cert-manager', 'app.kubernetes.io/version': 'v1.13.2'}, 'annotations': {'prometheus.io/path': '/metrics', 'prometheus.io/port': '9402', 'prometheus.io/scrape': 'true'}}, 'spec': {'containers': [{'name': 'cert-manager-controller', 'image': 'quay.io/jetstack/cert-manager-controller:v1.13.2', 'args': ['--v=2', '--cluster-resource-namespace=$(POD_NAMESPACE)', '--leader-election-namespace=kube-system', '--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.13.2', '--max-concurrent-challenges=60'], 'ports': [{'name': 'http-metrics', 'containerPort': 9402, 'protocol': 'TCP'}, {'name': 'http-healthz', 'containerPort': 9403, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'cert-manager', 'serviceAccount': 'cert-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'enableServiceLinks': False}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:06Z', 'lastTransitionTime': '2025-10-13T15:53:06Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:06Z', 'lastTransitionTime': '2025-10-13T15:52:37Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "cert-manager-7d75f47cc5" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'cert-manager-cainjector', 'namespace': 'cert-manager', 'uid': 'b5659ccd-6f0b-4f37-ac48-1e3f0ddc8186', 'resourceVersion': '26229', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:37Z', 'labels': {'app': 'cainjector', 'app.kubernetes.io/component': 'cainjector', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cainjector', 'app.kubernetes.io/version': 'v1.13.2'}, 'annotations': {'config.k8s.io/owning-inventory': '588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|cert-manager|cert-manager-cainjector', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580","internal.kpt.dev/upstream-identifier":"apps|Deployment|cert-manager|cert-manager-cainjector"},"labels":{"app":"cainjector","app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector","app.kubernetes.io/version":"v1.13.2"},"name":"cert-manager-cainjector","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector"}},"template":{"metadata":{"labels":{"app":"cainjector","app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector","app.kubernetes.io/version":"v1.13.2"}},"spec":{"containers":[{"args":["--v=2","--leader-election-namespace=kube-system"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-cainjector:v1.13.2","imagePullPolicy":"IfNotPresent","name":"cert-manager-cainjector","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager-cainjector"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:containers': {'k:{"name":"cert-manager-cainjector"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:53:09Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/component': 'cainjector', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cainjector'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'cainjector', 'app.kubernetes.io/component': 'cainjector', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'cainjector', 'app.kubernetes.io/version': 'v1.13.2'}}, 'spec': {'containers': [{'name': 'cert-manager-cainjector', 'image': 'quay.io/jetstack/cert-manager-cainjector:v1.13.2', 'args': ['--v=2', '--leader-election-namespace=kube-system'], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'cert-manager-cainjector', 'serviceAccount': 'cert-manager-cainjector', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'enableServiceLinks': False}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:09Z', 'lastTransitionTime': '2025-10-13T15:53:09Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:09Z', 'lastTransitionTime': '2025-10-13T15:52:37Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "cert-manager-cainjector-c778d44d8" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'cert-manager-webhook', 'namespace': 'cert-manager', 'uid': '4ee0df46-15fe-49b3-a5fb-43b43b4356bd', 'resourceVersion': '26279', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:37Z', 'labels': {'app': 'webhook', 'app.kubernetes.io/component': 'webhook', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'webhook', 'app.kubernetes.io/version': 'v1.13.2'}, 'annotations': {'config.k8s.io/owning-inventory': '588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|cert-manager|cert-manager-webhook', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"588abbfee584623b0c2b41ca25a525050e8ffd21-1760370744645823580","internal.kpt.dev/upstream-identifier":"apps|Deployment|cert-manager|cert-manager-webhook"},"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"v1.13.2"},"name":"cert-manager-webhook","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook"}},"template":{"metadata":{"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"v1.13.2"}},"spec":{"containers":[{"args":["--v=2","--secure-port=10250","--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)","--dynamic-serving-ca-secret-name=cert-manager-webhook-ca","--dynamic-serving-dns-names=cert-manager-webhook","--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)","--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-webhook:v1.13.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":6080,"scheme":"HTTP"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"cert-manager-webhook","ports":[{"containerPort":10250,"name":"https","protocol":"TCP"},{"containerPort":6080,"name":"healthcheck","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":6080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager-webhook"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/version': {}}}, 'f:spec': {'f:containers': {'k:{"name":"cert-manager-webhook"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":6080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":10250,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:enableServiceLinks': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:53:25Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/component': 'webhook', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'webhook'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'webhook', 'app.kubernetes.io/component': 'webhook', 'app.kubernetes.io/instance': 'cert-manager', 'app.kubernetes.io/name': 'webhook', 'app.kubernetes.io/version': 'v1.13.2'}}, 'spec': {'containers': [{'name': 'cert-manager-webhook', 'image': 'quay.io/jetstack/cert-manager-webhook:v1.13.2', 'args': ['--v=2', '--secure-port=10250', '--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)', '--dynamic-serving-ca-secret-name=cert-manager-webhook-ca', '--dynamic-serving-dns-names=cert-manager-webhook', '--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)', '--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc'], 'ports': [{'name': 'https', 'containerPort': 10250, 'protocol': 'TCP'}, {'name': 'healthcheck', 'containerPort': 6080, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}], 'resources': {}, 'livenessProbe': {'httpGet': {'path': '/livez', 'port': 6080, 'scheme': 'HTTP'}, 'initialDelaySeconds': 60, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/healthz', 'port': 6080, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 1, 'periodSeconds': 5, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'cert-manager-webhook', 'serviceAccount': 'cert-manager-webhook', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'enableServiceLinks': False}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:25Z', 'lastTransitionTime': '2025-10-13T15:53:25Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:25Z', 'lastTransitionTime': '2025-10-13T15:52:37Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "cert-manager-webhook-55d76f97bb" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace gitea] *****************
Monday 13 October 2025  16:20:13 +0000 (0:00:02.878)       0:01:07.625 ******** 
Monday 13 October 2025  16:20:13 +0000 (0:00:02.878)       0:01:07.624 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace gitea] ***************
Monday 13 October 2025  16:20:14 +0000 (0:00:01.245)       0:01:08.870 ******** 
Monday 13 October 2025  16:20:14 +0000 (0:00:01.245)       0:01:08.869 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "cefd0c80b325098c4416d4326f963425db3cb70c-1760370750121622314",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|gitea|gitea-memcached",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"cefd0c80b325098c4416d4326f963425db3cb70c-1760370750121622314\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|gitea|gitea-memcached\"},\"labels\":{\"app.kubernetes.io/instance\":\"gitea\",\"app.kubernetes.io/name\":\"memcached\"},\"name\":\"gitea-memcached\",\"namespace\":\"gitea\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"gitea\",\"app.kubernetes.io/name\":\"memcached\"}},\"strategy\":{\"rollingUpdate\":{},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"app.kubernetes.io/instance\":\"gitea\",\"app.kubernetes.io/name\":\"memcached\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":null,\"podAffinity\":null,\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"gitea\",\"app.kubernetes.io/name\":\"memcached\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":1}]}},\"containers\":[{\"env\":[{\"name\":\"BITNAMI_DEBUG\",\"value\":\"false\"},{\"name\":\"MEMCACHED_PORT_NUMBER\",\"value\":\"11211\"}],\"image\":\"docker.io/bitnamilegacy/memcached:1.6.19-debian-11-r7\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":6,\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"tcpSocket\":{\"port\":\"memcache\"},\"timeoutSeconds\":5},\"name\":\"memcached\",\"ports\":[{\"containerPort\":11211,\"name\":\"memcache\"}],\"readinessProbe\":{\"failureThreshold\":6,\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"tcpSocket\":{\"port\":\"memcache\"},\"timeoutSeconds\":3},\"resources\":{\"limits\":{},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"securityContext\":{\"fsGroup\":1001},\"serviceAccountName\":\"default\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:31Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "gitea",
                    "app.kubernetes.io/name": "memcached"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/instance": {},
                                    "f:app.kubernetes.io/name": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"memcached\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"BITNAMI_DEBUG\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"MEMCACHED_PORT_NUMBER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:tcpSocket": {
                                                        ".": {},
                                                        "f:port": {}
                                                    },
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":11211,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:tcpSocket": {
                                                        ".": {},
                                                        "f:port": {}
                                                    },
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:31Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:52:48Z"
                    }
                ],
                "name": "gitea-memcached",
                "namespace": "gitea",
                "resourceVersion": "26136",
                "uid": "e0b7247c-594a-46fc-982d-2ebe242ce461"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "gitea",
                        "app.kubernetes.io/name": "memcached"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "gitea",
                            "app.kubernetes.io/name": "memcached"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/instance": "gitea",
                                                    "app.kubernetes.io/name": "memcached"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 1
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "BITNAMI_DEBUG",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MEMCACHED_PORT_NUMBER",
                                        "value": "11211"
                                    }
                                ],
                                "image": "docker.io/bitnamilegacy/memcached:1.6.19-debian-11-r7",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": "memcache"
                                    },
                                    "timeoutSeconds": 5
                                },
                                "name": "memcached",
                                "ports": [
                                    {
                                        "containerPort": 11211,
                                        "name": "memcache",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": "memcache"
                                    },
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsNonRoot": true,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1001
                        },
                        "serviceAccount": "default",
                        "serviceAccountName": "default",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:52:48Z",
                        "lastUpdateTime": "2025-10-13T15:52:48Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:31Z",
                        "lastUpdateTime": "2025-10-13T15:52:48Z",
                        "message": "ReplicaSet \"gitea-memcached-bd854f98d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace gitea] *********************
Monday 13 October 2025  16:20:14 +0000 (0:00:00.163)       0:01:09.034 ******** 
Monday 13 October 2025  16:20:14 +0000 (0:00:00.163)       0:01:09.033 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'gitea-memcached', 'namespace': 'gitea', 'uid': 'e0b7247c-594a-46fc-982d-2ebe242ce461', 'resourceVersion': '26136', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:31Z', 'labels': {'app.kubernetes.io/instance': 'gitea', 'app.kubernetes.io/name': 'memcached'}, 'annotations': {'config.k8s.io/owning-inventory': 'cefd0c80b325098c4416d4326f963425db3cb70c-1760370750121622314', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|gitea|gitea-memcached', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"cefd0c80b325098c4416d4326f963425db3cb70c-1760370750121622314","internal.kpt.dev/upstream-identifier":"apps|Deployment|gitea|gitea-memcached"},"labels":{"app.kubernetes.io/instance":"gitea","app.kubernetes.io/name":"memcached"},"name":"gitea-memcached","namespace":"gitea"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"gitea","app.kubernetes.io/name":"memcached"}},"strategy":{"rollingUpdate":{},"type":"RollingUpdate"},"template":{"metadata":{"annotations":null,"labels":{"app.kubernetes.io/instance":"gitea","app.kubernetes.io/name":"memcached"}},"spec":{"affinity":{"nodeAffinity":null,"podAffinity":null,"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/instance":"gitea","app.kubernetes.io/name":"memcached"}},"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"MEMCACHED_PORT_NUMBER","value":"11211"}],"image":"docker.io/bitnamilegacy/memcached:1.6.19-debian-11-r7","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"tcpSocket":{"port":"memcache"},"timeoutSeconds":5},"name":"memcached","ports":[{"containerPort":11211,"name":"memcache"}],"readinessProbe":{"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"tcpSocket":{"port":"memcache"},"timeoutSeconds":3},"resources":{"limits":{},"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"runAsNonRoot":true,"runAsUser":1001},"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"securityContext":{"fsGroup":1001},"serviceAccountName":"default","volumes":[{"emptyDir":{},"name":"tmp"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:31Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:podAntiAffinity': {'.': {}, 'f:preferredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"memcached"}': {'.': {}, 'f:env': {'.': {}, 'k:{"name":"BITNAMI_DEBUG"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"MEMCACHED_PORT_NUMBER"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:tcpSocket': {'.': {}, 'f:port': {}}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":11211,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:tcpSocket': {'.': {}, 'f:port': {}}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"tmp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:48Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/instance': 'gitea', 'app.kubernetes.io/name': 'memcached'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/instance': 'gitea', 'app.kubernetes.io/name': 'memcached'}}, 'spec': {'volumes': [{'name': 'tmp', 'emptyDir': {}}], 'containers': [{'name': 'memcached', 'image': 'docker.io/bitnamilegacy/memcached:1.6.19-debian-11-r7', 'ports': [{'name': 'memcache', 'containerPort': 11211, 'protocol': 'TCP'}], 'env': [{'name': 'BITNAMI_DEBUG', 'value': 'false'}, {'name': 'MEMCACHED_PORT_NUMBER', 'value': '11211'}], 'resources': {'requests': {'cpu': '250m', 'memory': '256Mi'}}, 'volumeMounts': [{'name': 'tmp', 'mountPath': '/tmp'}], 'livenessProbe': {'tcpSocket': {'port': 'memcache'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 6}, 'readinessProbe': {'tcpSocket': {'port': 'memcache'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 3, 'periodSeconds': 5, 'successThreshold': 1, 'failureThreshold': 6}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'runAsUser': 1001, 'runAsNonRoot': True}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'default', 'serviceAccount': 'default', 'securityContext': {'fsGroup': 1001}, 'affinity': {'podAntiAffinity': {'preferredDuringSchedulingIgnoredDuringExecution': [{'weight': 1, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/instance': 'gitea', 'app.kubernetes.io/name': 'memcached'}}, 'topologyKey': 'kubernetes.io/hostname'}}]}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:52:48Z', 'lastTransitionTime': '2025-10-13T15:52:48Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:52:48Z', 'lastTransitionTime': '2025-10-13T15:52:31Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "gitea-memcached-bd854f98d" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace backend-system] ********
Monday 13 October 2025  16:20:15 +0000 (0:00:00.884)       0:01:09.919 ******** 
Monday 13 October 2025  16:20:15 +0000 (0:00:00.884)       0:01:09.918 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace backend-system] ******
Monday 13 October 2025  16:20:16 +0000 (0:00:01.048)       0:01:10.968 ******** 
Monday 13 October 2025  16:20:16 +0000 (0:00:01.048)       0:01:10.967 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "d413c9ded378adc5460582f8d6bdafacce838a0d-1760370755521650922",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|backend-system|resource-backend-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"d413c9ded378adc5460582f8d6bdafacce838a0d-1760370755521650922\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|backend-system|resource-backend-controller\"},\"name\":\"resource-backend-controller\",\"namespace\":\"backend-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"fn.kptgen.dev/controller\":\"resource-backend-controller\",\"fn.kptgen.dev/grpc\":\"resource-backend-controller\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"tbd\",\"app.kubernetes.io/instance\":\"tbd\",\"app.kubernetes.io/managed-by\":\"kpt\",\"app.kubernetes.io/name\":\"resource-backend\",\"app.kubernetes.io/part-of\":\"resource-backend\",\"app.kubernetes.io/version\":\"tbd\",\"fn.kptgen.dev/controller\":\"resource-backend-controller\",\"fn.kptgen.dev/grpc\":\"resource-backend-controller\"},\"name\":\"resource-backend-controller\",\"namespace\":\"backend-system\"},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--health-probe-bind-address=:8081\",\"--metrics-bind-address=127.0.0.1:8080\",\"--leader-elect\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"NODE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"RESOURCE_BACKEND\",\"value\":\"127.0.0.1:9999\"},{\"name\":\"ENABLE_IPCLAIM\",\"value\":\"true\"},{\"name\":\"ENABLE_NETWORKINSTANCE\",\"value\":\"true\"},{\"name\":\"ENABLE_IPPREFIX\",\"value\":\"true\"},{\"name\":\"ENABLE_VLANCLAIM\",\"value\":\"true\"},{\"name\":\"ENABLE_VLANINDEX\",\"value\":\"true\"},{\"name\":\"ENABLE_VLAN\",\"value\":\"true\"},{\"name\":\"ENABLE_RAWTOPOLOGIES\",\"value\":\"true\"}],\"image\":\"docker.io/nephio/resource-backend-controller:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8081},\"initialDelaySeconds\":15,\"periodSeconds\":20},\"name\":\"controller\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":8081},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"serviceAccountName\":\"resource-backend-controller\"}}},\"status\":{}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:37Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:fn.kptgen.dev/controller": {},
                                            "f:fn.kptgen.dev/grpc": {}
                                        },
                                        "f:name": {},
                                        "f:namespace": {}
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ENABLE_IPCLAIM\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_IPPREFIX\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_NETWORKINSTANCE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_RAWTOPOLOGIES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_VLAN\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_VLANCLAIM\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_VLANINDEX\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"NODE_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RESOURCE_BACKEND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            },
                                            "k:{\"name\":\"kube-rbac-proxy\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:37Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:53:57Z"
                    }
                ],
                "name": "resource-backend-controller",
                "namespace": "backend-system",
                "resourceVersion": "26396",
                "uid": "d85f3045-10fa-4af7-ad2d-61cec251cf90"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "fn.kptgen.dev/controller": "resource-backend-controller",
                        "fn.kptgen.dev/grpc": "resource-backend-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "tbd",
                            "app.kubernetes.io/instance": "tbd",
                            "app.kubernetes.io/managed-by": "kpt",
                            "app.kubernetes.io/name": "resource-backend",
                            "app.kubernetes.io/part-of": "resource-backend",
                            "app.kubernetes.io/version": "tbd",
                            "fn.kptgen.dev/controller": "resource-backend-controller",
                            "fn.kptgen.dev/grpc": "resource-backend-controller"
                        },
                        "name": "resource-backend-controller",
                        "namespace": "backend-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--secure-listen-address=0.0.0.0:8443",
                                    "--upstream=http://127.0.0.1:8080/",
                                    "--logtostderr=true",
                                    "--v=10"
                                ],
                                "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-rbac-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "args": [
                                    "--health-probe-bind-address=:8081",
                                    "--metrics-bind-address=127.0.0.1:8080",
                                    "--leader-elect"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "RESOURCE_BACKEND",
                                        "value": "127.0.0.1:9999"
                                    },
                                    {
                                        "name": "ENABLE_IPCLAIM",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_NETWORKINSTANCE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_IPPREFIX",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_VLANCLAIM",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_VLANINDEX",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_VLAN",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_RAWTOPOLOGIES",
                                        "value": "true"
                                    }
                                ],
                                "image": "docker.io/nephio/resource-backend-controller:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "resource-backend-controller",
                        "serviceAccountName": "resource-backend-controller",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:53:57Z",
                        "lastUpdateTime": "2025-10-13T15:53:57Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:37Z",
                        "lastUpdateTime": "2025-10-13T15:53:57Z",
                        "message": "ReplicaSet \"resource-backend-controller-6746c46b45\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace backend-system] ************
Monday 13 October 2025  16:20:16 +0000 (0:00:00.107)       0:01:11.075 ******** 
Monday 13 October 2025  16:20:16 +0000 (0:00:00.107)       0:01:11.075 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'resource-backend-controller', 'namespace': 'backend-system', 'uid': 'd85f3045-10fa-4af7-ad2d-61cec251cf90', 'resourceVersion': '26396', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:37Z', 'annotations': {'config.k8s.io/owning-inventory': 'd413c9ded378adc5460582f8d6bdafacce838a0d-1760370755521650922', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|backend-system|resource-backend-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"d413c9ded378adc5460582f8d6bdafacce838a0d-1760370755521650922","internal.kpt.dev/upstream-identifier":"apps|Deployment|backend-system|resource-backend-controller"},"name":"resource-backend-controller","namespace":"backend-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"fn.kptgen.dev/controller":"resource-backend-controller","fn.kptgen.dev/grpc":"resource-backend-controller"}},"strategy":{},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"tbd","app.kubernetes.io/instance":"tbd","app.kubernetes.io/managed-by":"kpt","app.kubernetes.io/name":"resource-backend","app.kubernetes.io/part-of":"resource-backend","app.kubernetes.io/version":"tbd","fn.kptgen.dev/controller":"resource-backend-controller","fn.kptgen.dev/grpc":"resource-backend-controller"},"name":"resource-backend-controller","namespace":"backend-system"},"spec":{"containers":[{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=10"],"image":"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https"}],"resources":{}},{"args":["--health-probe-bind-address=:8081","--metrics-bind-address=127.0.0.1:8080","--leader-elect"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"NODE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"RESOURCE_BACKEND","value":"127.0.0.1:9999"},{"name":"ENABLE_IPCLAIM","value":"true"},{"name":"ENABLE_NETWORKINSTANCE","value":"true"},{"name":"ENABLE_IPPREFIX","value":"true"},{"name":"ENABLE_VLANCLAIM","value":"true"},{"name":"ENABLE_VLANINDEX","value":"true"},{"name":"ENABLE_VLAN","value":"true"},{"name":"ENABLE_RAWTOPOLOGIES","value":"true"}],"image":"docker.io/nephio/resource-backend-controller:latest","livenessProbe":{"httpGet":{"path":"/healthz","port":8081},"initialDelaySeconds":15,"periodSeconds":20},"name":"controller","readinessProbe":{"httpGet":{"path":"/readyz","port":8081},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"serviceAccountName":"resource-backend-controller"}}},"status":{}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/managed-by': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:fn.kptgen.dev/controller': {}, 'f:fn.kptgen.dev/grpc': {}}, 'f:name': {}, 'f:namespace': {}}, 'f:spec': {'f:containers': {'k:{"name":"controller"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"ENABLE_IPCLAIM"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_IPPREFIX"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_NETWORKINSTANCE"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_RAWTOPOLOGIES"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_VLAN"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_VLANCLAIM"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_VLANINDEX"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"NODE_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"NODE_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"RESOURCE_BACKEND"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}, 'k:{"name":"kube-rbac-proxy"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:53:57Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'fn.kptgen.dev/controller': 'resource-backend-controller', 'fn.kptgen.dev/grpc': 'resource-backend-controller'}}, 'template': {'metadata': {'name': 'resource-backend-controller', 'namespace': 'backend-system', 'creationTimestamp': None, 'labels': {'app.kubernetes.io/component': 'tbd', 'app.kubernetes.io/instance': 'tbd', 'app.kubernetes.io/managed-by': 'kpt', 'app.kubernetes.io/name': 'resource-backend', 'app.kubernetes.io/part-of': 'resource-backend', 'app.kubernetes.io/version': 'tbd', 'fn.kptgen.dev/controller': 'resource-backend-controller', 'fn.kptgen.dev/grpc': 'resource-backend-controller'}}, 'spec': {'containers': [{'name': 'kube-rbac-proxy', 'image': 'gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0', 'args': ['--secure-listen-address=0.0.0.0:8443', '--upstream=http://127.0.0.1:8080/', '--logtostderr=true', '--v=10'], 'ports': [{'name': 'https', 'containerPort': 8443, 'protocol': 'TCP'}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'controller', 'image': 'docker.io/nephio/resource-backend-controller:latest', 'command': ['/manager'], 'args': ['--health-probe-bind-address=:8081', '--metrics-bind-address=127.0.0.1:8080', '--leader-elect'], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.podIP'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'NODE_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'spec.nodeName'}}}, {'name': 'NODE_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.hostIP'}}}, {'name': 'RESOURCE_BACKEND', 'value': '127.0.0.1:9999'}, {'name': 'ENABLE_IPCLAIM', 'value': 'true'}, {'name': 'ENABLE_NETWORKINSTANCE', 'value': 'true'}, {'name': 'ENABLE_IPPREFIX', 'value': 'true'}, {'name': 'ENABLE_VLANCLAIM', 'value': 'true'}, {'name': 'ENABLE_VLANINDEX', 'value': 'true'}, {'name': 'ENABLE_VLAN', 'value': 'true'}, {'name': 'ENABLE_RAWTOPOLOGIES', 'value': 'true'}], 'resources': {'limits': {'cpu': '500m', 'memory': '128Mi'}, 'requests': {'cpu': '10m', 'memory': '64Mi'}}, 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 15, 'timeoutSeconds': 1, 'periodSeconds': 20, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'resource-backend-controller', 'serviceAccount': 'resource-backend-controller', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:57Z', 'lastTransitionTime': '2025-10-13T15:53:57Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:53:57Z', 'lastTransitionTime': '2025-10-13T15:52:37Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "resource-backend-controller-6746c46b45" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace metallb-system] ********
Monday 13 October 2025  16:20:18 +0000 (0:00:01.369)       0:01:12.445 ******** 
Monday 13 October 2025  16:20:18 +0000 (0:00:01.369)       0:01:12.444 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace metallb-system] ******
Monday 13 October 2025  16:20:19 +0000 (0:00:01.018)       0:01:13.463 ******** 
Monday 13 October 2025  16:20:19 +0000 (0:00:01.018)       0:01:13.462 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "64ef4e28b45a254f084be69bdbe0db168fc5dc91-1760370761219004762",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|metallb-system|controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"64ef4e28b45a254f084be69bdbe0db168fc5dc91-1760370761219004762\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|metallb-system|controller\"},\"labels\":{\"app\":\"metallb\",\"component\":\"controller\"},\"name\":\"controller\",\"namespace\":\"metallb-system\"},\"spec\":{\"revisionHistoryLimit\":3,\"selector\":{\"matchLabels\":{\"app\":\"metallb\",\"component\":\"controller\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"7472\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"metallb\",\"component\":\"controller\"}},\"spec\":{\"containers\":[{\"args\":[\"--port=7472\",\"--log-level=info\"],\"env\":[{\"name\":\"METALLB_ML_SECRET_NAME\",\"value\":\"memberlist\"},{\"name\":\"METALLB_DEPLOYMENT\",\"value\":\"controller\"}],\"image\":\"quay.io/metallb/controller:v0.13.9\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/metrics\",\"port\":\"monitoring\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":7472,\"name\":\"monitoring\"},{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/metrics\",\"port\":\"monitoring\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"fsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"serviceAccountName\":\"controller\",\"terminationGracePeriodSeconds\":0,\"volumes\":[{\"name\":\"cert\",\"secret\":{\"defaultMode\":420,\"secretName\":\"webhook-server-cert\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:52:45Z",
                "generation": 1,
                "labels": {
                    "app": "metallb",
                    "component": "controller"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:component": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:component": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"METALLB_DEPLOYMENT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"METALLB_ML_SECRET_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":7472,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:52:45Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:54:00Z"
                    }
                ],
                "name": "controller",
                "namespace": "metallb-system",
                "resourceVersion": "26409",
                "uid": "adcd4907-4b88-4964-8775-dedccfe38b2c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 3,
                "selector": {
                    "matchLabels": {
                        "app": "metallb",
                        "component": "controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "7472",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "metallb",
                            "component": "controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--port=7472",
                                    "--log-level=info"
                                ],
                                "env": [
                                    {
                                        "name": "METALLB_ML_SECRET_NAME",
                                        "value": "memberlist"
                                    },
                                    {
                                        "name": "METALLB_DEPLOYMENT",
                                        "value": "controller"
                                    }
                                ],
                                "image": "quay.io/metallb/controller:v0.13.9",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": "monitoring",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller",
                                "ports": [
                                    {
                                        "containerPort": 7472,
                                        "name": "monitoring",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": "monitoring",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsNonRoot": true,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "controller",
                        "serviceAccountName": "controller",
                        "terminationGracePeriodSeconds": 0,
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "webhook-server-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:54:00Z",
                        "lastUpdateTime": "2025-10-13T15:54:00Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:52:47Z",
                        "lastUpdateTime": "2025-10-13T15:54:00Z",
                        "message": "ReplicaSet \"controller-6db6d84dc7\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace metallb-system] ************
Monday 13 October 2025  16:20:19 +0000 (0:00:00.101)       0:01:13.565 ******** 
Monday 13 October 2025  16:20:19 +0000 (0:00:00.101)       0:01:13.564 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'controller', 'namespace': 'metallb-system', 'uid': 'adcd4907-4b88-4964-8775-dedccfe38b2c', 'resourceVersion': '26409', 'generation': 1, 'creationTimestamp': '2025-10-13T15:52:45Z', 'labels': {'app': 'metallb', 'component': 'controller'}, 'annotations': {'config.k8s.io/owning-inventory': '64ef4e28b45a254f084be69bdbe0db168fc5dc91-1760370761219004762', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|metallb-system|controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"64ef4e28b45a254f084be69bdbe0db168fc5dc91-1760370761219004762","internal.kpt.dev/upstream-identifier":"apps|Deployment|metallb-system|controller"},"labels":{"app":"metallb","component":"controller"},"name":"controller","namespace":"metallb-system"},"spec":{"revisionHistoryLimit":3,"selector":{"matchLabels":{"app":"metallb","component":"controller"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"7472","prometheus.io/scrape":"true"},"labels":{"app":"metallb","component":"controller"}},"spec":{"containers":[{"args":["--port=7472","--log-level=info"],"env":[{"name":"METALLB_ML_SECRET_NAME","value":"memberlist"},{"name":"METALLB_DEPLOYMENT","value":"controller"}],"image":"quay.io/metallb/controller:v0.13.9","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"controller","ports":[{"containerPort":7472,"name":"monitoring"},{"containerPort":9443,"name":"webhook-server","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/metrics","port":"monitoring"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"fsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccountName":"controller","terminationGracePeriodSeconds":0,"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"webhook-server-cert"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:52:45Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:component': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:component': {}}}, 'f:spec': {'f:containers': {'k:{"name":"controller"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"METALLB_DEPLOYMENT"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"METALLB_ML_SECRET_NAME"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":7472,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:00Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'metallb', 'component': 'controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'metallb', 'component': 'controller'}, 'annotations': {'prometheus.io/port': '7472', 'prometheus.io/scrape': 'true'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'webhook-server-cert', 'defaultMode': 420}}], 'containers': [{'name': 'controller', 'image': 'quay.io/metallb/controller:v0.13.9', 'args': ['--port=7472', '--log-level=info'], 'ports': [{'name': 'monitoring', 'containerPort': 7472, 'protocol': 'TCP'}, {'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}], 'env': [{'name': 'METALLB_ML_SECRET_NAME', 'value': 'memberlist'}, {'name': 'METALLB_DEPLOYMENT', 'value': 'controller'}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/metrics', 'port': 'monitoring', 'scheme': 'HTTP'}, 'initialDelaySeconds': 10, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/metrics', 'port': 'monitoring', 'scheme': 'HTTP'}, 'initialDelaySeconds': 10, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['all']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 0, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'controller', 'serviceAccount': 'controller', 'securityContext': {'runAsUser': 65534, 'runAsNonRoot': True, 'fsGroup': 65534}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 3, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:00Z', 'lastTransitionTime': '2025-10-13T15:54:00Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:00Z', 'lastTransitionTime': '2025-10-13T15:52:47Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "controller-6db6d84dc7" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace capi-system] ***********
Monday 13 October 2025  16:20:20 +0000 (0:00:00.944)       0:01:14.510 ******** 
Monday 13 October 2025  16:20:20 +0000 (0:00:00.944)       0:01:14.509 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace capi-system] *********
Monday 13 October 2025  16:20:21 +0000 (0:00:01.376)       0:01:15.887 ******** 
Monday 13 October 2025  16:20:21 +0000 (0:00:01.376)       0:01:15.886 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capi-system|capi-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capi-system|capi-controller-manager\"},\"labels\":{\"cluster.x-k8s.io/provider\":\"cluster-api\",\"control-plane\":\"controller-manager\"},\"name\":\"capi-controller-manager\",\"namespace\":\"capi-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"cluster-api\",\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/provider\":\"cluster-api\",\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--leader-elect\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--feature-gates=MachinePool=false,ClusterResourceSet=false,ClusterTopology=true,RuntimeSDK=false,MachineSetPreflightChecks=false\",\"--use-deprecated-infra-machine-naming=false\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"registry.k8s.io/cluster-api/cluster-api-controller:v1.8.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"runAsGroup\":65532,\"runAsUser\":65532},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"capi-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"secretName\":\"capi-webhook-service-cert\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:54:35Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "cluster-api",
                    "control-plane": "controller-manager"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_UID\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:privileged": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:54:35Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:54:51Z"
                    }
                ],
                "name": "capi-controller-manager",
                "namespace": "capi-system",
                "resourceVersion": "26855",
                "uid": "f5bd15de-94cd-497d-b87a-59401adce372"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "cluster-api",
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "cluster-api",
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--feature-gates=MachinePool=false,ClusterResourceSet=false,ClusterTopology=true,RuntimeSDK=false,MachineSetPreflightChecks=false",
                                    "--use-deprecated-infra-machine-naming=false"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_UID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "image": "registry.k8s.io/cluster-api/cluster-api-controller:v1.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsGroup": 65532,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "capi-manager",
                        "serviceAccountName": "capi-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "capi-webhook-service-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:54:51Z",
                        "lastUpdateTime": "2025-10-13T15:54:51Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:54:35Z",
                        "lastUpdateTime": "2025-10-13T15:54:51Z",
                        "message": "ReplicaSet \"capi-controller-manager-79f4945ffd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace capi-system] ***************
Monday 13 October 2025  16:20:21 +0000 (0:00:00.105)       0:01:15.992 ******** 
Monday 13 October 2025  16:20:21 +0000 (0:00:00.105)       0:01:15.992 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'capi-controller-manager', 'namespace': 'capi-system', 'uid': 'f5bd15de-94cd-497d-b87a-59401adce372', 'resourceVersion': '26855', 'generation': 1, 'creationTimestamp': '2025-10-13T15:54:35Z', 'labels': {'cluster.x-k8s.io/provider': 'cluster-api', 'control-plane': 'controller-manager'}, 'annotations': {'config.k8s.io/owning-inventory': '3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capi-system|capi-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225","internal.kpt.dev/upstream-identifier":"apps|Deployment|capi-system|capi-controller-manager"},"labels":{"cluster.x-k8s.io/provider":"cluster-api","control-plane":"controller-manager"},"name":"capi-controller-manager","namespace":"capi-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"cluster-api","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"cluster.x-k8s.io/provider":"cluster-api","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--leader-elect","--diagnostics-address=:8443","--insecure-diagnostics=false","--feature-gates=MachinePool=false,ClusterResourceSet=false,ClusterTopology=true,RuntimeSDK=false,MachineSetPreflightChecks=false","--use-deprecated-infra-machine-naming=false"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"registry.k8s.io/cluster-api/cluster-api-controller:v1.8.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"runAsGroup":65532,"runAsUser":65532},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"capi-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"secretName":"capi-webhook-service-cert"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:35Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_UID"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:privileged': {}, 'f:runAsGroup': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:51Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'cluster-api', 'control-plane': 'controller-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'cluster-api', 'control-plane': 'controller-manager'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'capi-webhook-service-cert', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'registry.k8s.io/cluster-api/cluster-api-controller:v1.8.1', 'command': ['/manager'], 'args': ['--leader-elect', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--feature-gates=MachinePool=false,ClusterResourceSet=false,ClusterTopology=true,RuntimeSDK=false,MachineSetPreflightChecks=false', '--use-deprecated-infra-machine-naming=false'], 'ports': [{'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_UID', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.uid'}}}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'privileged': False, 'runAsUser': 65532, 'runAsGroup': 65532, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'capi-manager', 'serviceAccount': 'capi-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:51Z', 'lastTransitionTime': '2025-10-13T15:54:51Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:51Z', 'lastTransitionTime': '2025-10-13T15:54:35Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "capi-controller-manager-79f4945ffd" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace capi-kubeadm-control-plane-system] ***
Monday 13 October 2025  16:20:22 +0000 (0:00:01.119)       0:01:17.112 ******** 
Monday 13 October 2025  16:20:22 +0000 (0:00:01.119)       0:01:17.111 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace capi-kubeadm-control-plane-system] ***
Monday 13 October 2025  16:20:24 +0000 (0:00:01.261)       0:01:18.374 ******** 
Monday 13 October 2025  16:20:24 +0000 (0:00:01.261)       0:01:18.373 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capi-kubeadm-control-plane-system|capi-kubeadm-control-plane-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capi-kubeadm-control-plane-system|capi-kubeadm-control-plane-controller-manager\"},\"labels\":{\"cluster.x-k8s.io/provider\":\"control-plane-kubeadm\",\"control-plane\":\"controller-manager\"},\"name\":\"capi-kubeadm-control-plane-controller-manager\",\"namespace\":\"capi-kubeadm-control-plane-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"control-plane-kubeadm\",\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/provider\":\"control-plane-kubeadm\",\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--leader-elect\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--use-deprecated-infra-machine-naming=false\",\"--feature-gates=ClusterTopology=true,KubeadmBootstrapFormatIgnition=false\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}}],\"image\":\"registry.k8s.io/cluster-api/kubeadm-control-plane-controller:v1.8.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"runAsGroup\":65532,\"runAsUser\":65532},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"capi-kubeadm-control-plane-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"secretName\":\"capi-kubeadm-control-plane-webhook-service-cert\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:54:35Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "control-plane-kubeadm",
                    "control-plane": "controller-manager"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_UID\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:privileged": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:54:35Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:54:44Z"
                    }
                ],
                "name": "capi-kubeadm-control-plane-controller-manager",
                "namespace": "capi-kubeadm-control-plane-system",
                "resourceVersion": "26819",
                "uid": "c2e9538a-c643-4c6f-ad91-4c0baefc94fe"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "control-plane-kubeadm",
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "control-plane-kubeadm",
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--use-deprecated-infra-machine-naming=false",
                                    "--feature-gates=ClusterTopology=true,KubeadmBootstrapFormatIgnition=false"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_UID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "image": "registry.k8s.io/cluster-api/kubeadm-control-plane-controller:v1.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsGroup": 65532,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "capi-kubeadm-control-plane-manager",
                        "serviceAccountName": "capi-kubeadm-control-plane-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "capi-kubeadm-control-plane-webhook-service-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:54:44Z",
                        "lastUpdateTime": "2025-10-13T15:54:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:54:35Z",
                        "lastUpdateTime": "2025-10-13T15:54:44Z",
                        "message": "ReplicaSet \"capi-kubeadm-control-plane-controller-manager-5994bb9bb6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace capi-kubeadm-control-plane-system] ***
Monday 13 October 2025  16:20:24 +0000 (0:00:00.151)       0:01:18.525 ******** 
Monday 13 October 2025  16:20:24 +0000 (0:00:00.151)       0:01:18.524 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'capi-kubeadm-control-plane-controller-manager', 'namespace': 'capi-kubeadm-control-plane-system', 'uid': 'c2e9538a-c643-4c6f-ad91-4c0baefc94fe', 'resourceVersion': '26819', 'generation': 1, 'creationTimestamp': '2025-10-13T15:54:35Z', 'labels': {'cluster.x-k8s.io/provider': 'control-plane-kubeadm', 'control-plane': 'controller-manager'}, 'annotations': {'config.k8s.io/owning-inventory': '3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capi-kubeadm-control-plane-system|capi-kubeadm-control-plane-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225","internal.kpt.dev/upstream-identifier":"apps|Deployment|capi-kubeadm-control-plane-system|capi-kubeadm-control-plane-controller-manager"},"labels":{"cluster.x-k8s.io/provider":"control-plane-kubeadm","control-plane":"controller-manager"},"name":"capi-kubeadm-control-plane-controller-manager","namespace":"capi-kubeadm-control-plane-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"control-plane-kubeadm","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"cluster.x-k8s.io/provider":"control-plane-kubeadm","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--leader-elect","--diagnostics-address=:8443","--insecure-diagnostics=false","--use-deprecated-infra-machine-naming=false","--feature-gates=ClusterTopology=true,KubeadmBootstrapFormatIgnition=false"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"registry.k8s.io/cluster-api/kubeadm-control-plane-controller:v1.8.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"runAsGroup":65532,"runAsUser":65532},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"capi-kubeadm-control-plane-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"secretName":"capi-kubeadm-control-plane-webhook-service-cert"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:35Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_UID"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:privileged': {}, 'f:runAsGroup': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:44Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'control-plane-kubeadm', 'control-plane': 'controller-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'control-plane-kubeadm', 'control-plane': 'controller-manager'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'capi-kubeadm-control-plane-webhook-service-cert', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'registry.k8s.io/cluster-api/kubeadm-control-plane-controller:v1.8.1', 'command': ['/manager'], 'args': ['--leader-elect', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--use-deprecated-infra-machine-naming=false', '--feature-gates=ClusterTopology=true,KubeadmBootstrapFormatIgnition=false'], 'ports': [{'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_UID', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.uid'}}}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'privileged': False, 'runAsUser': 65532, 'runAsGroup': 65532, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'capi-kubeadm-control-plane-manager', 'serviceAccount': 'capi-kubeadm-control-plane-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:44Z', 'lastTransitionTime': '2025-10-13T15:54:44Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:44Z', 'lastTransitionTime': '2025-10-13T15:54:35Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "capi-kubeadm-control-plane-controller-manager-5994bb9bb6" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace capi-kubeadm-bootstrap-system] ***
Monday 13 October 2025  16:20:25 +0000 (0:00:00.908)       0:01:19.434 ******** 
Monday 13 October 2025  16:20:25 +0000 (0:00:00.908)       0:01:19.433 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace capi-kubeadm-bootstrap-system] ***
Monday 13 October 2025  16:20:26 +0000 (0:00:01.243)       0:01:20.677 ******** 
Monday 13 October 2025  16:20:26 +0000 (0:00:01.243)       0:01:20.676 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capi-kubeadm-bootstrap-system|capi-kubeadm-bootstrap-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capi-kubeadm-bootstrap-system|capi-kubeadm-bootstrap-controller-manager\"},\"labels\":{\"cluster.x-k8s.io/provider\":\"bootstrap-kubeadm\",\"control-plane\":\"controller-manager\"},\"name\":\"capi-kubeadm-bootstrap-controller-manager\",\"namespace\":\"capi-kubeadm-bootstrap-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"bootstrap-kubeadm\",\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/provider\":\"bootstrap-kubeadm\",\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--leader-elect\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--feature-gates=MachinePool=false,KubeadmBootstrapFormatIgnition=false\",\"--bootstrap-token-ttl=15m\"],\"command\":[\"/manager\"],\"image\":\"registry.k8s.io/cluster-api/kubeadm-bootstrap-controller:v1.8.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"runAsGroup\":65532,\"runAsUser\":65532},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"capi-kubeadm-bootstrap-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"secretName\":\"capi-kubeadm-bootstrap-webhook-service-cert\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:54:35Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "bootstrap-kubeadm",
                    "control-plane": "controller-manager"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:privileged": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:54:35Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:54:41Z"
                    }
                ],
                "name": "capi-kubeadm-bootstrap-controller-manager",
                "namespace": "capi-kubeadm-bootstrap-system",
                "resourceVersion": "26795",
                "uid": "014a2658-de57-4ade-841b-e1bd0c25d45e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "bootstrap-kubeadm",
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "bootstrap-kubeadm",
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--feature-gates=MachinePool=false,KubeadmBootstrapFormatIgnition=false",
                                    "--bootstrap-token-ttl=15m"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "image": "registry.k8s.io/cluster-api/kubeadm-bootstrap-controller:v1.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsGroup": 65532,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "capi-kubeadm-bootstrap-manager",
                        "serviceAccountName": "capi-kubeadm-bootstrap-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "capi-kubeadm-bootstrap-webhook-service-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:54:41Z",
                        "lastUpdateTime": "2025-10-13T15:54:41Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:54:35Z",
                        "lastUpdateTime": "2025-10-13T15:54:41Z",
                        "message": "ReplicaSet \"capi-kubeadm-bootstrap-controller-manager-b49f8886c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace capi-kubeadm-bootstrap-system] ***
Monday 13 October 2025  16:20:26 +0000 (0:00:00.104)       0:01:20.782 ******** 
Monday 13 October 2025  16:20:26 +0000 (0:00:00.104)       0:01:20.781 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'capi-kubeadm-bootstrap-controller-manager', 'namespace': 'capi-kubeadm-bootstrap-system', 'uid': '014a2658-de57-4ade-841b-e1bd0c25d45e', 'resourceVersion': '26795', 'generation': 1, 'creationTimestamp': '2025-10-13T15:54:35Z', 'labels': {'cluster.x-k8s.io/provider': 'bootstrap-kubeadm', 'control-plane': 'controller-manager'}, 'annotations': {'config.k8s.io/owning-inventory': '3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capi-kubeadm-bootstrap-system|capi-kubeadm-bootstrap-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"3e010162a6ec70e3ff8f45baaa0e4af716170173-1760370870798517225","internal.kpt.dev/upstream-identifier":"apps|Deployment|capi-kubeadm-bootstrap-system|capi-kubeadm-bootstrap-controller-manager"},"labels":{"cluster.x-k8s.io/provider":"bootstrap-kubeadm","control-plane":"controller-manager"},"name":"capi-kubeadm-bootstrap-controller-manager","namespace":"capi-kubeadm-bootstrap-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"bootstrap-kubeadm","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"cluster.x-k8s.io/provider":"bootstrap-kubeadm","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--leader-elect","--diagnostics-address=:8443","--insecure-diagnostics=false","--feature-gates=MachinePool=false,KubeadmBootstrapFormatIgnition=false","--bootstrap-token-ttl=15m"],"command":["/manager"],"image":"registry.k8s.io/cluster-api/kubeadm-bootstrap-controller:v1.8.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"runAsGroup":65532,"runAsUser":65532},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"capi-kubeadm-bootstrap-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"secretName":"capi-kubeadm-bootstrap-webhook-service-cert"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:35Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:privileged': {}, 'f:runAsGroup': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:41Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'bootstrap-kubeadm', 'control-plane': 'controller-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'bootstrap-kubeadm', 'control-plane': 'controller-manager'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'capi-kubeadm-bootstrap-webhook-service-cert', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'registry.k8s.io/cluster-api/kubeadm-bootstrap-controller:v1.8.1', 'command': ['/manager'], 'args': ['--leader-elect', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--feature-gates=MachinePool=false,KubeadmBootstrapFormatIgnition=false', '--bootstrap-token-ttl=15m'], 'ports': [{'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'privileged': False, 'runAsUser': 65532, 'runAsGroup': 65532, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'capi-kubeadm-bootstrap-manager', 'serviceAccount': 'capi-kubeadm-bootstrap-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:41Z', 'lastTransitionTime': '2025-10-13T15:54:41Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:54:41Z', 'lastTransitionTime': '2025-10-13T15:54:35Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "capi-kubeadm-bootstrap-controller-manager-b49f8886c" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Get deployment resources in namespace capd-system] ***********
Monday 13 October 2025  16:20:27 +0000 (0:00:00.909)       0:01:21.691 ******** 
Monday 13 October 2025  16:20:27 +0000 (0:00:00.909)       0:01:21.690 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace capd-system] *********
Monday 13 October 2025  16:20:28 +0000 (0:00:00.979)       0:01:22.670 ******** 
Monday 13 October 2025  16:20:28 +0000 (0:00:00.979)       0:01:22.670 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "fda4ba64198adfa16619661e32bfac2f060425c5-1760370897930734000",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capd-system|capd-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"fda4ba64198adfa16619661e32bfac2f060425c5-1760370897930734000\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capd-system|capd-controller-manager\"},\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-docker\",\"control-plane\":\"controller-manager\"},\"name\":\"capd-controller-manager\",\"namespace\":\"capd-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-docker\",\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-docker\",\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--leader-elect\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--feature-gates=MachinePool=false,ClusterTopology=true\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_UID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.uid\"}}},{\"name\":\"DOCKER_HOST\"}],\"image\":\"gcr.io/k8s-staging-cluster-api/capd-manager:v1.8.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"securityContext\":{\"privileged\":true},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\"}]}],\"serviceAccountName\":\"capd-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"secretName\":\"capd-webhook-service-cert\"}},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:54:59Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "infrastructure-docker",
                    "control-plane": "controller-manager"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DOCKER_HOST\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_UID\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:privileged": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/docker.sock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"dockersock\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:54:59Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:55:05Z"
                    }
                ],
                "name": "capd-controller-manager",
                "namespace": "capd-system",
                "resourceVersion": "27014",
                "uid": "042350e8-de8c-4876-b133-fc4da91e8d36"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "infrastructure-docker",
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "infrastructure-docker",
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--feature-gates=MachinePool=false,ClusterTopology=true"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_UID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DOCKER_HOST"
                                    }
                                ],
                                "image": "gcr.io/k8s-staging-cluster-api/capd-manager:v1.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/docker.sock",
                                        "name": "dockersock"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "capd-manager",
                        "serviceAccountName": "capd-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "capd-webhook-service-cert"
                                }
                            },
                            {
                                "hostPath": {
                                    "path": "/var/run/docker.sock",
                                    "type": ""
                                },
                                "name": "dockersock"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:55:05Z",
                        "lastUpdateTime": "2025-10-13T15:55:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:54:59Z",
                        "lastUpdateTime": "2025-10-13T15:55:05Z",
                        "message": "ReplicaSet \"capd-controller-manager-6697fdf89d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace capd-system] ***************
Monday 13 October 2025  16:20:28 +0000 (0:00:00.133)       0:01:22.804 ******** 
Monday 13 October 2025  16:20:28 +0000 (0:00:00.133)       0:01:22.803 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'capd-controller-manager', 'namespace': 'capd-system', 'uid': '042350e8-de8c-4876-b133-fc4da91e8d36', 'resourceVersion': '27014', 'generation': 1, 'creationTimestamp': '2025-10-13T15:54:59Z', 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-docker', 'control-plane': 'controller-manager'}, 'annotations': {'config.k8s.io/owning-inventory': 'fda4ba64198adfa16619661e32bfac2f060425c5-1760370897930734000', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capd-system|capd-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"fda4ba64198adfa16619661e32bfac2f060425c5-1760370897930734000","internal.kpt.dev/upstream-identifier":"apps|Deployment|capd-system|capd-controller-manager"},"labels":{"cluster.x-k8s.io/provider":"infrastructure-docker","control-plane":"controller-manager"},"name":"capd-controller-manager","namespace":"capd-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"infrastructure-docker","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"cluster.x-k8s.io/provider":"infrastructure-docker","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--leader-elect","--diagnostics-address=:8443","--insecure-diagnostics=false","--feature-gates=MachinePool=false,ClusterTopology=true"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}},{"name":"DOCKER_HOST"}],"image":"gcr.io/k8s-staging-cluster-api/capd-manager:v1.8.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"securityContext":{"privileged":true},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true},{"mountPath":"/var/run/docker.sock","name":"dockersock"}]}],"serviceAccountName":"capd-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"secretName":"capd-webhook-service-cert"}},{"hostPath":{"path":"/var/run/docker.sock"},"name":"dockersock"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:54:59Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"DOCKER_HOST"}': {'.': {}, 'f:name': {}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_UID"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:privileged': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}, 'k:{"mountPath":"/var/run/docker.sock"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}, 'k:{"name":"dockersock"}': {'.': {}, 'f:hostPath': {'.': {}, 'f:path': {}, 'f:type': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:05Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'infrastructure-docker', 'control-plane': 'controller-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-docker', 'control-plane': 'controller-manager'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'capd-webhook-service-cert', 'defaultMode': 420}}, {'name': 'dockersock', 'hostPath': {'path': '/var/run/docker.sock', 'type': ''}}], 'containers': [{'name': 'manager', 'image': 'gcr.io/k8s-staging-cluster-api/capd-manager:v1.8.1', 'args': ['--leader-elect', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--feature-gates=MachinePool=false,ClusterTopology=true'], 'ports': [{'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'POD_UID', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.uid'}}}, {'name': 'DOCKER_HOST'}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}, {'name': 'dockersock', 'mountPath': '/var/run/docker.sock'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'privileged': True}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'capd-manager', 'serviceAccount': 'capd-manager', 'securityContext': {}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:55:05Z', 'lastTransitionTime': '2025-10-13T15:55:05Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:55:05Z', 'lastTransitionTime': '2025-10-13T15:54:59Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "capd-controller-manager-6697fdf89d" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Debug k8s.context value and its type] ************************
Monday 13 October 2025  16:20:29 +0000 (0:00:00.904)       0:01:23.708 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.904)       0:01:23.707 ******** 
ok: [127.0.0.1] => {
    "msg": [
        "Value of k8s.context: 'kubernetes-admin@kubernetes'",
        "Type of k8s.context: AnsibleUnicode",
        "Result of condition 'k8s.context is defined': True",
        "Result of condition 'k8s.context != 'kind-kind'': True",
        "Overall 'when' condition result (if variable defined): True"
    ]
}

TASK [bootstrap : Apply kpt packages that are supported only on nonkind_k8s clusters] ***
Monday 13 October 2025  16:20:29 +0000 (0:00:00.092)       0:01:23.800 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.092)       0:01:23.799 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/apply-pkgs-nonkind-k8s.yml for 127.0.0.1

TASK [bootstrap : Init job ids array for nonkind_k8s clusters] *****************
Monday 13 October 2025  16:20:29 +0000 (0:00:00.095)       0:01:23.895 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.095)       0:01:23.895 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Create list of packages for install applicable only on nonkind_k8s clusters] ***
Monday 13 October 2025  16:20:29 +0000 (0:00:00.073)       0:01:23.969 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.073)       0:01:23.968 ******** 
ok: [127.0.0.1]

TASK [Deploy base packages applicable only on nonkind_k8s clusters] ************
Monday 13 October 2025  16:20:29 +0000 (0:00:00.069)       0:01:24.039 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.069)       0:01:24.038 ******** 
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'infra/capi/cluster-capi-infrastructure-metal3', 'version': 'main', 'async': 1500, 'poll': 0})

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:20:29 +0000 (0:00:00.155)       0:01:24.194 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.155)       0:01:24.194 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:29 +0000 (0:00:00.075)       0:01:24.270 ******** 
Monday 13 October 2025  16:20:29 +0000 (0:00:00.075)       0:01:24.269 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: infra/capi/cluster-capi-infrastructure-metal3] ******
Monday 13 October 2025  16:20:30 +0000 (0:00:00.329)       0:01:24.599 ******** 
Monday 13 October 2025  16:20:30 +0000 (0:00:00.329)       0:01:24.598 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:30 +0000 (0:00:00.343)       0:01:24.942 ******** 
Monday 13 October 2025  16:20:30 +0000 (0:00:00.343)       0:01:24.942 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:31 +0000 (0:00:00.415)       0:01:25.358 ******** 
Monday 13 October 2025  16:20:31 +0000 (0:00:00.415)       0:01:25.358 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"cluster-capi-infrastructure-metal3\"",
        "├── [Kptfile]  Kptfile cluster-capi-infrastructure-metal3",
        "├── [cluster-api-infrastructure-metal3.yaml]  ClusterRole capm3-manager-role",
        "├── [cluster-api-infrastructure-metal3.yaml]  ClusterRoleBinding capm3-manager-rolebinding",
        "├── [cluster-api-infrastructure-metal3.yaml]  MutatingWebhookConfiguration capm3-mutating-webhook-configuration",
        "├── [cluster-api-infrastructure-metal3.yaml]  Namespace capm3-system",
        "├── [cluster-api-infrastructure-metal3.yaml]  ValidatingWebhookConfiguration capm3-validating-webhook-configuration",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition ipaddresses.ipam.metal3.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  ClusterRole ipam-manager-role",
        "├── [cluster-api-infrastructure-metal3.yaml]  ClusterRoleBinding ipam-manager-rolebinding",
        "├── [cluster-api-infrastructure-metal3.yaml]  MutatingWebhookConfiguration ipam-mutating-webhook-configuration",
        "├── [cluster-api-infrastructure-metal3.yaml]  ValidatingWebhookConfiguration ipam-validating-webhook-configuration",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition ipclaims.ipam.metal3.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition ippools.ipam.metal3.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3clusters.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3clustertemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3dataclaims.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3datas.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3datatemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3machines.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3machinetemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3remediations.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  CustomResourceDefinition metal3remediationtemplates.infrastructure.cluster.x-k8s.io",
        "├── [cluster-api-infrastructure-metal3.yaml]  ConfigMap capm3-system/capm3-capm3fasttrack-configmap",
        "├── [cluster-api-infrastructure-metal3.yaml]  Deployment capm3-system/capm3-controller-manager",
        "├── [cluster-api-infrastructure-metal3.yaml]  Role capm3-system/capm3-leader-election-role",
        "├── [cluster-api-infrastructure-metal3.yaml]  RoleBinding capm3-system/capm3-leader-election-rolebinding",
        "├── [cluster-api-infrastructure-metal3.yaml]  ServiceAccount capm3-system/capm3-manager",
        "├── [cluster-api-infrastructure-metal3.yaml]  Issuer capm3-system/capm3-selfsigned-issuer",
        "├── [cluster-api-infrastructure-metal3.yaml]  Certificate capm3-system/capm3-serving-cert",
        "├── [cluster-api-infrastructure-metal3.yaml]  Service capm3-system/capm3-webhook-service",
        "├── [cluster-api-infrastructure-metal3.yaml]  Deployment capm3-system/ipam-controller-manager",
        "├── [cluster-api-infrastructure-metal3.yaml]  Role capm3-system/ipam-leader-election-role",
        "├── [cluster-api-infrastructure-metal3.yaml]  RoleBinding capm3-system/ipam-leader-election-rolebinding",
        "├── [cluster-api-infrastructure-metal3.yaml]  ServiceAccount capm3-system/ipam-manager",
        "├── [cluster-api-infrastructure-metal3.yaml]  Issuer capm3-system/ipam-selfsigned-issuer",
        "├── [cluster-api-infrastructure-metal3.yaml]  Certificate capm3-system/ipam-serving-cert",
        "├── [cluster-api-infrastructure-metal3.yaml]  Service capm3-system/ipam-webhook-service",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup capm3-system/inventory-80117244"
    ]
}

TASK [kpt : Render package: infra/capi/cluster-capi-infrastructure-metal3] *****
Monday 13 October 2025  16:20:31 +0000 (0:00:00.079)       0:01:25.437 ******** 
Monday 13 October 2025  16:20:31 +0000 (0:00:00.079)       0:01:25.437 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:20:31 +0000 (0:00:00.529)       0:01:25.967 ******** 
Monday 13 October 2025  16:20:31 +0000 (0:00:00.529)       0:01:25.966 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:31 +0000 (0:00:00.335)       0:01:26.302 ******** 
Monday 13 October 2025  16:20:31 +0000 (0:00:00.335)       0:01:26.301 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:34 +0000 (0:00:02.952)       0:01:29.255 ******** 
Monday 13 October 2025  16:20:34 +0000 (0:00:02.952)       0:01:29.254 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-628114633/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:20:35 +0000 (0:00:00.087)       0:01:29.342 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.087)       0:01:29.341 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: infra/capi/cluster-capi-infrastructure-metal3] *******
Monday 13 October 2025  16:20:35 +0000 (0:00:00.336)       0:01:29.678 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.336)       0:01:29.677 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for infra/capi/cluster-capi-infrastructure-metal3] ***
Monday 13 October 2025  16:20:35 +0000 (0:00:00.051)       0:01:29.730 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.051)       0:01:29.729 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: infra/capi/cluster-capi-infrastructure-metal3] ******
Monday 13 October 2025  16:20:35 +0000 (0:00:00.077)       0:01:29.808 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.077)       0:01:29.807 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:20:35 +0000 (0:00:00.319)       0:01:30.128 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.319)       0:01:30.127 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:20:35 +0000 (0:00:00.053)       0:01:30.181 ******** 
Monday 13 October 2025  16:20:35 +0000 (0:00:00.053)       0:01:30.181 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [bootstrap : Wait for packages to be applied on nonkind_k8s clusters] *****
Monday 13 October 2025  16:20:36 +0000 (0:00:00.144)       0:01:30.326 ******** 
Monday 13 October 2025  16:20:36 +0000 (0:00:00.144)       0:01:30.325 ******** 
skipping: [127.0.0.1]

TASK [bootstrap : Create list of namespaces on nonkind_k8s clusters] ***********
Monday 13 October 2025  16:20:36 +0000 (0:00:00.041)       0:01:30.367 ******** 
Monday 13 October 2025  16:20:36 +0000 (0:00:00.041)       0:01:30.367 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Wait for deployments on nonkind_k8s clusters] ****************
Monday 13 October 2025  16:20:36 +0000 (0:00:00.068)       0:01:30.436 ******** 
Monday 13 October 2025  16:20:36 +0000 (0:00:00.068)       0:01:30.435 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/bootstrap/tasks/wait-deployments.yml for 127.0.0.1 => (item=capm3-system)

TASK [bootstrap : Get deployment resources in namespace capm3-system] **********
Monday 13 October 2025  16:20:36 +0000 (0:00:00.114)       0:01:30.551 ******** 
Monday 13 October 2025  16:20:36 +0000 (0:00:00.114)       0:01:30.550 ******** 
ok: [127.0.0.1]

TASK [bootstrap : Print deployment resources in namespace capm3-system] ********
Monday 13 October 2025  16:20:37 +0000 (0:00:01.045)       0:01:31.597 ******** 
Monday 13 October 2025  16:20:37 +0000 (0:00:01.045)       0:01:31.596 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capm3-system|capm3-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capm3-system|capm3-controller-manager\"},\"creationTimestamp\":null,\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"clusterctl.cluster.x-k8s.io\":\"\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"},\"name\":\"capm3-controller-manager\",\"namespace\":\"capm3-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"}},\"strategy\":{},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--webhook-port=9443\",\"--enableBMHNameBasedPreallocation=false\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--tls-min-version=VersionTLS13\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"capm3-capm3fasttrack-configmap\"}}],\"image\":\"quay.io/metal3-io/cluster-api-provider-metal3:v1.9.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"webhook-server\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"runAsGroup\":65532,\"runAsUser\":65532},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"capm3-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"defaultMode\":420,\"secretName\":\"capm3-webhook-service-cert\"}}]}}},\"status\":{}}\n"
                },
                "creationTimestamp": "2025-10-13T15:55:43Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "infrastructure-metal3",
                    "clusterctl.cluster.x-k8s.io": "",
                    "control-plane": "controller-manager",
                    "controller-tools.k8s.io": "1.0"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:clusterctl.cluster.x-k8s.io": {},
                                    "f:control-plane": {},
                                    "f:controller-tools.k8s.io": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {},
                                            "f:controller-tools.k8s.io": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:envFrom": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:privileged": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:55:43Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:replicas": {},
                                "f:unavailableReplicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T16:15:30Z"
                    }
                ],
                "name": "capm3-controller-manager",
                "namespace": "capm3-system",
                "resourceVersion": "35992",
                "uid": "76cf5e79-ea78-47a4-a5e1-8f4e99e1ec66"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "infrastructure-metal3",
                        "control-plane": "controller-manager",
                        "controller-tools.k8s.io": "1.0"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "infrastructure-metal3",
                            "control-plane": "controller-manager",
                            "controller-tools.k8s.io": "1.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--webhook-port=9443",
                                    "--enableBMHNameBasedPreallocation=false",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--tls-min-version=VersionTLS13"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "capm3-capm3fasttrack-configmap"
                                        }
                                    }
                                ],
                                "image": "quay.io/metal3-io/cluster-api-provider-metal3:v1.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsGroup": 65532,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "capm3-manager",
                        "serviceAccountName": "capm3-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "capm3-webhook-service-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:55:43Z",
                        "lastUpdateTime": "2025-10-13T15:55:49Z",
                        "message": "ReplicaSet \"capm3-controller-manager-5c6df7c9cb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T16:15:30Z",
                        "lastUpdateTime": "2025-10-13T16:15:30Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|capm3-system|ipam-controller-manager",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|capm3-system|ipam-controller-manager\"},\"creationTimestamp\":null,\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"clusterctl.cluster.x-k8s.io\":\"\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"},\"name\":\"ipam-controller-manager\",\"namespace\":\"capm3-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"}},\"strategy\":{},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"cluster.x-k8s.io/provider\":\"infrastructure-metal3\",\"control-plane\":\"controller-manager\",\"controller-tools.k8s.io\":\"1.0\"}},\"spec\":{\"containers\":[{\"args\":[\"--webhook-port=9443\",\"--diagnostics-address=:8443\",\"--insecure-diagnostics=false\",\"--tls-min-version=VersionTLS13\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/metal3-io/ip-address-manager:v1.9.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9443,\"name\":\"ipam-webhook\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"resources\":{},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"runAsGroup\":65532,\"runAsUser\":65532},\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"volumeMounts\":[{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\",\"name\":\"cert\",\"readOnly\":true}]}],\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"ipam-manager\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/control-plane\"}],\"volumes\":[{\"name\":\"cert\",\"secret\":{\"defaultMode\":420,\"secretName\":\"ipam-webhook-service-cert\"}}]}}},\"status\":{}}\n"
                },
                "creationTimestamp": "2025-10-13T15:55:43Z",
                "generation": 1,
                "labels": {
                    "cluster.x-k8s.io/provider": "infrastructure-metal3",
                    "clusterctl.cluster.x-k8s.io": "",
                    "control-plane": "controller-manager",
                    "controller-tools.k8s.io": "1.0"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:cluster.x-k8s.io/provider": {},
                                    "f:clusterctl.cluster.x-k8s.io": {},
                                    "f:control-plane": {},
                                    "f:controller-tools.k8s.io": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:cluster.x-k8s.io/provider": {},
                                            "f:control-plane": {},
                                            "f:controller-tools.k8s.io": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:privileged": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp/k8s-webhook-server/serving-certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cert\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:55:43Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:55:54Z"
                    }
                ],
                "name": "ipam-controller-manager",
                "namespace": "capm3-system",
                "resourceVersion": "27544",
                "uid": "2ea5508b-03d2-48f3-879a-26d2e214f3b8"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "cluster.x-k8s.io/provider": "infrastructure-metal3",
                        "control-plane": "controller-manager",
                        "controller-tools.k8s.io": "1.0"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "cluster.x-k8s.io/provider": "infrastructure-metal3",
                            "control-plane": "controller-manager",
                            "controller-tools.k8s.io": "1.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--webhook-port=9443",
                                    "--diagnostics-address=:8443",
                                    "--insecure-diagnostics=false",
                                    "--tls-min-version=VersionTLS13"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/metal3-io/ip-address-manager:v1.9.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "ipam-webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsGroup": 65532,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "ipam-manager",
                        "serviceAccountName": "ipam-manager",
                        "terminationGracePeriodSeconds": 10,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "ipam-webhook-service-cert"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:55:54Z",
                        "lastUpdateTime": "2025-10-13T15:55:54Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:55:43Z",
                        "lastUpdateTime": "2025-10-13T15:55:54Z",
                        "message": "ReplicaSet \"ipam-controller-manager-7fb49847df\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [bootstrap : Wait for deployments in namespace capm3-system] **************
Monday 13 October 2025  16:20:37 +0000 (0:00:00.129)       0:01:31.727 ******** 
Monday 13 October 2025  16:20:37 +0000 (0:00:00.129)       0:01:31.726 ******** 
changed: [127.0.0.1] => (item={'metadata': {'name': 'capm3-controller-manager', 'namespace': 'capm3-system', 'uid': '76cf5e79-ea78-47a4-a5e1-8f4e99e1ec66', 'resourceVersion': '35992', 'generation': 1, 'creationTimestamp': '2025-10-13T15:55:43Z', 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'clusterctl.cluster.x-k8s.io': '', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}, 'annotations': {'config.k8s.io/owning-inventory': '45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capm3-system|capm3-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809","internal.kpt.dev/upstream-identifier":"apps|Deployment|capm3-system|capm3-controller-manager"},"creationTimestamp":null,"labels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","clusterctl.cluster.x-k8s.io":"","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"},"name":"capm3-controller-manager","namespace":"capm3-system"},"spec":{"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"}},"spec":{"containers":[{"args":["--webhook-port=9443","--enableBMHNameBasedPreallocation=false","--diagnostics-address=:8443","--insecure-diagnostics=false","--tls-min-version=VersionTLS13"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"envFrom":[{"configMapRef":{"name":"capm3-capm3fasttrack-configmap"}}],"image":"quay.io/metal3-io/cluster-api-provider-metal3:v1.9.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"webhook-server","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"runAsGroup":65532,"runAsUser":65532},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"capm3-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"capm3-webhook-service-cert"}}]}}},"status":{}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:43Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:clusterctl.cluster.x-k8s.io': {}, 'f:control-plane': {}, 'f:controller-tools.k8s.io': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}, 'f:controller-tools.k8s.io': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:envFrom': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:privileged': {}, 'f:runAsGroup': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T16:15:30Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:replicas': {}, 'f:unavailableReplicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'capm3-webhook-service-cert', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'quay.io/metal3-io/cluster-api-provider-metal3:v1.9.0', 'command': ['/manager'], 'args': ['--webhook-port=9443', '--enableBMHNameBasedPreallocation=false', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--tls-min-version=VersionTLS13'], 'ports': [{'name': 'webhook-server', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'envFrom': [{'configMapRef': {'name': 'capm3-capm3fasttrack-configmap'}}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'privileged': False, 'runAsUser': 65532, 'runAsGroup': 65532, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'capm3-manager', 'serviceAccount': 'capm3-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'unavailableReplicas': 1, 'conditions': [{'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:55:49Z', 'lastTransitionTime': '2025-10-13T15:55:43Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "capm3-controller-manager-5c6df7c9cb" has successfully progressed.'}, {'type': 'Available', 'status': 'False', 'lastUpdateTime': '2025-10-13T16:15:30Z', 'lastTransitionTime': '2025-10-13T16:15:30Z', 'reason': 'MinimumReplicasUnavailable', 'message': 'Deployment does not have minimum availability.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'ipam-controller-manager', 'namespace': 'capm3-system', 'uid': '2ea5508b-03d2-48f3-879a-26d2e214f3b8', 'resourceVersion': '27544', 'generation': 1, 'creationTimestamp': '2025-10-13T15:55:43Z', 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'clusterctl.cluster.x-k8s.io': '', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}, 'annotations': {'config.k8s.io/owning-inventory': '45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|capm3-system|ipam-controller-manager', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"45ea8674ae7351a4c5ba162e068492fd9c750da1-1760370941030780809","internal.kpt.dev/upstream-identifier":"apps|Deployment|capm3-system|ipam-controller-manager"},"creationTimestamp":null,"labels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","clusterctl.cluster.x-k8s.io":"","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"},"name":"ipam-controller-manager","namespace":"capm3-system"},"spec":{"selector":{"matchLabels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"cluster.x-k8s.io/provider":"infrastructure-metal3","control-plane":"controller-manager","controller-tools.k8s.io":"1.0"}},"spec":{"containers":[{"args":["--webhook-port=9443","--diagnostics-address=:8443","--insecure-diagnostics=false","--tls-min-version=VersionTLS13"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/metal3-io/ip-address-manager:v1.9.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9443,"name":"ipam-webhook","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"},{"containerPort":8443,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"runAsGroup":65532,"runAsUser":65532},"terminationMessagePolicy":"FallbackToLogsOnError","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true}]}],"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"ipam-manager","terminationGracePeriodSeconds":10,"tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane"}],"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"ipam-webhook-service-cert"}}]}}},"status":{}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:43Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:clusterctl.cluster.x-k8s.io': {}, 'f:control-plane': {}, 'f:controller-tools.k8s.io': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:cluster.x-k8s.io/provider': {}, 'f:control-plane': {}, 'f:controller-tools.k8s.io': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:privileged': {}, 'f:runAsGroup': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:readOnly': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:tolerations': {}, 'f:volumes': {'.': {}, 'k:{"name":"cert"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:secretName': {}}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:54Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'cluster.x-k8s.io/provider': 'infrastructure-metal3', 'control-plane': 'controller-manager', 'controller-tools.k8s.io': '1.0'}}, 'spec': {'volumes': [{'name': 'cert', 'secret': {'secretName': 'ipam-webhook-service-cert', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'quay.io/metal3-io/ip-address-manager:v1.9.1', 'command': ['/manager'], 'args': ['--webhook-port=9443', '--diagnostics-address=:8443', '--insecure-diagnostics=false', '--tls-min-version=VersionTLS13'], 'ports': [{'name': 'ipam-webhook', 'containerPort': 9443, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8443, 'protocol': 'TCP'}], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}], 'resources': {}, 'volumeMounts': [{'name': 'cert', 'readOnly': True, 'mountPath': '/tmp/k8s-webhook-server/serving-certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'FallbackToLogsOnError', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'privileged': False, 'runAsUser': 65532, 'runAsGroup': 65532, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'ipam-manager', 'serviceAccount': 'ipam-manager', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler', 'tolerations': [{'key': 'node-role.kubernetes.io/master', 'effect': 'NoSchedule'}, {'key': 'node-role.kubernetes.io/control-plane', 'effect': 'NoSchedule'}]}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:55:54Z', 'lastTransitionTime': '2025-10-13T15:55:54Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:55:54Z', 'lastTransitionTime': '2025-10-13T15:55:43Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "ipam-controller-manager-7fb49847df" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [bootstrap : Delete docker-registry secret] *******************************
Monday 13 October 2025  16:20:49 +0000 (0:00:12.311)       0:01:44.038 ******** 
Monday 13 October 2025  16:20:49 +0000 (0:00:12.311)       0:01:44.037 ******** 
skipping: [127.0.0.1]

TASK [bootstrap : Create docker-registry secret] *******************************
Monday 13 October 2025  16:20:49 +0000 (0:00:00.047)       0:01:44.085 ******** 
Monday 13 October 2025  16:20:49 +0000 (0:00:00.047)       0:01:44.084 ******** 
skipping: [127.0.0.1]

TASK [bootstrap : Create docker-registry service account] **********************
Monday 13 October 2025  16:20:49 +0000 (0:00:00.044)       0:01:44.130 ******** 
Monday 13 October 2025  16:20:49 +0000 (0:00:00.044)       0:01:44.129 ******** 
skipping: [127.0.0.1]

TASK [install : Init job ids array] ********************************************
Monday 13 October 2025  16:20:49 +0000 (0:00:00.081)       0:01:44.211 ******** 
Monday 13 October 2025  16:20:49 +0000 (0:00:00.081)       0:01:44.210 ******** 
ok: [127.0.0.1]

TASK [Deploy Nephio packages] **************************************************
Monday 13 October 2025  16:20:49 +0000 (0:00:00.067)       0:01:44.279 ******** 
Monday 13 October 2025  16:20:49 +0000 (0:00:00.067)       0:01:44.278 ******** 
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/core/porch', 'version': 'main', 'async': 480, 'poll': 5, 'inventory_id': 'nephio', 'resourcegroup_name': 'porch', 'resourcegroup_ns': 'porch-system'})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/core/nephio-operator', 'version': 'main', 'async': 480, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/core/configsync', 'version': 'main', 'async': 240, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/optional/network-config', 'version': 'main', 'async': 480, 'poll': 0})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/optional/fluxcd', 'version': 'main', 'async': 240, 'poll': 5})
included: kpt for 127.0.0.1 => (item={'repo_uri': 'https://github.com/nephio-project/catalog.git', 'pkg': 'nephio/optional/argo-cd-full', 'version': 'main', 'async': 240, 'poll': 5})

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:20:50 +0000 (0:00:00.279)       0:01:44.559 ******** 
Monday 13 October 2025  16:20:50 +0000 (0:00:00.279)       0:01:44.558 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/core/porch] ***
Monday 13 October 2025  16:20:50 +0000 (0:00:00.057)       0:01:44.617 ******** 
Monday 13 October 2025  16:20:50 +0000 (0:00:00.057)       0:01:44.616 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/core/porch] **********************************
Monday 13 October 2025  16:20:50 +0000 (0:00:00.343)       0:01:44.961 ******** 
Monday 13 October 2025  16:20:50 +0000 (0:00:00.343)       0:01:44.960 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/core/porch] *************
Monday 13 October 2025  16:20:50 +0000 (0:00:00.286)       0:01:45.247 ******** 
Monday 13 October 2025  16:20:50 +0000 (0:00:00.286)       0:01:45.246 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/core/porch] ***********
Monday 13 October 2025  16:20:51 +0000 (0:00:00.395)       0:01:45.643 ******** 
Monday 13 October 2025  16:20:51 +0000 (0:00:00.395)       0:01:45.642 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"porch\"",
        "├── [0-packagerevs.yaml]  CustomResourceDefinition packagerevs.config.porch.kpt.dev",
        "├── [0-packagevariants.yaml]  CustomResourceDefinition packagevariants.config.porch.kpt.dev",
        "├── [0-packagevariantsets.yaml]  CustomResourceDefinition packagevariantsets.config.porch.kpt.dev",
        "├── [0-repositories.yaml]  CustomResourceDefinition repositories.config.porch.kpt.dev",
        "├── [1-namespace.yaml]  Namespace porch-fn-system",
        "├── [1-namespace.yaml]  Namespace porch-system",
        "├── [2-function-runner.yaml]  Deployment porch-system/function-runner",
        "├── [2-function-runner.yaml]  Service porch-system/function-runner",
        "├── [2-function-runner.yaml]  ConfigMap porch-system/pod-cache-config",
        "├── [2-function-runner.yaml]  ServiceAccount porch-system/porch-fn-runner",
        "├── [3-porch-server.yaml]  Service porch-system/api",
        "├── [3-porch-server.yaml]  Deployment porch-system/porch-server",
        "├── [3-porch-server.yaml]  ServiceAccount porch-system/porch-server",
        "├── [4-apiservice.yaml]  APIService v1alpha1.porch.kpt.dev",
        "├── [5-rbac.yaml]  ClusterRole aggregated-apiserver-clusterrole",
        "├── [5-rbac.yaml]  Role porch-fn-system/porch-function-executor",
        "├── [5-rbac.yaml]  Role porch-system/aggregated-apiserver-role",
        "├── [6-rbac-bind.yaml]  ClusterRoleBinding sample-apiserver-clusterrolebinding",
        "├── [6-rbac-bind.yaml]  RoleBinding porch-fn-system/porch-function-executor",
        "├── [6-rbac-bind.yaml]  RoleBinding porch-system/sample-apiserver-rolebinding",
        "├── [7-auth-reader.yaml]  RoleBinding kube-system/porch-auth-reader",
        "├── [8-auth-delegator.yaml]  ClusterRoleBinding porch:system:auth-delegator",
        "├── [9-controllers.yaml]  Deployment porch-system/porch-controllers",
        "├── [9-controllers.yaml]  ServiceAccount porch-system/porch-controllers",
        "├── [9-porch-controller-clusterrole.yaml]  ClusterRole porch-controllers",
        "├── [9-porch-controller-packagevariants-clusterrole.yaml]  ClusterRole porch-controllers-packagevariants",
        "├── [9-porch-controller-packagevariants-clusterrolebinding.yaml]  ClusterRoleBinding porch-system:porch-controllers-packagevariants",
        "├── [9-porch-controller-packagevariantsets-clusterrole.yaml]  ClusterRole porch-controllers-packagevariantsets",
        "├── [9-porch-controller-packagevariantsets-clusterrolebinding.yaml]  ClusterRoleBinding porch-system:porch-controllers-packagevariantsets",
        "├── [Kptfile]  Kptfile porch",
        "└── [resourcegroup.yaml]  ResourceGroup porch-system/porch"
    ]
}

TASK [kpt : Render package: nephio/core/porch] *********************************
Monday 13 October 2025  16:20:51 +0000 (0:00:00.084)       0:01:45.727 ******** 
Monday 13 October 2025  16:20:51 +0000 (0:00:00.084)       0:01:45.726 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:20:51 +0000 (0:00:00.565)       0:01:46.293 ******** 
Monday 13 October 2025  16:20:51 +0000 (0:00:00.565)       0:01:46.292 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/core/porch] ***
Monday 13 October 2025  16:20:52 +0000 (0:00:00.362)       0:01:46.655 ******** 
Monday 13 October 2025  16:20:52 +0000 (0:00:00.362)       0:01:46.654 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/core/porch] **********************
Monday 13 October 2025  16:20:54 +0000 (0:00:01.705)       0:01:48.361 ******** 
Monday 13 October 2025  16:20:54 +0000 (0:00:01.705)       0:01:48.360 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-4211478660/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:20:54 +0000 (0:00:00.082)       0:01:48.443 ******** 
Monday 13 October 2025  16:20:54 +0000 (0:00:00.082)       0:01:48.442 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/core/porch] ***********************************
Monday 13 October 2025  16:20:54 +0000 (0:00:00.291)       0:01:48.734 ******** 
Monday 13 October 2025  16:20:54 +0000 (0:00:00.291)       0:01:48.733 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/core/porch] ****************
Monday 13 October 2025  16:20:54 +0000 (0:00:00.060)       0:01:48.794 ******** 
Monday 13 October 2025  16:20:54 +0000 (0:00:00.060)       0:01:48.794 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/core/porch] **********************************
Monday 13 October 2025  16:20:54 +0000 (0:00:00.075)       0:01:48.870 ******** 
Monday 13 October 2025  16:20:54 +0000 (0:00:00.075)       0:01:48.869 ******** 
ASYNC OK on 127.0.0.1: jid=j911540062816.203650
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:21:00 +0000 (0:00:05.729)       0:01:54.599 ******** 
Monday 13 October 2025  16:21:00 +0000 (0:00:05.729)       0:01:54.599 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:21:00 +0000 (0:00:00.047)       0:01:54.647 ******** 
Monday 13 October 2025  16:21:00 +0000 (0:00:00.047)       0:01:54.646 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:21:00 +0000 (0:00:00.279)       0:01:54.926 ******** 
Monday 13 October 2025  16:21:00 +0000 (0:00:00.279)       0:01:54.926 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/core/nephio-operator] ***
Monday 13 October 2025  16:21:00 +0000 (0:00:00.060)       0:01:54.987 ******** 
Monday 13 October 2025  16:21:00 +0000 (0:00:00.060)       0:01:54.986 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/core/nephio-operator] ************************
Monday 13 October 2025  16:21:00 +0000 (0:00:00.272)       0:01:55.260 ******** 
Monday 13 October 2025  16:21:00 +0000 (0:00:00.272)       0:01:55.259 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/core/nephio-operator] ***
Monday 13 October 2025  16:21:01 +0000 (0:00:00.343)       0:01:55.604 ******** 
Monday 13 October 2025  16:21:01 +0000 (0:00:00.343)       0:01:55.603 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/core/nephio-operator] ***
Monday 13 October 2025  16:21:01 +0000 (0:00:00.388)       0:01:55.993 ******** 
Monday 13 October 2025  16:21:01 +0000 (0:00:00.389)       0:01:55.992 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"nephio-operator\"",
        "├── [Kptfile]  Kptfile nephio-operator",
        "├── [namespace.yaml]  Namespace nephio-system",
        "├── [resourcegroup.yaml]  ResourceGroup nephio-system/inventory-65815331",
        "├── Package \"app\"",
        "│   ├── [Kptfile]  Kptfile app",
        "│   └── controller",
        "│       ├── [clusterrole-approval.yaml]  ClusterRole nephio-controller-approval-role",
        "│       ├── [clusterrole-bootstrap.yaml]  ClusterRole nephio-controller-bootstrap-role",
        "│       ├── [clusterrole-controller.yaml]  ClusterRole nephio-controller-controller-role",
        "│       ├── [clusterrole-network.yaml]  ClusterRole nephio-controller-network-role",
        "│       ├── [clusterrole-porch.yaml]  ClusterRole nephio-controller-porch-role",
        "│       ├── [clusterrole-repository.yaml]  ClusterRole nephio-controller-repository-role",
        "│       ├── [clusterrole-token.yaml]  ClusterRole nephio-controller-token-role",
        "│       ├── [clusterrolebinding-approval.yaml]  ClusterRoleBinding nephio-controller-approval-role-binding",
        "│       ├── [clusterrolebinding-bootstrap.yaml]  ClusterRoleBinding nephio-controller-bootstrap-role-binding",
        "│       ├── [clusterrolebinding-controller.yaml]  ClusterRoleBinding nephio-controller-controller-role-binding",
        "│       ├── [clusterrolebinding-network.yaml]  ClusterRoleBinding nephio-controller-network-role-binding",
        "│       ├── [clusterrolebinding-porch.yaml]  ClusterRoleBinding nephio-controller-porch-role-binding",
        "│       ├── [clusterrolebinding-repository.yaml]  ClusterRoleBinding nephio-controller-repository-role-binding",
        "│       ├── [clusterrolebinding-token.yaml]  ClusterRoleBinding nephio-controller-token-role-binding",
        "│       ├── [deployment-controller.yaml]  Deployment nephio-system/nephio-controller",
        "│       ├── [deployment-token-controller.yaml]  Deployment nephio-system/token-controller",
        "│       ├── [role-leader-election.yaml]  Role nephio-system/nephio-controller-leader-election-role",
        "│       ├── [rolebinding-leader-election.yaml]  RoleBinding nephio-system/nephio-controller-leader-election-role-binding",
        "│       └── [serviceaccount-controller.yaml]  ServiceAccount nephio-system/nephio-controller",
        "└── Package \"crd\"",
        "    ├── [Kptfile]  Kptfile crd",
        "    └── bases",
        "        ├── [config.nephio.org_networks.yaml]  CustomResourceDefinition networks.config.nephio.org",
        "        ├── [infra.nephio.org_clustercontexts.yaml]  CustomResourceDefinition clustercontexts.infra.nephio.org",
        "        ├── [infra.nephio.org_networkconfigs.yaml]  CustomResourceDefinition networkconfigs.infra.nephio.org",
        "        ├── [infra.nephio.org_networks.yaml]  CustomResourceDefinition networks.infra.nephio.org",
        "        ├── [infra.nephio.org_repositories.yaml]  CustomResourceDefinition repositories.infra.nephio.org",
        "        ├── [infra.nephio.org_tokens.yaml]  CustomResourceDefinition tokens.infra.nephio.org",
        "        ├── [infra.nephio.org_workloadclusters.yaml]  CustomResourceDefinition workloadclusters.infra.nephio.org",
        "        ├── [req.nephio.org_capacities.yaml]  CustomResourceDefinition capacities.req.nephio.org",
        "        ├── [req.nephio.org_datanetworknames.yaml]  CustomResourceDefinition datanetworknames.req.nephio.org",
        "        ├── [req.nephio.org_datanetworks.yaml]  CustomResourceDefinition datanetworks.req.nephio.org",
        "        ├── [req.nephio.org_interfaces.yaml]  CustomResourceDefinition interfaces.req.nephio.org",
        "        ├── [workload.nephio.org_amfdeployments.yaml]  CustomResourceDefinition amfdeployments.workload.nephio.org",
        "        ├── [workload.nephio.org_smfdeployments.yaml]  CustomResourceDefinition smfdeployments.workload.nephio.org",
        "        └── [workload.nephio.org_upfdeployments.yaml]  CustomResourceDefinition upfdeployments.workload.nephio.org"
    ]
}

TASK [kpt : Render package: nephio/core/nephio-operator] ***********************
Monday 13 October 2025  16:21:01 +0000 (0:00:00.083)       0:01:56.076 ******** 
Monday 13 October 2025  16:21:01 +0000 (0:00:00.083)       0:01:56.075 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:21:02 +0000 (0:00:00.409)       0:01:56.486 ******** 
Monday 13 October 2025  16:21:02 +0000 (0:00:00.409)       0:01:56.485 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/core/nephio-operator] ***
Monday 13 October 2025  16:21:02 +0000 (0:00:00.342)       0:01:56.829 ******** 
Monday 13 October 2025  16:21:02 +0000 (0:00:00.342)       0:01:56.828 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/core/nephio-operator] ************
Monday 13 October 2025  16:21:04 +0000 (0:00:01.906)       0:01:58.736 ******** 
Monday 13 October 2025  16:21:04 +0000 (0:00:01.906)       0:01:58.735 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Common subdirectories: /tmp/kpt-1038308103/local-main/app and /tmp/kpt-1038308103/target-main/app",
        "Common subdirectories: /tmp/kpt-1038308103/local-main/crd and /tmp/kpt-1038308103/target-main/crd",
        "Only in /tmp/kpt-1038308103/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:21:04 +0000 (0:00:00.079)       0:01:58.815 ******** 
Monday 13 October 2025  16:21:04 +0000 (0:00:00.079)       0:01:58.814 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/core/nephio-operator] *************************
Monday 13 October 2025  16:21:04 +0000 (0:00:00.311)       0:01:59.127 ******** 
Monday 13 October 2025  16:21:04 +0000 (0:00:00.311)       0:01:59.126 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/core/nephio-operator] ******
Monday 13 October 2025  16:21:04 +0000 (0:00:00.058)       0:01:59.185 ******** 
Monday 13 October 2025  16:21:04 +0000 (0:00:00.058)       0:01:59.184 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/core/nephio-operator] ************************
Monday 13 October 2025  16:21:04 +0000 (0:00:00.075)       0:01:59.261 ******** 
Monday 13 October 2025  16:21:04 +0000 (0:00:00.075)       0:01:59.260 ******** 
ASYNC OK on 127.0.0.1: jid=j155468150253.204755
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:21:10 +0000 (0:00:05.871)       0:02:05.132 ******** 
Monday 13 October 2025  16:21:10 +0000 (0:00:05.871)       0:02:05.132 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:21:10 +0000 (0:00:00.059)       0:02:05.191 ******** 
Monday 13 October 2025  16:21:10 +0000 (0:00:00.059)       0:02:05.191 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:21:11 +0000 (0:00:00.135)       0:02:05.327 ******** 
Monday 13 October 2025  16:21:11 +0000 (0:00:00.135)       0:02:05.327 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/core/configsync] ***
Monday 13 October 2025  16:21:11 +0000 (0:00:00.067)       0:02:05.395 ******** 
Monday 13 October 2025  16:21:11 +0000 (0:00:00.067)       0:02:05.394 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/core/configsync] *****************************
Monday 13 October 2025  16:21:11 +0000 (0:00:00.349)       0:02:05.745 ******** 
Monday 13 October 2025  16:21:11 +0000 (0:00:00.349)       0:02:05.744 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/core/configsync] ********
Monday 13 October 2025  16:21:11 +0000 (0:00:00.382)       0:02:06.127 ******** 
Monday 13 October 2025  16:21:11 +0000 (0:00:00.382)       0:02:06.126 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/core/configsync] ******
Monday 13 October 2025  16:21:12 +0000 (0:00:00.441)       0:02:06.569 ******** 
Monday 13 October 2025  16:21:12 +0000 (0:00:00.441)       0:02:06.568 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"configsync\"",
        "├── [Kptfile]  Kptfile configsync",
        "├── [config-management-operator.yaml]  Namespace config-management-monitoring",
        "├── [config-management-operator.yaml]  ClusterRole config-management-operator",
        "├── [config-management-operator.yaml]  ClusterRoleBinding config-management-operator",
        "├── [config-management-operator.yaml]  Namespace config-management-system",
        "├── [config-management-operator.yaml]  CustomResourceDefinition configmanagements.configmanagement.gke.io",
        "├── [config-management-operator.yaml]  Deployment config-management-system/config-management-operator",
        "├── [config-management-operator.yaml]  ServiceAccount config-management-system/config-management-operator",
        "├── [configsync.yaml]  ConfigManagement config-management",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [resourcegroup.yaml]  ResourceGroup default/inventory-48265382",
        "└── [rootsync-crd.yaml]  CustomResourceDefinition rootsyncs.configsync.gke.io"
    ]
}

TASK [kpt : Render package: nephio/core/configsync] ****************************
Monday 13 October 2025  16:21:12 +0000 (0:00:00.073)       0:02:06.642 ******** 
Monday 13 October 2025  16:21:12 +0000 (0:00:00.073)       0:02:06.641 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:21:12 +0000 (0:00:00.454)       0:02:07.097 ******** 
Monday 13 October 2025  16:21:12 +0000 (0:00:00.454)       0:02:07.096 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/core/configsync] ***
Monday 13 October 2025  16:21:13 +0000 (0:00:00.391)       0:02:07.488 ******** 
Monday 13 October 2025  16:21:13 +0000 (0:00:00.391)       0:02:07.488 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/core/configsync] *****************
Monday 13 October 2025  16:21:20 +0000 (0:00:06.839)       0:02:14.328 ******** 
Monday 13 October 2025  16:21:20 +0000 (0:00:06.839)       0:02:14.327 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2393721409/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:21:20 +0000 (0:00:00.069)       0:02:14.397 ******** 
Monday 13 October 2025  16:21:20 +0000 (0:00:00.069)       0:02:14.396 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/core/configsync] ******************************
Monday 13 October 2025  16:21:20 +0000 (0:00:00.344)       0:02:14.742 ******** 
Monday 13 October 2025  16:21:20 +0000 (0:00:00.344)       0:02:14.741 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/core/configsync] ***********
Monday 13 October 2025  16:21:20 +0000 (0:00:00.056)       0:02:14.798 ******** 
Monday 13 October 2025  16:21:20 +0000 (0:00:00.056)       0:02:14.798 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/core/configsync] *****************************
Monday 13 October 2025  16:21:20 +0000 (0:00:00.065)       0:02:14.864 ******** 
Monday 13 October 2025  16:21:20 +0000 (0:00:00.065)       0:02:14.864 ******** 
ASYNC OK on 127.0.0.1: jid=j473243140903.206116
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:21:26 +0000 (0:00:05.871)       0:02:20.736 ******** 
Monday 13 October 2025  16:21:26 +0000 (0:00:05.871)       0:02:20.735 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:21:26 +0000 (0:00:00.054)       0:02:20.791 ******** 
Monday 13 October 2025  16:21:26 +0000 (0:00:00.054)       0:02:20.790 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:21:26 +0000 (0:00:00.140)       0:02:20.932 ******** 
Monday 13 October 2025  16:21:26 +0000 (0:00:00.140)       0:02:20.931 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/optional/network-config] ***
Monday 13 October 2025  16:21:26 +0000 (0:00:00.059)       0:02:20.991 ******** 
Monday 13 October 2025  16:21:26 +0000 (0:00:00.059)       0:02:20.990 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/network-config] *********************
Monday 13 October 2025  16:21:27 +0000 (0:00:00.422)       0:02:21.414 ******** 
Monday 13 October 2025  16:21:27 +0000 (0:00:00.422)       0:02:21.413 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/network-config] ***
Monday 13 October 2025  16:21:27 +0000 (0:00:00.300)       0:02:21.714 ******** 
Monday 13 October 2025  16:21:27 +0000 (0:00:00.300)       0:02:21.714 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/network-config] ***
Monday 13 October 2025  16:21:27 +0000 (0:00:00.381)       0:02:22.096 ******** 
Monday 13 October 2025  16:21:27 +0000 (0:00:00.381)       0:02:22.095 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"network-config\"",
        "├── [Kptfile]  Kptfile network-config",
        "├── [namespace.yaml]  Namespace network-config",
        "├── [resourcegroup.yaml]  ResourceGroup network-config/inventory-14496733",
        "├── Package \"app\"",
        "│   ├── [Kptfile]  Kptfile app",
        "│   └── controller",
        "│       ├── [clusterrole-controller.yaml]  ClusterRole network-config-controller-controller-role",
        "│       ├── [clusterrole-network.yaml]  ClusterRole network-config-controller-network-role",
        "│       ├── [clusterrole-target.yaml]  ClusterRole network-config-controller-target-role",
        "│       ├── [clusterrolebinding-controller.yaml]  ClusterRoleBinding network-config-controller-controller-role-binding",
        "│       ├── [clusterrolebinding-network.yaml]  ClusterRoleBinding network-config-controller-network-role-binding",
        "│       ├── [clusterrolebinding-target.yaml]  ClusterRoleBinding network-config-controller-target-role-binding",
        "│       ├── [deployment-controller.yaml]  Deployment network-config/network-config-controller",
        "│       ├── [role-leader-election.yaml]  Role network-config/network-config-controller-leader-election-role",
        "│       ├── [rolebinding-leader-election.yaml]  RoleBinding network-config/network-config-controller-leader-election-role-binding",
        "│       └── [serviceaccount-controller.yaml]  ServiceAccount network-config/network-config-controller",
        "└── Package \"crd\"",
        "    └── [Kptfile]  Kptfile crd"
    ]
}

TASK [kpt : Render package: nephio/optional/network-config] ********************
Monday 13 October 2025  16:21:27 +0000 (0:00:00.096)       0:02:22.192 ******** 
Monday 13 October 2025  16:21:27 +0000 (0:00:00.096)       0:02:22.191 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:21:28 +0000 (0:00:00.390)       0:02:22.583 ******** 
Monday 13 October 2025  16:21:28 +0000 (0:00:00.390)       0:02:22.582 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/network-config] ***
Monday 13 October 2025  16:21:28 +0000 (0:00:00.288)       0:02:22.872 ******** 
Monday 13 October 2025  16:21:28 +0000 (0:00:00.288)       0:02:22.871 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/network-config] *********
Monday 13 October 2025  16:21:32 +0000 (0:00:03.735)       0:02:26.607 ******** 
Monday 13 October 2025  16:21:32 +0000 (0:00:03.735)       0:02:26.607 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Common subdirectories: /tmp/kpt-1124945560/local-main/app and /tmp/kpt-1124945560/target-main/app",
        "Common subdirectories: /tmp/kpt-1124945560/local-main/crd and /tmp/kpt-1124945560/target-main/crd",
        "Only in /tmp/kpt-1124945560/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:21:32 +0000 (0:00:00.082)       0:02:26.690 ******** 
Monday 13 October 2025  16:21:32 +0000 (0:00:00.082)       0:02:26.689 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/network-config] **********************
Monday 13 October 2025  16:21:33 +0000 (0:00:00.673)       0:02:27.363 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.673)       0:02:27.362 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/network-config] ***
Monday 13 October 2025  16:21:33 +0000 (0:00:00.041)       0:02:27.405 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.041)       0:02:27.404 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/optional/network-config] *********************
Monday 13 October 2025  16:21:33 +0000 (0:00:00.060)       0:02:27.466 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.060)       0:02:27.465 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:21:33 +0000 (0:00:00.532)       0:02:27.998 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.532)       0:02:27.997 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:21:33 +0000 (0:00:00.050)       0:02:28.049 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.050)       0:02:28.048 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:21:33 +0000 (0:00:00.168)       0:02:28.217 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.168)       0:02:28.217 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/optional/fluxcd] ***
Monday 13 October 2025  16:21:33 +0000 (0:00:00.062)       0:02:28.280 ******** 
Monday 13 October 2025  16:21:33 +0000 (0:00:00.062)       0:02:28.279 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/fluxcd] *****************************
Monday 13 October 2025  16:21:34 +0000 (0:00:00.366)       0:02:28.647 ******** 
Monday 13 October 2025  16:21:34 +0000 (0:00:00.366)       0:02:28.646 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/fluxcd] ********
Monday 13 October 2025  16:21:34 +0000 (0:00:00.348)       0:02:28.996 ******** 
Monday 13 October 2025  16:21:34 +0000 (0:00:00.348)       0:02:28.995 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/fluxcd] ******
Monday 13 October 2025  16:21:35 +0000 (0:00:00.447)       0:02:29.443 ******** 
Monday 13 October 2025  16:21:35 +0000 (0:00:00.447)       0:02:29.442 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"fluxcd\"",
        "├── [Kptfile]  Kptfile fluxcd",
        "├── [flux-ns.yaml]  Namespace flux-system",
        "├── [helm-controller.yaml]  CustomResourceDefinition helmreleases.helm.toolkit.fluxcd.io",
        "├── [helm-controller.yaml]  Deployment flux-system/helm-controller",
        "├── [helm-controller.yaml]  ServiceAccount flux-system/helm-controller",
        "├── [kustomize-controller.yaml]  CustomResourceDefinition kustomizations.kustomize.toolkit.fluxcd.io",
        "├── [kustomize-controller.yaml]  Deployment flux-system/kustomize-controller",
        "├── [kustomize-controller.yaml]  ServiceAccount flux-system/kustomize-controller",
        "├── [notification-controller.yaml]  CustomResourceDefinition alerts.notification.toolkit.fluxcd.io",
        "├── [notification-controller.yaml]  CustomResourceDefinition providers.notification.toolkit.fluxcd.io",
        "├── [notification-controller.yaml]  CustomResourceDefinition receivers.notification.toolkit.fluxcd.io",
        "├── [notification-controller.yaml]  Deployment flux-system/notification-controller",
        "├── [notification-controller.yaml]  Service flux-system/notification-controller",
        "├── [notification-controller.yaml]  ServiceAccount flux-system/notification-controller",
        "├── [notification-controller.yaml]  Service flux-system/webhook-receiver",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [policies.yaml]  NetworkPolicy flux-system/allow-egress",
        "├── [policies.yaml]  NetworkPolicy flux-system/allow-scraping",
        "├── [policies.yaml]  NetworkPolicy flux-system/allow-webhooks",
        "├── [rbac.yaml]  ClusterRoleBinding cluster-reconciler",
        "├── [rbac.yaml]  ClusterRole crd-controller",
        "├── [rbac.yaml]  ClusterRoleBinding crd-controller",
        "├── [rbac.yaml]  ResourceQuota critical-pods",
        "├── [rbac.yaml]  ClusterRole flux-edit",
        "├── [rbac.yaml]  ClusterRole flux-view",
        "├── [resourcegroup.yaml]  ResourceGroup default/inventory-30065653",
        "├── [source-controller.yaml]  CustomResourceDefinition buckets.source.toolkit.fluxcd.io",
        "├── [source-controller.yaml]  CustomResourceDefinition gitrepositories.source.toolkit.fluxcd.io",
        "├── [source-controller.yaml]  CustomResourceDefinition helmcharts.source.toolkit.fluxcd.io",
        "├── [source-controller.yaml]  CustomResourceDefinition helmrepositories.source.toolkit.fluxcd.io",
        "├── [source-controller.yaml]  CustomResourceDefinition ocirepositories.source.toolkit.fluxcd.io",
        "├── [source-controller.yaml]  Deployment flux-system/source-controller",
        "├── [source-controller.yaml]  Service flux-system/source-controller",
        "└── [source-controller.yaml]  ServiceAccount flux-system/source-controller"
    ]
}

TASK [kpt : Render package: nephio/optional/fluxcd] ****************************
Monday 13 October 2025  16:21:35 +0000 (0:00:00.074)       0:02:29.517 ******** 
Monday 13 October 2025  16:21:35 +0000 (0:00:00.074)       0:02:29.517 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:21:35 +0000 (0:00:00.564)       0:02:30.082 ******** 
Monday 13 October 2025  16:21:35 +0000 (0:00:00.564)       0:02:30.081 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/fluxcd] ***
Monday 13 October 2025  16:21:36 +0000 (0:00:00.298)       0:02:30.380 ******** 
Monday 13 October 2025  16:21:36 +0000 (0:00:00.298)       0:02:30.380 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/fluxcd] *****************
Monday 13 October 2025  16:21:37 +0000 (0:00:01.886)       0:02:32.267 ******** 
Monday 13 October 2025  16:21:37 +0000 (0:00:01.886)       0:02:32.266 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-1481224624/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:21:38 +0000 (0:00:00.076)       0:02:32.344 ******** 
Monday 13 October 2025  16:21:38 +0000 (0:00:00.076)       0:02:32.343 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/fluxcd] ******************************
Monday 13 October 2025  16:21:38 +0000 (0:00:00.323)       0:02:32.667 ******** 
Monday 13 October 2025  16:21:38 +0000 (0:00:00.323)       0:02:32.666 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/fluxcd] ***********
Monday 13 October 2025  16:21:38 +0000 (0:00:00.062)       0:02:32.729 ******** 
Monday 13 October 2025  16:21:38 +0000 (0:00:00.062)       0:02:32.728 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/optional/fluxcd] *****************************
Monday 13 October 2025  16:21:38 +0000 (0:00:00.078)       0:02:32.808 ******** 
Monday 13 October 2025  16:21:38 +0000 (0:00:00.078)       0:02:32.807 ******** 
ASYNC POLL on 127.0.0.1: jid=j906141382722.208213 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j906141382722.208213 started=1 finished=0
ASYNC OK on 127.0.0.1: jid=j906141382722.208213
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:21:54 +0000 (0:00:16.253)       0:02:49.061 ******** 
Monday 13 October 2025  16:21:54 +0000 (0:00:16.253)       0:02:49.060 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:21:54 +0000 (0:00:00.056)       0:02:49.117 ******** 
Monday 13 October 2025  16:21:54 +0000 (0:00:00.056)       0:02:49.116 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:21:54 +0000 (0:00:00.103)       0:02:49.221 ******** 
Monday 13 October 2025  16:21:54 +0000 (0:00:00.103)       0:02:49.220 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/optional/argo-cd-full] ***
Monday 13 October 2025  16:21:55 +0000 (0:00:00.145)       0:02:49.367 ******** 
Monday 13 October 2025  16:21:55 +0000 (0:00:00.145)       0:02:49.366 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/argo-cd-full] ***********************
Monday 13 October 2025  16:21:55 +0000 (0:00:00.337)       0:02:49.705 ******** 
Monday 13 October 2025  16:21:55 +0000 (0:00:00.337)       0:02:49.704 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/argo-cd-full] ***
Monday 13 October 2025  16:21:55 +0000 (0:00:00.273)       0:02:49.979 ******** 
Monday 13 October 2025  16:21:55 +0000 (0:00:00.273)       0:02:49.978 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/argo-cd-full] ***
Monday 13 October 2025  16:21:56 +0000 (0:00:00.503)       0:02:50.482 ******** 
Monday 13 October 2025  16:21:56 +0000 (0:00:00.503)       0:02:50.481 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"argo-cd-full\"",
        "├── [Kptfile]  Kptfile argo-cd-full",
        "├── [argo-application-crd.yaml]  CustomResourceDefinition applications.argoproj.io",
        "├── [argo-applicationset-crd.yaml]  CustomResourceDefinition applicationsets.argoproj.io",
        "├── [argo-appproject-crd.yaml]  CustomResourceDefinition appprojects.argoproj.io",
        "├── [argo-clusterrole.yaml]  ClusterRole argocd-application-controller",
        "├── [argo-clusterrole.yaml]  ClusterRole argocd-applicationset-controller",
        "├── [argo-clusterrole.yaml]  ClusterRole argocd-server",
        "├── [argo-clusterrolebinding.yaml]  ClusterRoleBinding argocd-application-controller",
        "├── [argo-clusterrolebinding.yaml]  ClusterRoleBinding argocd-applicationset-controller",
        "├── [argo-clusterrolebinding.yaml]  ClusterRoleBinding argocd-server",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-cmd-params-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-gpg-keys-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-notifications-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-rbac-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-ssh-known-hosts-cm",
        "├── [argo-cm.yaml]  ConfigMap argocd/argocd-tls-certs-cm",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-applicationset-controller",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-dex-server",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-notifications-controller",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-redis",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-repo-server",
        "├── [argo-deployment.yaml]  Deployment argocd/argocd-server",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-application-controller-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-applicationset-controller-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-dex-server-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-notifications-controller-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-redis-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-repo-server-network-policy",
        "├── [argo-networkpolicy.yaml]  NetworkPolicy argocd/argocd-server-network-policy",
        "├── [argo-ns.yaml]  Namespace argocd",
        "├── [argo-role.yaml]  Role argocd/argocd-application-controller",
        "├── [argo-role.yaml]  Role argocd/argocd-applicationset-controller",
        "├── [argo-role.yaml]  Role argocd/argocd-dex-server",
        "├── [argo-role.yaml]  Role argocd/argocd-notifications-controller",
        "├── [argo-role.yaml]  Role argocd/argocd-redis",
        "├── [argo-role.yaml]  Role argocd/argocd-server",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-application-controller",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-applicationset-controller",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-dex-server",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-notifications-controller",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-redis",
        "├── [argo-rolebinding.yaml]  RoleBinding argocd/argocd-server",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-application-controller",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-applicationset-controller",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-dex-server",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-notifications-controller",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-redis",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-repo-server",
        "├── [argo-sa.yaml]  ServiceAccount argocd/argocd-server",
        "├── [argo-secret.yaml]  Secret argocd/argocd-notifications-secret",
        "├── [argo-secret.yaml]  Secret argocd/argocd-secret",
        "├── [argo-service.yaml]  Service argocd/argocd-applicationset-controller",
        "├── [argo-service.yaml]  Service argocd/argocd-dex-server",
        "├── [argo-service.yaml]  Service argocd/argocd-metrics",
        "├── [argo-service.yaml]  Service argocd/argocd-notifications-controller-metrics",
        "├── [argo-service.yaml]  Service argocd/argocd-redis",
        "├── [argo-service.yaml]  Service argocd/argocd-repo-server",
        "├── [argo-service.yaml]  Service argocd/argocd-server",
        "├── [argo-service.yaml]  Service argocd/argocd-server-metrics",
        "├── [argo-statefulset.yaml]  StatefulSet argocd/argocd-application-controller",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "└── [resourcegroup.yaml]  ResourceGroup argocd/inventory-38128773"
    ]
}

TASK [kpt : Render package: nephio/optional/argo-cd-full] **********************
Monday 13 October 2025  16:21:56 +0000 (0:00:00.085)       0:02:50.567 ******** 
Monday 13 October 2025  16:21:56 +0000 (0:00:00.085)       0:02:50.567 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:21:59 +0000 (0:00:03.055)       0:02:53.623 ******** 
Monday 13 October 2025  16:21:59 +0000 (0:00:03.055)       0:02:53.622 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/argo-cd-full] ***
Monday 13 October 2025  16:21:59 +0000 (0:00:00.369)       0:02:53.992 ******** 
Monday 13 October 2025  16:21:59 +0000 (0:00:00.369)       0:02:53.991 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/argo-cd-full] ***********
Monday 13 October 2025  16:22:06 +0000 (0:00:07.105)       0:03:01.098 ******** 
Monday 13 October 2025  16:22:06 +0000 (0:00:07.105)       0:03:01.097 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "Only in /tmp/kpt-2914676492/local-main: resourcegroup.yaml"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:22:06 +0000 (0:00:00.081)       0:03:01.179 ******** 
Monday 13 October 2025  16:22:06 +0000 (0:00:00.081)       0:03:01.178 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/argo-cd-full] ************************
Monday 13 October 2025  16:22:07 +0000 (0:00:00.308)       0:03:01.488 ******** 
Monday 13 October 2025  16:22:07 +0000 (0:00:00.308)       0:03:01.487 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/argo-cd-full] *****
Monday 13 October 2025  16:22:07 +0000 (0:00:00.059)       0:03:01.547 ******** 
Monday 13 October 2025  16:22:07 +0000 (0:00:00.059)       0:03:01.546 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/optional/argo-cd-full] ***********************
Monday 13 October 2025  16:22:07 +0000 (0:00:00.081)       0:03:01.629 ******** 
Monday 13 October 2025  16:22:07 +0000 (0:00:00.081)       0:03:01.628 ******** 
ASYNC OK on 127.0.0.1: jid=j707173724379.210700
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:22:13 +0000 (0:00:05.858)       0:03:07.487 ******** 
Monday 13 October 2025  16:22:13 +0000 (0:00:05.858)       0:03:07.486 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:22:13 +0000 (0:00:00.051)       0:03:07.538 ******** 
Monday 13 October 2025  16:22:13 +0000 (0:00:00.051)       0:03:07.537 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [install : Wait for packages to be applied] *******************************
Monday 13 October 2025  16:22:13 +0000 (0:00:00.083)       0:03:07.622 ******** 
Monday 13 October 2025  16:22:13 +0000 (0:00:00.083)       0:03:07.621 ******** 
skipping: [127.0.0.1]

TASK [install : Wait for deployments] ******************************************
Monday 13 October 2025  16:22:13 +0000 (0:00:00.036)       0:03:07.659 ******** 
Monday 13 October 2025  16:22:13 +0000 (0:00:00.036)       0:03:07.658 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=porch-fn-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=porch-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=nephio-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=config-management-monitoring)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=config-management-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=resource-group-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=flux-system)
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1 => (item=argocd)

TASK [install : Get deployment resources in namespace porch-fn-system] *********
Monday 13 October 2025  16:22:13 +0000 (0:00:00.324)       0:03:07.983 ******** 
Monday 13 October 2025  16:22:13 +0000 (0:00:00.324)       0:03:07.982 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace porch-fn-system] *******
Monday 13 October 2025  16:22:14 +0000 (0:00:01.331)       0:03:09.314 ******** 
Monday 13 October 2025  16:22:14 +0000 (0:00:01.331)       0:03:09.313 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": []
}

TASK [install : Wait for deployments in namespace porch-fn-system] *************
Monday 13 October 2025  16:22:15 +0000 (0:00:00.080)       0:03:09.394 ******** 
Monday 13 October 2025  16:22:15 +0000 (0:00:00.080)       0:03:09.394 ******** 
skipping: [127.0.0.1]

TASK [install : Get deployment resources in namespace porch-system] ************
Monday 13 October 2025  16:22:15 +0000 (0:00:00.058)       0:03:09.453 ******** 
Monday 13 October 2025  16:22:15 +0000 (0:00:00.058)       0:03:09.452 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace porch-system] **********
Monday 13 October 2025  16:22:16 +0000 (0:00:01.060)       0:03:10.514 ******** 
Monday 13 October 2025  16:22:16 +0000 (0:00:01.060)       0:03:10.513 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "nephio",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|porch-system|function-runner",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"nephio\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|porch-system|function-runner\"},\"name\":\"function-runner\",\"namespace\":\"porch-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"function-runner\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"function-runner\"}},\"spec\":{\"containers\":[{\"command\":[\"/server\",\"--config=/config.yaml\",\"--functions=/functions\",\"--pod-namespace=porch-fn-system\",\"--max-request-body-size=6291456\"],\"env\":[{\"name\":\"WRAPPER_SERVER_IMAGE\",\"value\":\"docker.io/nephio/porch-wrapper-server:latest\"}],\"image\":\"docker.io/nephio/porch-function-runner:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"function-runner\",\"ports\":[{\"containerPort\":9445}],\"readinessProbe\":{\"exec\":{\"command\":[\"/grpc-health-probe\",\"-addr\",\"localhost:9445\"]}},\"resources\":{\"requests\":{\"cpu\":\"125m\",\"memory\":\"64Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/pod-cache-config\",\"name\":\"pod-cache-config-volume\"}]}],\"serviceAccountName\":\"porch-fn-runner\",\"volumes\":[{\"configMap\":{\"name\":\"pod-cache-config\"},\"name\":\"pod-cache-config-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:55:50Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"function-runner\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"WRAPPER_SERVER_IMAGE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":9445,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:exec": {
                                                        ".": {},
                                                        "f:command": {}
                                                    },
                                                    "f:failureThreshold": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/pod-cache-config\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"pod-cache-config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:55:50Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:57:01Z"
                    }
                ],
                "name": "function-runner",
                "namespace": "porch-system",
                "resourceVersion": "28411",
                "uid": "b6996d59-1114-4d54-8364-b68329d1b2e7"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "function-runner"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "function-runner"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/server",
                                    "--config=/config.yaml",
                                    "--functions=/functions",
                                    "--pod-namespace=porch-fn-system",
                                    "--max-request-body-size=6291456"
                                ],
                                "env": [
                                    {
                                        "name": "WRAPPER_SERVER_IMAGE",
                                        "value": "docker.io/nephio/porch-wrapper-server:latest"
                                    }
                                ],
                                "image": "docker.io/nephio/porch-function-runner:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "function-runner",
                                "ports": [
                                    {
                                        "containerPort": 9445,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/grpc-health-probe",
                                            "-addr",
                                            "localhost:9445"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "125m",
                                        "memory": "64Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/pod-cache-config",
                                        "name": "pod-cache-config-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "porch-fn-runner",
                        "serviceAccountName": "porch-fn-runner",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "pod-cache-config"
                                },
                                "name": "pod-cache-config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:01Z",
                        "lastUpdateTime": "2025-10-13T15:57:01Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:55:50Z",
                        "lastUpdateTime": "2025-10-13T15:57:01Z",
                        "message": "ReplicaSet \"function-runner-cd6865795\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "nephio",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|porch-system|porch-controllers",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"nephio\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|porch-system|porch-controllers\"},\"labels\":{\"k8s-app\":\"porch-controllers\"},\"name\":\"porch-controllers\",\"namespace\":\"porch-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"porch-controllers\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"porch-controllers\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"ENABLE_PACKAGEVARIANTS\",\"value\":\"true\"},{\"name\":\"ENABLE_PACKAGEVARIANTSETS\",\"value\":\"true\"}],\"image\":\"docker.io/nephio/porch-controllers:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":8081,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"porch-controllers\",\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":8081,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":3}}],\"serviceAccountName\":\"porch-controllers\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:55:50Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "porch-controllers"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"porch-controllers\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ENABLE_PACKAGEVARIANTS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_PACKAGEVARIANTSETS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:55:50Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:56:11Z"
                    }
                ],
                "name": "porch-controllers",
                "namespace": "porch-system",
                "resourceVersion": "27916",
                "uid": "bdb7c7b0-453f-4818-8491-1d1294965c37"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "porch-controllers"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "porch-controllers"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ENABLE_PACKAGEVARIANTS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_PACKAGEVARIANTSETS",
                                        "value": "true"
                                    }
                                ],
                                "image": "docker.io/nephio/porch-controllers:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "porch-controllers",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "porch-controllers",
                        "serviceAccountName": "porch-controllers",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:56:11Z",
                        "lastUpdateTime": "2025-10-13T15:56:11Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:55:50Z",
                        "lastUpdateTime": "2025-10-13T15:56:11Z",
                        "message": "ReplicaSet \"porch-controllers-6794ff46d6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "nephio",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|porch-system|porch-server",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"nephio\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|porch-system|porch-server\"},\"name\":\"porch-server\",\"namespace\":\"porch-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"porch-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"porch-server\"}},\"spec\":{\"containers\":[{\"args\":[\"--function-runner=function-runner:9445\",\"--cache-directory=/cache\",\"--cert-dir=/tmp/certs\",\"--secure-port=4443\",\"--repo-sync-frequency=3m\",\"--disable-validating-admissions-policy=true\",\"--max-request-body-size=6291456\"],\"env\":[{\"name\":\"OTEL_SERVICE_NAME\",\"value\":\"porch-server\"},{\"name\":\"CERT_STORAGE_DIR\",\"value\":\"/etc/webhook/certs\"},{\"name\":\"GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB\",\"value\":\"true\"}],\"image\":\"docker.io/nephio/porch-server:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":4443,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"porch-server\",\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":4443,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":3},\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"256Mi\"}},\"securityContext\":{\"runAsGroup\":65532,\"runAsNonRoot\":true,\"runAsUser\":65532},\"volumeMounts\":[{\"mountPath\":\"/cache\",\"name\":\"cache-volume\"},{\"mountPath\":\"/etc/webhook/certs\",\"name\":\"webhook-certs\"},{\"mountPath\":\"/tmp/certs\",\"name\":\"api-server-certs\"}]}],\"serviceAccountName\":\"porch-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"cache-volume\"},{\"emptyDir\":{},\"name\":\"webhook-certs\"},{\"emptyDir\":{},\"name\":\"api-server-certs\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:55:50Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"porch-server\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"CERT_STORAGE_DIR\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OTEL_SERVICE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/cache\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/webhook/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"api-server-certs\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"cache-volume\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"webhook-certs\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:55:50Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:56:16Z"
                    }
                ],
                "name": "porch-server",
                "namespace": "porch-system",
                "resourceVersion": "28041",
                "uid": "7647b497-1f96-4858-b20c-bbb4a43049a4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "porch-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "porch-server"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--function-runner=function-runner:9445",
                                    "--cache-directory=/cache",
                                    "--cert-dir=/tmp/certs",
                                    "--secure-port=4443",
                                    "--repo-sync-frequency=3m",
                                    "--disable-validating-admissions-policy=true",
                                    "--max-request-body-size=6291456"
                                ],
                                "env": [
                                    {
                                        "name": "OTEL_SERVICE_NAME",
                                        "value": "porch-server"
                                    },
                                    {
                                        "name": "CERT_STORAGE_DIR",
                                        "value": "/etc/webhook/certs"
                                    },
                                    {
                                        "name": "GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB",
                                        "value": "true"
                                    }
                                ],
                                "image": "docker.io/nephio/porch-server:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 4443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "porch-server",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 4443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsGroup": 65532,
                                    "runAsNonRoot": true,
                                    "runAsUser": 65532
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/cache",
                                        "name": "cache-volume"
                                    },
                                    {
                                        "mountPath": "/etc/webhook/certs",
                                        "name": "webhook-certs"
                                    },
                                    {
                                        "mountPath": "/tmp/certs",
                                        "name": "api-server-certs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "porch-server",
                        "serviceAccountName": "porch-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "cache-volume"
                            },
                            {
                                "emptyDir": {},
                                "name": "webhook-certs"
                            },
                            {
                                "emptyDir": {},
                                "name": "api-server-certs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:56:16Z",
                        "lastUpdateTime": "2025-10-13T15:56:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:55:50Z",
                        "lastUpdateTime": "2025-10-13T15:56:16Z",
                        "message": "ReplicaSet \"porch-server-5bd84899f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace porch-system] ****************
Monday 13 October 2025  16:22:16 +0000 (0:00:00.130)       0:03:10.644 ******** 
Monday 13 October 2025  16:22:16 +0000 (0:00:00.130)       0:03:10.643 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'function-runner', 'namespace': 'porch-system', 'uid': 'b6996d59-1114-4d54-8364-b68329d1b2e7', 'resourceVersion': '28411', 'generation': 1, 'creationTimestamp': '2025-10-13T15:55:50Z', 'annotations': {'config.k8s.io/owning-inventory': 'nephio', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|porch-system|function-runner', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"nephio","internal.kpt.dev/upstream-identifier":"apps|Deployment|porch-system|function-runner"},"name":"function-runner","namespace":"porch-system"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"function-runner"}},"template":{"metadata":{"labels":{"app":"function-runner"}},"spec":{"containers":[{"command":["/server","--config=/config.yaml","--functions=/functions","--pod-namespace=porch-fn-system","--max-request-body-size=6291456"],"env":[{"name":"WRAPPER_SERVER_IMAGE","value":"docker.io/nephio/porch-wrapper-server:latest"}],"image":"docker.io/nephio/porch-function-runner:latest","imagePullPolicy":"IfNotPresent","name":"function-runner","ports":[{"containerPort":9445}],"readinessProbe":{"exec":{"command":["/grpc-health-probe","-addr","localhost:9445"]}},"resources":{"requests":{"cpu":"125m","memory":"64Mi"}},"volumeMounts":[{"mountPath":"/pod-cache-config","name":"pod-cache-config-volume"}]}],"serviceAccountName":"porch-fn-runner","volumes":[{"configMap":{"name":"pod-cache-config"},"name":"pod-cache-config-volume"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:50Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"function-runner"}': {'.': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"WRAPPER_SERVER_IMAGE"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":9445,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:exec': {'.': {}, 'f:command': {}}, 'f:failureThreshold': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/pod-cache-config"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"pod-cache-config-volume"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:01Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 2, 'selector': {'matchLabels': {'app': 'function-runner'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'function-runner'}}, 'spec': {'volumes': [{'name': 'pod-cache-config-volume', 'configMap': {'name': 'pod-cache-config', 'defaultMode': 420}}], 'containers': [{'name': 'function-runner', 'image': 'docker.io/nephio/porch-function-runner:latest', 'command': ['/server', '--config=/config.yaml', '--functions=/functions', '--pod-namespace=porch-fn-system', '--max-request-body-size=6291456'], 'ports': [{'containerPort': 9445, 'protocol': 'TCP'}], 'env': [{'name': 'WRAPPER_SERVER_IMAGE', 'value': 'docker.io/nephio/porch-wrapper-server:latest'}], 'resources': {'requests': {'cpu': '125m', 'memory': '64Mi'}}, 'volumeMounts': [{'name': 'pod-cache-config-volume', 'mountPath': '/pod-cache-config'}], 'readinessProbe': {'exec': {'command': ['/grpc-health-probe', '-addr', 'localhost:9445']}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'porch-fn-runner', 'serviceAccount': 'porch-fn-runner', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 2, 'updatedReplicas': 2, 'readyReplicas': 2, 'availableReplicas': 2, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:01Z', 'lastTransitionTime': '2025-10-13T15:57:01Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:01Z', 'lastTransitionTime': '2025-10-13T15:55:50Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "function-runner-cd6865795" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'porch-controllers', 'namespace': 'porch-system', 'uid': 'bdb7c7b0-453f-4818-8491-1d1294965c37', 'resourceVersion': '27916', 'generation': 1, 'creationTimestamp': '2025-10-13T15:55:50Z', 'labels': {'k8s-app': 'porch-controllers'}, 'annotations': {'config.k8s.io/owning-inventory': 'nephio', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|porch-system|porch-controllers', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"nephio","internal.kpt.dev/upstream-identifier":"apps|Deployment|porch-system|porch-controllers"},"labels":{"k8s-app":"porch-controllers"},"name":"porch-controllers","namespace":"porch-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"k8s-app":"porch-controllers"}},"template":{"metadata":{"labels":{"k8s-app":"porch-controllers"}},"spec":{"containers":[{"env":[{"name":"ENABLE_PACKAGEVARIANTS","value":"true"},{"name":"ENABLE_PACKAGEVARIANTSETS","value":"true"}],"image":"docker.io/nephio/porch-controllers:latest","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8081,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":30,"successThreshold":1,"timeoutSeconds":5},"name":"porch-controllers","readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":8081,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3}}],"serviceAccountName":"porch-controllers"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:50Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:k8s-app': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:k8s-app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"porch-controllers"}': {'.': {}, 'f:env': {'.': {}, 'k:{"name":"ENABLE_PACKAGEVARIANTS"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_PACKAGEVARIANTSETS"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:56:11Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'k8s-app': 'porch-controllers'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'k8s-app': 'porch-controllers'}}, 'spec': {'containers': [{'name': 'porch-controllers', 'image': 'docker.io/nephio/porch-controllers:latest', 'env': [{'name': 'ENABLE_PACKAGEVARIANTS', 'value': 'true'}, {'name': 'ENABLE_PACKAGEVARIANTSETS', 'value': 'true'}], 'resources': {}, 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 3, 'periodSeconds': 5, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'porch-controllers', 'serviceAccount': 'porch-controllers', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:56:11Z', 'lastTransitionTime': '2025-10-13T15:56:11Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:56:11Z', 'lastTransitionTime': '2025-10-13T15:55:50Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "porch-controllers-6794ff46d6" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'porch-server', 'namespace': 'porch-system', 'uid': '7647b497-1f96-4858-b20c-bbb4a43049a4', 'resourceVersion': '28041', 'generation': 1, 'creationTimestamp': '2025-10-13T15:55:50Z', 'annotations': {'config.k8s.io/owning-inventory': 'nephio', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|porch-system|porch-server', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"nephio","internal.kpt.dev/upstream-identifier":"apps|Deployment|porch-system|porch-server"},"name":"porch-server","namespace":"porch-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"porch-server"}},"template":{"metadata":{"labels":{"app":"porch-server"}},"spec":{"containers":[{"args":["--function-runner=function-runner:9445","--cache-directory=/cache","--cert-dir=/tmp/certs","--secure-port=4443","--repo-sync-frequency=3m","--disable-validating-admissions-policy=true","--max-request-body-size=6291456"],"env":[{"name":"OTEL_SERVICE_NAME","value":"porch-server"},{"name":"CERT_STORAGE_DIR","value":"/etc/webhook/certs"},{"name":"GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB","value":"true"}],"image":"docker.io/nephio/porch-server:latest","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":4443,"scheme":"HTTPS"},"initialDelaySeconds":30,"periodSeconds":30,"successThreshold":1,"timeoutSeconds":5},"name":"porch-server","readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":4443,"scheme":"HTTPS"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":3},"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"runAsGroup":65532,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/cache","name":"cache-volume"},{"mountPath":"/etc/webhook/certs","name":"webhook-certs"},{"mountPath":"/tmp/certs","name":"api-server-certs"}]}],"serviceAccountName":"porch-server","volumes":[{"emptyDir":{},"name":"cache-volume"},{"emptyDir":{},"name":"webhook-certs"},{"emptyDir":{},"name":"api-server-certs"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:55:50Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"porch-server"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"CERT_STORAGE_DIR"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"OTEL_SERVICE_NAME"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:runAsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/cache"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/etc/webhook/certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp/certs"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"api-server-certs"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"cache-volume"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"webhook-certs"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:56:16Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'porch-server'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'porch-server'}}, 'spec': {'volumes': [{'name': 'cache-volume', 'emptyDir': {}}, {'name': 'webhook-certs', 'emptyDir': {}}, {'name': 'api-server-certs', 'emptyDir': {}}], 'containers': [{'name': 'porch-server', 'image': 'docker.io/nephio/porch-server:latest', 'args': ['--function-runner=function-runner:9445', '--cache-directory=/cache', '--cert-dir=/tmp/certs', '--secure-port=4443', '--repo-sync-frequency=3m', '--disable-validating-admissions-policy=true', '--max-request-body-size=6291456'], 'env': [{'name': 'OTEL_SERVICE_NAME', 'value': 'porch-server'}, {'name': 'CERT_STORAGE_DIR', 'value': '/etc/webhook/certs'}, {'name': 'GOOGLE_API_GO_EXPERIMENTAL_DISABLE_NEW_AUTH_LIB', 'value': 'true'}], 'resources': {'limits': {'memory': '512Mi'}, 'requests': {'cpu': '250m', 'memory': '256Mi'}}, 'volumeMounts': [{'name': 'cache-volume', 'mountPath': '/cache'}, {'name': 'webhook-certs', 'mountPath': '/etc/webhook/certs'}, {'name': 'api-server-certs', 'mountPath': '/tmp/certs'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 4443, 'scheme': 'HTTPS'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 4443, 'scheme': 'HTTPS'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 3, 'periodSeconds': 5, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'runAsUser': 65532, 'runAsGroup': 65532, 'runAsNonRoot': True}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'porch-server', 'serviceAccount': 'porch-server', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:56:16Z', 'lastTransitionTime': '2025-10-13T15:56:16Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:56:16Z', 'lastTransitionTime': '2025-10-13T15:55:50Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "porch-server-5bd84899f" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace nephio-system] ***********
Monday 13 October 2025  16:22:18 +0000 (0:00:02.660)       0:03:13.305 ******** 
Monday 13 October 2025  16:22:18 +0000 (0:00:02.660)       0:03:13.304 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace nephio-system] *********
Monday 13 October 2025  16:22:20 +0000 (0:00:01.190)       0:03:14.496 ******** 
Monday 13 October 2025  16:22:20 +0000 (0:00:01.190)       0:03:14.495 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|nephio-system|nephio-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|nephio-system|nephio-controller\"},\"name\":\"nephio-controller\",\"namespace\":\"nephio-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"fn.kptgen.dev/controller\":\"nephio-controller\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"tbd\",\"app.kubernetes.io/instance\":\"tbd\",\"app.kubernetes.io/managed-by\":\"kpt\",\"app.kubernetes.io/name\":\"nephio\",\"app.kubernetes.io/part-of\":\"nephio\",\"app.kubernetes.io/version\":\"tbd\",\"fn.kptgen.dev/controller\":\"nephio-controller\"},\"name\":\"nephio-controller\",\"namespace\":\"nephio-system\"},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--health-probe-bind-address=:8081\",\"--metrics-bind-address=127.0.0.1:8080\",\"--leader-elect\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"NODE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"GIT_URL\",\"value\":\"http://172.18.0.200:3000\"},{\"name\":\"GIT_NAMESPACE\",\"value\":\"gitea\"},{\"name\":\"ENABLE_APPROVAL\",\"value\":\"true\"},{\"name\":\"ENABLE_REPOSITORIES\",\"value\":\"true\"},{\"name\":\"ENABLE_BOOTSTRAPSECRETS\",\"value\":\"true\"},{\"name\":\"ENABLE_BOOTSTRAPPACKAGES\",\"value\":\"true\"},{\"name\":\"ENABLE_GENERICSPECIALIZER\",\"value\":\"true\"},{\"name\":\"ENABLE_NETWORKS\",\"value\":\"true\"},{\"name\":\"CLIENT_PROXY_ADDRESS\",\"value\":\"resource-backend-controller-grpc-svc.backend-system.svc.cluster.local:9999\"}],\"image\":\"docker.io/nephio/nephio-operator:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8081},\"initialDelaySeconds\":15,\"periodSeconds\":20},\"name\":\"controller\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":8081},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"serviceAccountName\":\"nephio-controller\"}}},\"status\":{}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:11Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:fn.kptgen.dev/controller": {}
                                        },
                                        "f:name": {},
                                        "f:namespace": {}
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"CLIENT_PROXY_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_APPROVAL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_BOOTSTRAPPACKAGES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_BOOTSTRAPSECRETS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_GENERICSPECIALIZER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_NETWORKS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_REPOSITORIES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GIT_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GIT_URL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"NODE_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            },
                                            "k:{\"name\":\"kube-rbac-proxy\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:11Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:57:22Z"
                    }
                ],
                "name": "nephio-controller",
                "namespace": "nephio-system",
                "resourceVersion": "28620",
                "uid": "166c47b4-4e0c-409c-94b4-0080298158cc"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "fn.kptgen.dev/controller": "nephio-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "tbd",
                            "app.kubernetes.io/instance": "tbd",
                            "app.kubernetes.io/managed-by": "kpt",
                            "app.kubernetes.io/name": "nephio",
                            "app.kubernetes.io/part-of": "nephio",
                            "app.kubernetes.io/version": "tbd",
                            "fn.kptgen.dev/controller": "nephio-controller"
                        },
                        "name": "nephio-controller",
                        "namespace": "nephio-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--secure-listen-address=0.0.0.0:8443",
                                    "--upstream=http://127.0.0.1:8080/",
                                    "--logtostderr=true",
                                    "--v=10"
                                ],
                                "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-rbac-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "args": [
                                    "--health-probe-bind-address=:8081",
                                    "--metrics-bind-address=127.0.0.1:8080",
                                    "--leader-elect"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GIT_URL",
                                        "value": "http://172.18.0.200:3000"
                                    },
                                    {
                                        "name": "GIT_NAMESPACE",
                                        "value": "gitea"
                                    },
                                    {
                                        "name": "ENABLE_APPROVAL",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_REPOSITORIES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_BOOTSTRAPSECRETS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_BOOTSTRAPPACKAGES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_GENERICSPECIALIZER",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_NETWORKS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "CLIENT_PROXY_ADDRESS",
                                        "value": "resource-backend-controller-grpc-svc.backend-system.svc.cluster.local:9999"
                                    }
                                ],
                                "image": "docker.io/nephio/nephio-operator:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nephio-controller",
                        "serviceAccountName": "nephio-controller",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:22Z",
                        "lastUpdateTime": "2025-10-13T15:57:22Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:11Z",
                        "lastUpdateTime": "2025-10-13T15:57:22Z",
                        "message": "ReplicaSet \"nephio-controller-79d9bf6b75\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|nephio-system|token-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|nephio-system|token-controller\"},\"name\":\"token-controller\",\"namespace\":\"nephio-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"fn.kptgen.dev/controller\":\"token-controller\"}},\"strategy\":{},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"tbd\",\"app.kubernetes.io/instance\":\"tbd\",\"app.kubernetes.io/managed-by\":\"kpt\",\"app.kubernetes.io/name\":\"nephio\",\"app.kubernetes.io/part-of\":\"nephio\",\"app.kubernetes.io/version\":\"tbd\",\"fn.kptgen.dev/controller\":\"token-controller\"},\"name\":\"token-controller\",\"namespace\":\"nephio-system\"},\"spec\":{\"containers\":[{\"args\":[\"--secure-listen-address=0.0.0.0:8443\",\"--upstream=http://127.0.0.1:8080/\",\"--logtostderr=true\",\"--v=10\"],\"image\":\"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0\",\"name\":\"kube-rbac-proxy\",\"ports\":[{\"containerPort\":8443,\"name\":\"https\"}],\"resources\":{}},{\"args\":[\"--health-probe-bind-address=:8081\",\"--metrics-bind-address=127.0.0.1:8080\",\"--leader-elect\"],\"command\":[\"/manager\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"NODE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"GIT_URL\",\"value\":\"http://172.18.0.200:3000\"},{\"name\":\"GIT_NAMESPACE\",\"value\":\"gitea\"},{\"name\":\"ENABLE_TOKENS\",\"value\":\"true\"}],\"image\":\"docker.io/nephio/nephio-operator:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8081},\"initialDelaySeconds\":15,\"periodSeconds\":20},\"name\":\"controller\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":8081},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"serviceAccountName\":\"nephio-controller\"}}},\"status\":{}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:11Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:app.kubernetes.io/version": {},
                                            "f:fn.kptgen.dev/controller": {}
                                        },
                                        "f:name": {},
                                        "f:namespace": {}
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ENABLE_TOKENS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GIT_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GIT_URL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"NODE_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            },
                                            "k:{\"name\":\"kube-rbac-proxy\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:11Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:57:22Z"
                    }
                ],
                "name": "token-controller",
                "namespace": "nephio-system",
                "resourceVersion": "28622",
                "uid": "b3587163-4153-4fc6-b7f1-76356251a74c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "fn.kptgen.dev/controller": "token-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "tbd",
                            "app.kubernetes.io/instance": "tbd",
                            "app.kubernetes.io/managed-by": "kpt",
                            "app.kubernetes.io/name": "nephio",
                            "app.kubernetes.io/part-of": "nephio",
                            "app.kubernetes.io/version": "tbd",
                            "fn.kptgen.dev/controller": "token-controller"
                        },
                        "name": "token-controller",
                        "namespace": "nephio-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--secure-listen-address=0.0.0.0:8443",
                                    "--upstream=http://127.0.0.1:8080/",
                                    "--logtostderr=true",
                                    "--v=10"
                                ],
                                "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-rbac-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "args": [
                                    "--health-probe-bind-address=:8081",
                                    "--metrics-bind-address=127.0.0.1:8080",
                                    "--leader-elect"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GIT_URL",
                                        "value": "http://172.18.0.200:3000"
                                    },
                                    {
                                        "name": "GIT_NAMESPACE",
                                        "value": "gitea"
                                    },
                                    {
                                        "name": "ENABLE_TOKENS",
                                        "value": "true"
                                    }
                                ],
                                "image": "docker.io/nephio/nephio-operator:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nephio-controller",
                        "serviceAccountName": "nephio-controller",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:22Z",
                        "lastUpdateTime": "2025-10-13T15:57:22Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:11Z",
                        "lastUpdateTime": "2025-10-13T15:57:22Z",
                        "message": "ReplicaSet \"token-controller-5df6446bf\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace nephio-system] ***************
Monday 13 October 2025  16:22:20 +0000 (0:00:00.137)       0:03:14.633 ******** 
Monday 13 October 2025  16:22:20 +0000 (0:00:00.137)       0:03:14.632 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'nephio-controller', 'namespace': 'nephio-system', 'uid': '166c47b4-4e0c-409c-94b4-0080298158cc', 'resourceVersion': '28620', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:11Z', 'annotations': {'config.k8s.io/owning-inventory': '66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|nephio-system|nephio-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682","internal.kpt.dev/upstream-identifier":"apps|Deployment|nephio-system|nephio-controller"},"name":"nephio-controller","namespace":"nephio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"fn.kptgen.dev/controller":"nephio-controller"}},"strategy":{},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"tbd","app.kubernetes.io/instance":"tbd","app.kubernetes.io/managed-by":"kpt","app.kubernetes.io/name":"nephio","app.kubernetes.io/part-of":"nephio","app.kubernetes.io/version":"tbd","fn.kptgen.dev/controller":"nephio-controller"},"name":"nephio-controller","namespace":"nephio-system"},"spec":{"containers":[{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=10"],"image":"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https"}],"resources":{}},{"args":["--health-probe-bind-address=:8081","--metrics-bind-address=127.0.0.1:8080","--leader-elect"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"NODE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"GIT_URL","value":"http://172.18.0.200:3000"},{"name":"GIT_NAMESPACE","value":"gitea"},{"name":"ENABLE_APPROVAL","value":"true"},{"name":"ENABLE_REPOSITORIES","value":"true"},{"name":"ENABLE_BOOTSTRAPSECRETS","value":"true"},{"name":"ENABLE_BOOTSTRAPPACKAGES","value":"true"},{"name":"ENABLE_GENERICSPECIALIZER","value":"true"},{"name":"ENABLE_NETWORKS","value":"true"},{"name":"CLIENT_PROXY_ADDRESS","value":"resource-backend-controller-grpc-svc.backend-system.svc.cluster.local:9999"}],"image":"docker.io/nephio/nephio-operator:latest","livenessProbe":{"httpGet":{"path":"/healthz","port":8081},"initialDelaySeconds":15,"periodSeconds":20},"name":"controller","readinessProbe":{"httpGet":{"path":"/readyz","port":8081},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"serviceAccountName":"nephio-controller"}}},"status":{}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:11Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/managed-by': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:fn.kptgen.dev/controller': {}}, 'f:name': {}, 'f:namespace': {}}, 'f:spec': {'f:containers': {'k:{"name":"controller"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"CLIENT_PROXY_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_APPROVAL"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_BOOTSTRAPPACKAGES"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_BOOTSTRAPSECRETS"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_GENERICSPECIALIZER"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_NETWORKS"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"ENABLE_REPOSITORIES"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"GIT_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"GIT_URL"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"NODE_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"NODE_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}, 'k:{"name":"kube-rbac-proxy"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:22Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'fn.kptgen.dev/controller': 'nephio-controller'}}, 'template': {'metadata': {'name': 'nephio-controller', 'namespace': 'nephio-system', 'creationTimestamp': None, 'labels': {'app.kubernetes.io/component': 'tbd', 'app.kubernetes.io/instance': 'tbd', 'app.kubernetes.io/managed-by': 'kpt', 'app.kubernetes.io/name': 'nephio', 'app.kubernetes.io/part-of': 'nephio', 'app.kubernetes.io/version': 'tbd', 'fn.kptgen.dev/controller': 'nephio-controller'}}, 'spec': {'containers': [{'name': 'kube-rbac-proxy', 'image': 'gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0', 'args': ['--secure-listen-address=0.0.0.0:8443', '--upstream=http://127.0.0.1:8080/', '--logtostderr=true', '--v=10'], 'ports': [{'name': 'https', 'containerPort': 8443, 'protocol': 'TCP'}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'controller', 'image': 'docker.io/nephio/nephio-operator:latest', 'command': ['/manager'], 'args': ['--health-probe-bind-address=:8081', '--metrics-bind-address=127.0.0.1:8080', '--leader-elect'], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.podIP'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'NODE_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'spec.nodeName'}}}, {'name': 'NODE_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.hostIP'}}}, {'name': 'GIT_URL', 'value': 'http://172.18.0.200:3000'}, {'name': 'GIT_NAMESPACE', 'value': 'gitea'}, {'name': 'ENABLE_APPROVAL', 'value': 'true'}, {'name': 'ENABLE_REPOSITORIES', 'value': 'true'}, {'name': 'ENABLE_BOOTSTRAPSECRETS', 'value': 'true'}, {'name': 'ENABLE_BOOTSTRAPPACKAGES', 'value': 'true'}, {'name': 'ENABLE_GENERICSPECIALIZER', 'value': 'true'}, {'name': 'ENABLE_NETWORKS', 'value': 'true'}, {'name': 'CLIENT_PROXY_ADDRESS', 'value': 'resource-backend-controller-grpc-svc.backend-system.svc.cluster.local:9999'}], 'resources': {'limits': {'cpu': '500m', 'memory': '128Mi'}, 'requests': {'cpu': '10m', 'memory': '64Mi'}}, 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 15, 'timeoutSeconds': 1, 'periodSeconds': 20, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'nephio-controller', 'serviceAccount': 'nephio-controller', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:22Z', 'lastTransitionTime': '2025-10-13T15:57:22Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:22Z', 'lastTransitionTime': '2025-10-13T15:57:11Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "nephio-controller-79d9bf6b75" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'token-controller', 'namespace': 'nephio-system', 'uid': 'b3587163-4153-4fc6-b7f1-76356251a74c', 'resourceVersion': '28622', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:11Z', 'annotations': {'config.k8s.io/owning-inventory': '66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|nephio-system|token-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"66c26d9f7d31b969ed533f59d77de0be4b3d7204-1760371028248183682","internal.kpt.dev/upstream-identifier":"apps|Deployment|nephio-system|token-controller"},"name":"token-controller","namespace":"nephio-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"fn.kptgen.dev/controller":"token-controller"}},"strategy":{},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"tbd","app.kubernetes.io/instance":"tbd","app.kubernetes.io/managed-by":"kpt","app.kubernetes.io/name":"nephio","app.kubernetes.io/part-of":"nephio","app.kubernetes.io/version":"tbd","fn.kptgen.dev/controller":"token-controller"},"name":"token-controller","namespace":"nephio-system"},"spec":{"containers":[{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=10"],"image":"gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https"}],"resources":{}},{"args":["--health-probe-bind-address=:8081","--metrics-bind-address=127.0.0.1:8080","--leader-elect"],"command":["/manager"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"NODE_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.hostIP"}}},{"name":"GIT_URL","value":"http://172.18.0.200:3000"},{"name":"GIT_NAMESPACE","value":"gitea"},{"name":"ENABLE_TOKENS","value":"true"}],"image":"docker.io/nephio/nephio-operator:latest","livenessProbe":{"httpGet":{"path":"/healthz","port":8081},"initialDelaySeconds":15,"periodSeconds":20},"name":"controller","readinessProbe":{"httpGet":{"path":"/readyz","port":8081},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"10m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]}}}],"serviceAccountName":"nephio-controller"}}},"status":{}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:11Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/instance': {}, 'f:app.kubernetes.io/managed-by': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}, 'f:app.kubernetes.io/version': {}, 'f:fn.kptgen.dev/controller': {}}, 'f:name': {}, 'f:namespace': {}}, 'f:spec': {'f:containers': {'k:{"name":"controller"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"ENABLE_TOKENS"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"GIT_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"GIT_URL"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"NODE_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"NODE_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}, 'k:{"name":"kube-rbac-proxy"}': {'.': {}, 'f:args': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8443,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:22Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'fn.kptgen.dev/controller': 'token-controller'}}, 'template': {'metadata': {'name': 'token-controller', 'namespace': 'nephio-system', 'creationTimestamp': None, 'labels': {'app.kubernetes.io/component': 'tbd', 'app.kubernetes.io/instance': 'tbd', 'app.kubernetes.io/managed-by': 'kpt', 'app.kubernetes.io/name': 'nephio', 'app.kubernetes.io/part-of': 'nephio', 'app.kubernetes.io/version': 'tbd', 'fn.kptgen.dev/controller': 'token-controller'}}, 'spec': {'containers': [{'name': 'kube-rbac-proxy', 'image': 'gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0', 'args': ['--secure-listen-address=0.0.0.0:8443', '--upstream=http://127.0.0.1:8080/', '--logtostderr=true', '--v=10'], 'ports': [{'name': 'https', 'containerPort': 8443, 'protocol': 'TCP'}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}, {'name': 'controller', 'image': 'docker.io/nephio/nephio-operator:latest', 'command': ['/manager'], 'args': ['--health-probe-bind-address=:8081', '--metrics-bind-address=127.0.0.1:8080', '--leader-elect'], 'env': [{'name': 'POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'POD_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.podIP'}}}, {'name': 'POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'NODE_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'spec.nodeName'}}}, {'name': 'NODE_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.hostIP'}}}, {'name': 'GIT_URL', 'value': 'http://172.18.0.200:3000'}, {'name': 'GIT_NAMESPACE', 'value': 'gitea'}, {'name': 'ENABLE_TOKENS', 'value': 'true'}], 'resources': {'limits': {'cpu': '500m', 'memory': '128Mi'}, 'requests': {'cpu': '10m', 'memory': '64Mi'}}, 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 15, 'timeoutSeconds': 1, 'periodSeconds': 20, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 8081, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'nephio-controller', 'serviceAccount': 'nephio-controller', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:22Z', 'lastTransitionTime': '2025-10-13T15:57:22Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:22Z', 'lastTransitionTime': '2025-10-13T15:57:11Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "token-controller-5df6446bf" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace config-management-monitoring] ***
Monday 13 October 2025  16:22:22 +0000 (0:00:02.033)       0:03:16.667 ******** 
Monday 13 October 2025  16:22:22 +0000 (0:00:02.033)       0:03:16.666 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace config-management-monitoring] ***
Monday 13 October 2025  16:22:23 +0000 (0:00:01.263)       0:03:17.930 ******** 
Monday 13 October 2025  16:22:23 +0000 (0:00:01.263)       0:03:17.929 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"opentelemetry\",\"component\":\"otel-collector\",\"configmanagement.gke.io/arch\":\"csmr\",\"configmanagement.gke.io/configmanagement\":\"config-management\",\"configmanagement.gke.io/system\":\"true\",\"k8s-app\":\"kubernetes-config-management\"},\"name\":\"otel-collector\",\"namespace\":\"config-management-monitoring\",\"ownerReferences\":[{\"apiVersion\":\"configmanagement.gke.io/v1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigManagement\",\"name\":\"config-management\",\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}]},\"spec\":{\"minReadySeconds\":5,\"progressDeadlineSeconds\":120,\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"opentelemetry\",\"component\":\"otel-collector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"opentelemetry\",\"component\":\"otel-collector\"}},\"spec\":{\"containers\":[{\"args\":[\"--config=/conf/otel-collector-config.yaml\",\"--feature-gates=-pkg.translator.prometheus.NormalizeName\"],\"command\":[\"/otelcontribcol\"],\"image\":\"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6\",\"name\":\"otel-collector\",\"ports\":[{\"containerPort\":55678},{\"containerPort\":8888},{\"containerPort\":8675}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":13133}},\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"400Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/conf\",\"name\":\"otel-collector-config-vol\"}]}],\"securityContext\":{\"fsGroup\":2000,\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumes\":[{\"name\":\"otel-collector-config-vol\",\"projected\":{\"sources\":[{\"configMap\":{\"name\":\"otel-collector\"}},{\"configMap\":{\"name\":\"otel-collector-googlecloud\",\"optional\":true}},{\"configMap\":{\"name\":\"otel-collector-custom\",\"optional\":true}}]}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:41Z",
                "generation": 2,
                "labels": {
                    "app": "opentelemetry",
                    "component": "otel-collector",
                    "configmanagement.gke.io/arch": "csmr",
                    "configmanagement.gke.io/configmanagement": "config-management",
                    "configmanagement.gke.io/system": "true",
                    "k8s-app": "kubernetes-config-management"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:component": {},
                                    "f:configmanagement.gke.io/arch": {},
                                    "f:configmanagement.gke.io/configmanagement": {},
                                    "f:configmanagement.gke.io/system": {},
                                    "f:k8s-app": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:minReadySeconds": {},
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:component": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"otel-collector\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":55678,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8675,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8888,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/conf\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"otel-collector-config-vol\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:projected": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:sources": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:41Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:spec": {
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:iam.gke.io/gcp-service-account": {}
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "reconciler-manager",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:54Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:00Z"
                    }
                ],
                "name": "otel-collector",
                "namespace": "config-management-monitoring",
                "ownerReferences": [
                    {
                        "apiVersion": "configmanagement.gke.io/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ConfigManagement",
                        "name": "config-management",
                        "uid": "53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"
                    }
                ],
                "resourceVersion": "29207",
                "uid": "9e1e3d18-eb4b-495c-81ba-6538ef7d3aff"
            },
            "spec": {
                "minReadySeconds": 5,
                "progressDeadlineSeconds": 120,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "opentelemetry",
                        "component": "otel-collector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "iam.gke.io/gcp-service-account": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "opentelemetry",
                            "component": "otel-collector"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config=/conf/otel-collector-config.yaml",
                                    "--feature-gates=-pkg.translator.prometheus.NormalizeName"
                                ],
                                "command": [
                                    "/otelcontribcol"
                                ],
                                "image": "gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "otel-collector",
                                "ports": [
                                    {
                                        "containerPort": 55678,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8675,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 13133,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "400Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "otel-collector-config-vol"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 2000,
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "otel-collector-config-vol",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "configMap": {
                                                "name": "otel-collector"
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "otel-collector-googlecloud",
                                                "optional": true
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "otel-collector-custom",
                                                "optional": true
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:56Z",
                        "lastUpdateTime": "2025-10-13T15:57:56Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:41Z",
                        "lastUpdateTime": "2025-10-13T15:58:00Z",
                        "message": "ReplicaSet \"otel-collector-b84b95547\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace config-management-monitoring] ***
Monday 13 October 2025  16:22:23 +0000 (0:00:00.088)       0:03:18.018 ******** 
Monday 13 October 2025  16:22:23 +0000 (0:00:00.088)       0:03:18.017 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'otel-collector', 'namespace': 'config-management-monitoring', 'uid': '9e1e3d18-eb4b-495c-81ba-6538ef7d3aff', 'resourceVersion': '29207', 'generation': 2, 'creationTimestamp': '2025-10-13T15:57:41Z', 'labels': {'app': 'opentelemetry', 'component': 'otel-collector', 'configmanagement.gke.io/arch': 'csmr', 'configmanagement.gke.io/configmanagement': 'config-management', 'configmanagement.gke.io/system': 'true', 'k8s-app': 'kubernetes-config-management'}, 'annotations': {'deployment.kubernetes.io/revision': '2', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"opentelemetry","component":"otel-collector","configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"otel-collector","namespace":"config-management-monitoring","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}]},"spec":{"minReadySeconds":5,"progressDeadlineSeconds":120,"replicas":1,"selector":{"matchLabels":{"app":"opentelemetry","component":"otel-collector"}},"template":{"metadata":{"labels":{"app":"opentelemetry","component":"otel-collector"}},"spec":{"containers":[{"args":["--config=/conf/otel-collector-config.yaml","--feature-gates=-pkg.translator.prometheus.NormalizeName"],"command":["/otelcontribcol"],"image":"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6","name":"otel-collector","ports":[{"containerPort":55678},{"containerPort":8888},{"containerPort":8675}],"readinessProbe":{"httpGet":{"path":"/","port":13133}},"resources":{"limits":{"cpu":1,"memory":"2Gi"},"requests":{"cpu":"200m","memory":"400Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/conf","name":"otel-collector-config-vol"}]}],"securityContext":{"fsGroup":2000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"volumes":[{"name":"otel-collector-config-vol","projected":{"sources":[{"configMap":{"name":"otel-collector"}},{"configMap":{"name":"otel-collector-googlecloud","optional":true}},{"configMap":{"name":"otel-collector-custom","optional":true}}]}}]}}}}\n'}, 'ownerReferences': [{'apiVersion': 'configmanagement.gke.io/v1', 'kind': 'ConfigManagement', 'name': 'config-management', 'uid': '53ef3d3a-500e-41fc-86cc-3f23cdb7b95a', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kubectl-client-side-apply', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:41Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:component': {}, 'f:configmanagement.gke.io/arch': {}, 'f:configmanagement.gke.io/configmanagement': {}, 'f:configmanagement.gke.io/system': {}, 'f:k8s-app': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}': {}}}, 'f:spec': {'f:minReadySeconds': {}, 'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}, 'f:component': {}}}, 'f:spec': {'f:containers': {'k:{"name":"otel-collector"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8675,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":8888,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":55678,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/conf"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}, 'f:runAsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"otel-collector-config-vol"}': {'.': {}, 'f:name': {}, 'f:projected': {'.': {}, 'f:defaultMode': {}, 'f:sources': {}}}}}}}}}, {'manager': 'reconciler-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:54Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:spec': {'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:iam.gke.io/gcp-service-account': {}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:00Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'opentelemetry', 'component': 'otel-collector'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'opentelemetry', 'component': 'otel-collector'}, 'annotations': {'iam.gke.io/gcp-service-account': ''}}, 'spec': {'volumes': [{'name': 'otel-collector-config-vol', 'projected': {'sources': [{'configMap': {'name': 'otel-collector'}}, {'configMap': {'name': 'otel-collector-googlecloud', 'optional': True}}, {'configMap': {'name': 'otel-collector-custom', 'optional': True}}], 'defaultMode': 420}}], 'containers': [{'name': 'otel-collector', 'image': 'gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6', 'command': ['/otelcontribcol'], 'args': ['--config=/conf/otel-collector-config.yaml', '--feature-gates=-pkg.translator.prometheus.NormalizeName'], 'ports': [{'containerPort': 55678, 'protocol': 'TCP'}, {'containerPort': 8888, 'protocol': 'TCP'}, {'containerPort': 8675, 'protocol': 'TCP'}], 'resources': {'limits': {'cpu': '1', 'memory': '2Gi'}, 'requests': {'cpu': '200m', 'memory': '400Mi'}}, 'volumeMounts': [{'name': 'otel-collector-config-vol', 'mountPath': '/conf'}], 'readinessProbe': {'httpGet': {'path': '/', 'port': 13133, 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'securityContext': {'runAsUser': 1000, 'runAsGroup': 1000, 'runAsNonRoot': True, 'fsGroup': 2000, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'minReadySeconds': 5, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 120}, 'status': {'observedGeneration': 2, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:56Z', 'lastTransitionTime': '2025-10-13T15:57:56Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:00Z', 'lastTransitionTime': '2025-10-13T15:57:41Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "otel-collector-b84b95547" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace config-management-system] ***
Monday 13 October 2025  16:22:24 +0000 (0:00:01.029)       0:03:19.047 ******** 
Monday 13 October 2025  16:22:24 +0000 (0:00:01.029)       0:03:19.046 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace config-management-system] ***
Monday 13 October 2025  16:22:25 +0000 (0:00:01.070)       0:03:20.118 ******** 
Monday 13 October 2025  16:22:25 +0000 (0:00:01.071)       0:03:20.117 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "28b5e821741ef130905eb7e692d896acbc0443c3-1760371050782299016",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|config-management-system|config-management-operator",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"28b5e821741ef130905eb7e692d896acbc0443c3-1760371050782299016\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|config-management-system|config-management-operator\"},\"labels\":{\"k8s-app\":\"config-management-operator\"},\"name\":\"config-management-operator\",\"namespace\":\"config-management-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"component\":\"config-management-operator\",\"k8s-app\":\"config-management-operator\"}},\"strategy\":{\"rollingUpdate\":null,\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"component\":\"config-management-operator\",\"k8s-app\":\"config-management-operator\"}},\"spec\":{\"containers\":[{\"command\":[\"/manager\",\"--private-registry=\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"operator-environment-options\",\"optional\":true}}],\"image\":\"gcr.io/config-management-release/config-management-operator:v1.18.3\",\"name\":\"manager\",\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"securityContext\":{\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccount\":\"config-management-operator\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:32Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "config-management-operator"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:component": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:envFrom": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:32Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:57:36Z"
                    }
                ],
                "name": "config-management-operator",
                "namespace": "config-management-system",
                "resourceVersion": "28725",
                "uid": "7e5af7c8-bbdf-4154-ba1d-c2ce23e2454f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "config-management-operator",
                        "k8s-app": "config-management-operator"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "config-management-operator",
                            "k8s-app": "config-management-operator"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/manager",
                                    "--private-registry="
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "operator-environment-options",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "gcr.io/config-management-release/config-management-operator:v1.18.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "manager",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "config-management-operator",
                        "serviceAccountName": "config-management-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:36Z",
                        "lastUpdateTime": "2025-10-13T15:57:36Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:32Z",
                        "lastUpdateTime": "2025-10-13T15:57:36Z",
                        "message": "ReplicaSet \"config-management-operator-558cdb85d8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"reconciler-manager\",\"configmanagement.gke.io/arch\":\"csmr\",\"configmanagement.gke.io/configmanagement\":\"config-management\",\"configmanagement.gke.io/system\":\"true\",\"k8s-app\":\"kubernetes-config-management\"},\"name\":\"reconciler-manager\",\"namespace\":\"config-management-system\",\"ownerReferences\":[{\"apiVersion\":\"configmanagement.gke.io/v1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigManagement\",\"name\":\"config-management\",\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}]},\"spec\":{\"minReadySeconds\":10,\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"reconciler-manager\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"app\":\"reconciler-manager\",\"configsync.gke.io/deployment-name\":\"reconciler-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--enable-leader-election\",\"-v=1\"],\"command\":[\"/reconciler-manager\"],\"envFrom\":[{\"configMapRef\":{\"name\":\"reconciler-manager\",\"optional\":true}}],\"image\":\"gcr.io/config-management-release/reconciler-manager:v1.18.3-rc.4\",\"name\":\"reconciler-manager\",\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/deployment.yaml\",\"name\":\"configs\",\"subPath\":\"deployment.yaml\"}]},{\"args\":[\"--config=/conf/otel-agent-config.yaml\",\"--feature-gates=-pkg.translator.prometheus.NormalizeName\"],\"command\":[\"/otelcontribcol\"],\"env\":[{\"name\":\"KUBE_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"KUBE_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"KUBE_POD_UID\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.uid\"}}},{\"name\":\"KUBE_POD_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"KUBE_DEPLOYMENT_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.labels['configsync.gke.io/deployment-name']\"}}},{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\",\"value\":\"k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)\"}],\"image\":\"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6\",\"name\":\"otel-agent\",\"ports\":[{\"containerPort\":55678},{\"containerPort\":8888}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":13133}},\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/conf\",\"name\":\"otel-agent-config-vol\"}]}],\"securityContext\":{\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"reconciler-manager\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"configMap\":{\"name\":\"reconciler-manager-cm\"},\"name\":\"configs\"},{\"configMap\":{\"name\":\"otel-agent\"},\"name\":\"otel-agent-config-vol\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:41Z",
                "generation": 1,
                "labels": {
                    "app": "reconciler-manager",
                    "configmanagement.gke.io/arch": "csmr",
                    "configmanagement.gke.io/configmanagement": "config-management",
                    "configmanagement.gke.io/system": "true",
                    "k8s-app": "kubernetes-config-management"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:configmanagement.gke.io/arch": {},
                                    "f:configmanagement.gke.io/configmanagement": {},
                                    "f:configmanagement.gke.io/system": {},
                                    "f:k8s-app": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:minReadySeconds": {},
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:configsync.gke.io/deployment-name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"otel-agent\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"KUBE_DEPLOYMENT_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_UID\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":55678,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8888,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/conf\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"reconciler-manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:envFrom": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/deployment.yaml\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"configs\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"otel-agent-config-vol\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:41Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:05Z"
                    }
                ],
                "name": "reconciler-manager",
                "namespace": "config-management-system",
                "ownerReferences": [
                    {
                        "apiVersion": "configmanagement.gke.io/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ConfigManagement",
                        "name": "config-management",
                        "uid": "53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"
                    }
                ],
                "resourceVersion": "29257",
                "uid": "9b34c11b-690c-4f80-b51a-2f163b591248"
            },
            "spec": {
                "minReadySeconds": 10,
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "reconciler-manager"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "reconciler-manager",
                            "configsync.gke.io/deployment-name": "reconciler-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--enable-leader-election",
                                    "-v=1"
                                ],
                                "command": [
                                    "/reconciler-manager"
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "reconciler-manager",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "gcr.io/config-management-release/reconciler-manager:v1.18.3-rc.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "reconciler-manager",
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "50Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/deployment.yaml",
                                        "name": "configs",
                                        "subPath": "deployment.yaml"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--config=/conf/otel-agent-config.yaml",
                                    "--feature-gates=-pkg.translator.prometheus.NormalizeName"
                                ],
                                "command": [
                                    "/otelcontribcol"
                                ],
                                "env": [
                                    {
                                        "name": "KUBE_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_UID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_DEPLOYMENT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels['configsync.gke.io/deployment-name']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)"
                                    }
                                ],
                                "image": "gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "otel-agent",
                                "ports": [
                                    {
                                        "containerPort": 55678,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 13133,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "otel-agent-config-vol"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "reconciler-manager",
                        "serviceAccountName": "reconciler-manager",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "reconciler-manager-cm"
                                },
                                "name": "configs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "otel-agent"
                                },
                                "name": "otel-agent-config-vol"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:58:05Z",
                        "lastUpdateTime": "2025-10-13T15:58:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:41Z",
                        "lastUpdateTime": "2025-10-13T15:58:05Z",
                        "message": "ReplicaSet \"reconciler-manager-6bfffdb786\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace config-management-system] ****
Monday 13 October 2025  16:22:25 +0000 (0:00:00.116)       0:03:20.235 ******** 
Monday 13 October 2025  16:22:25 +0000 (0:00:00.116)       0:03:20.234 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'config-management-operator', 'namespace': 'config-management-system', 'uid': '7e5af7c8-bbdf-4154-ba1d-c2ce23e2454f', 'resourceVersion': '28725', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:32Z', 'labels': {'k8s-app': 'config-management-operator'}, 'annotations': {'config.k8s.io/owning-inventory': '28b5e821741ef130905eb7e692d896acbc0443c3-1760371050782299016', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|config-management-system|config-management-operator', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"28b5e821741ef130905eb7e692d896acbc0443c3-1760371050782299016","internal.kpt.dev/upstream-identifier":"apps|Deployment|config-management-system|config-management-operator"},"labels":{"k8s-app":"config-management-operator"},"name":"config-management-operator","namespace":"config-management-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"component":"config-management-operator","k8s-app":"config-management-operator"}},"strategy":{"rollingUpdate":null,"type":"Recreate"},"template":{"metadata":{"labels":{"component":"config-management-operator","k8s-app":"config-management-operator"}},"spec":{"containers":[{"command":["/manager","--private-registry="],"envFrom":[{"configMapRef":{"name":"operator-environment-options","optional":true}}],"image":"gcr.io/config-management-release/config-management-operator:v1.18.3","name":"manager","resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"securityContext":{"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccount":"config-management-operator"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:32Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:k8s-app': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:component': {}, 'f:k8s-app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:command': {}, 'f:envFrom': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:36Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'component': 'config-management-operator', 'k8s-app': 'config-management-operator'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'component': 'config-management-operator', 'k8s-app': 'config-management-operator'}}, 'spec': {'containers': [{'name': 'manager', 'image': 'gcr.io/config-management-release/config-management-operator:v1.18.3', 'command': ['/manager', '--private-registry='], 'envFrom': [{'configMapRef': {'name': 'operator-environment-options', 'optional': True}}], 'resources': {'requests': {'cpu': '100m', 'memory': '200Mi'}}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'config-management-operator', 'serviceAccount': 'config-management-operator', 'securityContext': {'runAsUser': 1000, 'runAsGroup': 1000, 'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'Recreate'}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:36Z', 'lastTransitionTime': '2025-10-13T15:57:36Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:36Z', 'lastTransitionTime': '2025-10-13T15:57:32Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "config-management-operator-558cdb85d8" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'reconciler-manager', 'namespace': 'config-management-system', 'uid': '9b34c11b-690c-4f80-b51a-2f163b591248', 'resourceVersion': '29257', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:41Z', 'labels': {'app': 'reconciler-manager', 'configmanagement.gke.io/arch': 'csmr', 'configmanagement.gke.io/configmanagement': 'config-management', 'configmanagement.gke.io/system': 'true', 'k8s-app': 'kubernetes-config-management'}, 'annotations': {'deployment.kubernetes.io/revision': '1', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"reconciler-manager","configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","k8s-app":"kubernetes-config-management"},"name":"reconciler-manager","namespace":"config-management-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}]},"spec":{"minReadySeconds":10,"replicas":1,"selector":{"matchLabels":{"app":"reconciler-manager"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app":"reconciler-manager","configsync.gke.io/deployment-name":"reconciler-manager"}},"spec":{"containers":[{"args":["--enable-leader-election","-v=1"],"command":["/reconciler-manager"],"envFrom":[{"configMapRef":{"name":"reconciler-manager","optional":true}}],"image":"gcr.io/config-management-release/reconciler-manager:v1.18.3-rc.4","name":"reconciler-manager","resources":{"requests":{"cpu":"10m","memory":"50Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/deployment.yaml","name":"configs","subPath":"deployment.yaml"}]},{"args":["--config=/conf/otel-agent-config.yaml","--feature-gates=-pkg.translator.prometheus.NormalizeName"],"command":["/otelcontribcol"],"env":[{"name":"KUBE_POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"KUBE_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"KUBE_POD_UID","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.uid"}}},{"name":"KUBE_POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"KUBE_DEPLOYMENT_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.labels[\'configsync.gke.io/deployment-name\']"}}},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)"}],"image":"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6","name":"otel-agent","ports":[{"containerPort":55678},{"containerPort":8888}],"readinessProbe":{"httpGet":{"path":"/","port":13133}},"resources":{"limits":{"cpu":1,"memory":"1Gi"},"requests":{"cpu":"10m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/conf","name":"otel-agent-config-vol"}]}],"securityContext":{"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"reconciler-manager","terminationGracePeriodSeconds":10,"volumes":[{"configMap":{"name":"reconciler-manager-cm"},"name":"configs"},{"configMap":{"name":"otel-agent"},"name":"otel-agent-config-vol"}]}}}}\n'}, 'ownerReferences': [{'apiVersion': 'configmanagement.gke.io/v1', 'kind': 'ConfigManagement', 'name': 'config-management', 'uid': '53ef3d3a-500e-41fc-86cc-3f23cdb7b95a', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kubectl-client-side-apply', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:41Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app': {}, 'f:configmanagement.gke.io/arch': {}, 'f:configmanagement.gke.io/configmanagement': {}, 'f:configmanagement.gke.io/system': {}, 'f:k8s-app': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}': {}}}, 'f:spec': {'f:minReadySeconds': {}, 'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}, 'f:configsync.gke.io/deployment-name': {}}}, 'f:spec': {'f:containers': {'k:{"name":"otel-agent"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"KUBE_DEPLOYMENT_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_NODE_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_UID"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"OTEL_RESOURCE_ATTRIBUTES"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8888,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":55678,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/conf"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}, 'k:{"name":"reconciler-manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:envFrom': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/deployment.yaml"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}, 'f:subPath': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"configs"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"otel-agent-config-vol"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:05Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'reconciler-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'reconciler-manager', 'configsync.gke.io/deployment-name': 'reconciler-manager'}}, 'spec': {'volumes': [{'name': 'configs', 'configMap': {'name': 'reconciler-manager-cm', 'defaultMode': 420}}, {'name': 'otel-agent-config-vol', 'configMap': {'name': 'otel-agent', 'defaultMode': 420}}], 'containers': [{'name': 'reconciler-manager', 'image': 'gcr.io/config-management-release/reconciler-manager:v1.18.3-rc.4', 'command': ['/reconciler-manager'], 'args': ['--enable-leader-election', '-v=1'], 'envFrom': [{'configMapRef': {'name': 'reconciler-manager', 'optional': True}}], 'resources': {'requests': {'cpu': '10m', 'memory': '50Mi'}}, 'volumeMounts': [{'name': 'configs', 'mountPath': '/deployment.yaml', 'subPath': 'deployment.yaml'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}, {'name': 'otel-agent', 'image': 'gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6', 'command': ['/otelcontribcol'], 'args': ['--config=/conf/otel-agent-config.yaml', '--feature-gates=-pkg.translator.prometheus.NormalizeName'], 'ports': [{'containerPort': 55678, 'protocol': 'TCP'}, {'containerPort': 8888, 'protocol': 'TCP'}], 'env': [{'name': 'KUBE_POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'KUBE_POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'KUBE_POD_UID', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.uid'}}}, {'name': 'KUBE_POD_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.podIP'}}}, {'name': 'KUBE_NODE_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'spec.nodeName'}}}, {'name': 'KUBE_DEPLOYMENT_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': "metadata.labels['configsync.gke.io/deployment-name']"}}}, {'name': 'OTEL_RESOURCE_ATTRIBUTES', 'value': 'k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)'}], 'resources': {'limits': {'cpu': '1', 'memory': '1Gi'}, 'requests': {'cpu': '10m', 'memory': '100Mi'}}, 'volumeMounts': [{'name': 'otel-agent-config-vol', 'mountPath': '/conf'}], 'readinessProbe': {'httpGet': {'path': '/', 'port': 13133, 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'reconciler-manager', 'serviceAccount': 'reconciler-manager', 'securityContext': {'runAsUser': 1000, 'runAsGroup': 1000, 'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'Recreate'}, 'minReadySeconds': 10, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:05Z', 'lastTransitionTime': '2025-10-13T15:58:05Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:05Z', 'lastTransitionTime': '2025-10-13T15:57:41Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "reconciler-manager-6bfffdb786" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace resource-group-system] ***
Monday 13 October 2025  16:22:27 +0000 (0:00:02.030)       0:03:22.266 ******** 
Monday 13 October 2025  16:22:27 +0000 (0:00:02.030)       0:03:22.265 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace resource-group-system] ***
Monday 13 October 2025  16:22:31 +0000 (0:00:03.747)       0:03:26.013 ******** 
Monday 13 October 2025  16:22:31 +0000 (0:00:03.747)       0:03:26.012 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"configmanagement.gke.io/arch\":\"csmr\",\"configmanagement.gke.io/configmanagement\":\"config-management\",\"configmanagement.gke.io/system\":\"true\",\"control-plane\":\"controller-manager\",\"k8s-app\":\"kubernetes-config-management\"},\"name\":\"resource-group-controller-manager\",\"namespace\":\"resource-group-system\",\"ownerReferences\":[{\"apiVersion\":\"configmanagement.gke.io/v1\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ConfigManagement\",\"name\":\"config-management\",\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}]},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"configmanagement.gke.io/arch\":\"csmr\",\"configsync.gke.io/deployment-name\":\"resource-group-controller-manager\",\"control-plane\":\"controller-manager\"}},\"template\":{\"metadata\":{\"labels\":{\"configmanagement.gke.io/arch\":\"csmr\",\"configsync.gke.io/deployment-name\":\"resource-group-controller-manager\",\"control-plane\":\"controller-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--metrics-addr=127.0.0.1:8080\",\"--enable-leader-election\"],\"command\":[\"/resource-group\"],\"env\":[{\"name\":\"OC_RESOURCE_LABELS\",\"value\":\"k8s.container.name=\\\"manager\\\"\"}],\"image\":\"gcr.io/config-management-release/resource-group-controller:v1.18.3-rc.4\",\"name\":\"manager\",\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}},{\"args\":[\"--config=/conf/otel-agent-config.yaml\"],\"command\":[\"/otelcontribcol\"],\"env\":[{\"name\":\"KUBE_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"KUBE_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"KUBE_POD_UID\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.uid\"}}},{\"name\":\"KUBE_POD_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"KUBE_DEPLOYMENT_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.labels['configsync.gke.io/deployment-name']\"}}},{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\",\"value\":\"k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)\"}],\"image\":\"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6\",\"name\":\"otel-agent\",\"ports\":[{\"containerPort\":55678},{\"containerPort\":8888}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":13133}},\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/conf\",\"name\":\"otel-agent-config-vol\"}]}],\"securityContext\":{\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"resource-group-sa\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"configMap\":{\"name\":\"resource-group-otel-agent\"},\"name\":\"otel-agent-config-vol\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:41Z",
                "generation": 1,
                "labels": {
                    "configmanagement.gke.io/arch": "csmr",
                    "configmanagement.gke.io/configmanagement": "config-management",
                    "configmanagement.gke.io/system": "true",
                    "control-plane": "controller-manager",
                    "k8s-app": "kubernetes-config-management"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:configmanagement.gke.io/arch": {},
                                    "f:configmanagement.gke.io/configmanagement": {},
                                    "f:configmanagement.gke.io/system": {},
                                    "f:control-plane": {},
                                    "f:k8s-app": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:configmanagement.gke.io/arch": {},
                                            "f:configsync.gke.io/deployment-name": {},
                                            "f:control-plane": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"OC_RESOURCE_LABELS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            },
                                            "k:{\"name\":\"otel-agent\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"KUBE_DEPLOYMENT_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"KUBE_POD_UID\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":55678,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8888,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/conf\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"otel-agent-config-vol\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:41Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:57:57Z"
                    }
                ],
                "name": "resource-group-controller-manager",
                "namespace": "resource-group-system",
                "ownerReferences": [
                    {
                        "apiVersion": "configmanagement.gke.io/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ConfigManagement",
                        "name": "config-management",
                        "uid": "53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"
                    }
                ],
                "resourceVersion": "29176",
                "uid": "abd791d4-ebd7-4bb0-98cc-d1ec2c7c38d3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "configmanagement.gke.io/arch": "csmr",
                        "configsync.gke.io/deployment-name": "resource-group-controller-manager",
                        "control-plane": "controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "configmanagement.gke.io/arch": "csmr",
                            "configsync.gke.io/deployment-name": "resource-group-controller-manager",
                            "control-plane": "controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--metrics-addr=127.0.0.1:8080",
                                    "--enable-leader-election"
                                ],
                                "command": [
                                    "/resource-group"
                                ],
                                "env": [
                                    {
                                        "name": "OC_RESOURCE_LABELS",
                                        "value": "k8s.container.name=\"manager\""
                                    }
                                ],
                                "image": "gcr.io/config-management-release/resource-group-controller:v1.18.3-rc.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "manager",
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "args": [
                                    "--config=/conf/otel-agent-config.yaml"
                                ],
                                "command": [
                                    "/otelcontribcol"
                                ],
                                "env": [
                                    {
                                        "name": "KUBE_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_UID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_DEPLOYMENT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels['configsync.gke.io/deployment-name']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OTEL_RESOURCE_ATTRIBUTES",
                                        "value": "k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)"
                                    }
                                ],
                                "image": "gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "otel-agent",
                                "ports": [
                                    {
                                        "containerPort": 55678,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 13133,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "otel-agent-config-vol"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "resource-group-sa",
                        "serviceAccountName": "resource-group-sa",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "resource-group-otel-agent"
                                },
                                "name": "otel-agent-config-vol"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:57:57Z",
                        "lastUpdateTime": "2025-10-13T15:57:57Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:41Z",
                        "lastUpdateTime": "2025-10-13T15:57:57Z",
                        "message": "ReplicaSet \"resource-group-controller-manager-65ff697b4d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace resource-group-system] *******
Monday 13 October 2025  16:22:31 +0000 (0:00:00.111)       0:03:26.125 ******** 
Monday 13 October 2025  16:22:31 +0000 (0:00:00.111)       0:03:26.124 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'resource-group-controller-manager', 'namespace': 'resource-group-system', 'uid': 'abd791d4-ebd7-4bb0-98cc-d1ec2c7c38d3', 'resourceVersion': '29176', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:41Z', 'labels': {'configmanagement.gke.io/arch': 'csmr', 'configmanagement.gke.io/configmanagement': 'config-management', 'configmanagement.gke.io/system': 'true', 'control-plane': 'controller-manager', 'k8s-app': 'kubernetes-config-management'}, 'annotations': {'deployment.kubernetes.io/revision': '1', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"configmanagement.gke.io/arch":"csmr","configmanagement.gke.io/configmanagement":"config-management","configmanagement.gke.io/system":"true","control-plane":"controller-manager","k8s-app":"kubernetes-config-management"},"name":"resource-group-controller-manager","namespace":"resource-group-system","ownerReferences":[{"apiVersion":"configmanagement.gke.io/v1","blockOwnerDeletion":true,"controller":true,"kind":"ConfigManagement","name":"config-management","uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}]},"spec":{"replicas":1,"selector":{"matchLabels":{"configmanagement.gke.io/arch":"csmr","configsync.gke.io/deployment-name":"resource-group-controller-manager","control-plane":"controller-manager"}},"template":{"metadata":{"labels":{"configmanagement.gke.io/arch":"csmr","configsync.gke.io/deployment-name":"resource-group-controller-manager","control-plane":"controller-manager"}},"spec":{"containers":[{"args":["--metrics-addr=127.0.0.1:8080","--enable-leader-election"],"command":["/resource-group"],"env":[{"name":"OC_RESOURCE_LABELS","value":"k8s.container.name=\\"manager\\""}],"image":"gcr.io/config-management-release/resource-group-controller:v1.18.3-rc.4","name":"manager","resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}},{"args":["--config=/conf/otel-agent-config.yaml"],"command":["/otelcontribcol"],"env":[{"name":"KUBE_POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"KUBE_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"KUBE_POD_UID","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.uid"}}},{"name":"KUBE_POD_IP","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"status.podIP"}}},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"KUBE_DEPLOYMENT_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.labels[\'configsync.gke.io/deployment-name\']"}}},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)"}],"image":"gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6","name":"otel-agent","ports":[{"containerPort":55678},{"containerPort":8888}],"readinessProbe":{"httpGet":{"path":"/","port":13133}},"resources":{"requests":{"cpu":"10m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/conf","name":"otel-agent-config-vol"}]}],"securityContext":{"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"resource-group-sa","terminationGracePeriodSeconds":10,"volumes":[{"configMap":{"name":"resource-group-otel-agent"},"name":"otel-agent-config-vol"}]}}}}\n'}, 'ownerReferences': [{'apiVersion': 'configmanagement.gke.io/v1', 'kind': 'ConfigManagement', 'name': 'config-management', 'uid': '53ef3d3a-500e-41fc-86cc-3f23cdb7b95a', 'controller': True, 'blockOwnerDeletion': True}], 'managedFields': [{'manager': 'kubectl-client-side-apply', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:41Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:configmanagement.gke.io/arch': {}, 'f:configmanagement.gke.io/configmanagement': {}, 'f:configmanagement.gke.io/system': {}, 'f:control-plane': {}, 'f:k8s-app': {}}, 'f:ownerReferences': {'.': {}, 'k:{"uid":"53ef3d3a-500e-41fc-86cc-3f23cdb7b95a"}': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:configmanagement.gke.io/arch': {}, 'f:configsync.gke.io/deployment-name': {}, 'f:control-plane': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"OC_RESOURCE_LABELS"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}, 'k:{"name":"otel-agent"}': {'.': {}, 'f:args': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"KUBE_DEPLOYMENT_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_NODE_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_IP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_NAME"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"KUBE_POD_UID"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"OTEL_RESOURCE_ATTRIBUTES"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8888,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":55678,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/conf"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsGroup': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"otel-agent-config-vol"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:57Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'configmanagement.gke.io/arch': 'csmr', 'configsync.gke.io/deployment-name': 'resource-group-controller-manager', 'control-plane': 'controller-manager'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'configmanagement.gke.io/arch': 'csmr', 'configsync.gke.io/deployment-name': 'resource-group-controller-manager', 'control-plane': 'controller-manager'}}, 'spec': {'volumes': [{'name': 'otel-agent-config-vol', 'configMap': {'name': 'resource-group-otel-agent', 'defaultMode': 420}}], 'containers': [{'name': 'manager', 'image': 'gcr.io/config-management-release/resource-group-controller:v1.18.3-rc.4', 'command': ['/resource-group'], 'args': ['--metrics-addr=127.0.0.1:8080', '--enable-leader-election'], 'env': [{'name': 'OC_RESOURCE_LABELS', 'value': 'k8s.container.name="manager"'}], 'resources': {'requests': {'cpu': '100m', 'memory': '200Mi'}}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}, {'name': 'otel-agent', 'image': 'gcr.io/config-management-release/otelcontribcol:v0.102.0-gke.6', 'command': ['/otelcontribcol'], 'args': ['--config=/conf/otel-agent-config.yaml'], 'ports': [{'containerPort': 55678, 'protocol': 'TCP'}, {'containerPort': 8888, 'protocol': 'TCP'}], 'env': [{'name': 'KUBE_POD_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.name'}}}, {'name': 'KUBE_POD_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'KUBE_POD_UID', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.uid'}}}, {'name': 'KUBE_POD_IP', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'status.podIP'}}}, {'name': 'KUBE_NODE_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'spec.nodeName'}}}, {'name': 'KUBE_DEPLOYMENT_NAME', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': "metadata.labels['configsync.gke.io/deployment-name']"}}}, {'name': 'OTEL_RESOURCE_ATTRIBUTES', 'value': 'k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)'}], 'resources': {'requests': {'cpu': '10m', 'memory': '100Mi'}}, 'volumeMounts': [{'name': 'otel-agent-config-vol', 'mountPath': '/conf'}], 'readinessProbe': {'httpGet': {'path': '/', 'port': 13133, 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'resource-group-sa', 'serviceAccount': 'resource-group-sa', 'securityContext': {'runAsUser': 1000, 'runAsGroup': 1000, 'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:57Z', 'lastTransitionTime': '2025-10-13T15:57:57Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:57:57Z', 'lastTransitionTime': '2025-10-13T15:57:41Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "resource-group-controller-manager-65ff697b4d" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace flux-system] *************
Monday 13 October 2025  16:22:33 +0000 (0:00:01.340)       0:03:27.466 ******** 
Monday 13 October 2025  16:22:33 +0000 (0:00:01.340)       0:03:27.465 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace flux-system] ***********
Monday 13 October 2025  16:22:34 +0000 (0:00:01.231)       0:03:28.697 ******** 
Monday 13 October 2025  16:22:34 +0000 (0:00:01.231)       0:03:28.696 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|flux-system|helm-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|flux-system|helm-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"helm-controller\",\"app.kubernetes.io/part-of\":\"flux\",\"control-plane\":\"controller\"},\"name\":\"helm-controller\",\"namespace\":\"flux-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"helm-controller\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"helm-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"--events-addr=http://notification-controller.flux-system.svc.cluster.local./\",\"--watch-all-namespaces\",\"--log-level=info\",\"--log-encoding=json\",\"--enable-leader-election\"],\"env\":[{\"name\":\"RUNTIME_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.cpu\"}}},{\"name\":\"GOMEMLIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.memory\"}}}],\"image\":\"fluxcd/helm-controller:v1.1.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":8080,\"name\":\"http-prom\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"temp\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"helm-controller\",\"terminationGracePeriodSeconds\":600,\"volumes\":[{\"emptyDir\":{},\"name\":\"temp\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "helm-controller",
                    "app.kubernetes.io/part-of": "flux",
                    "control-plane": "controller"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/part-of": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"GOMAXPROCS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"GOMEMLIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RUNTIME_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"temp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:52Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:04Z"
                    }
                ],
                "name": "helm-controller",
                "namespace": "flux-system",
                "resourceVersion": "29249",
                "uid": "fa47bb40-9e97-4b13-8673-381654905a17"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "helm-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "helm-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--events-addr=http://notification-controller.flux-system.svc.cluster.local./",
                                    "--watch-all-namespaces",
                                    "--log-level=info",
                                    "--log-encoding=json",
                                    "--enable-leader-election"
                                ],
                                "env": [
                                    {
                                        "name": "RUNTIME_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.cpu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.memory"
                                            }
                                        }
                                    }
                                ],
                                "image": "fluxcd/helm-controller:v1.1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http-prom",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "temp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "helm-controller",
                        "serviceAccountName": "helm-controller",
                        "terminationGracePeriodSeconds": 600,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "temp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:58:04Z",
                        "lastUpdateTime": "2025-10-13T15:58:04Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:52Z",
                        "lastUpdateTime": "2025-10-13T15:58:04Z",
                        "message": "ReplicaSet \"helm-controller-9749bc56d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|flux-system|kustomize-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|flux-system|kustomize-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"kustomize-controller\",\"app.kubernetes.io/part-of\":\"flux\",\"control-plane\":\"controller\"},\"name\":\"kustomize-controller\",\"namespace\":\"flux-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"kustomize-controller\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"kustomize-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"--events-addr=http://notification-controller.flux-system.svc.cluster.local./\",\"--watch-all-namespaces\",\"--log-level=info\",\"--log-encoding=json\",\"--enable-leader-election\"],\"env\":[{\"name\":\"RUNTIME_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.cpu\"}}},{\"name\":\"GOMEMLIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.memory\"}}}],\"image\":\"fluxcd/kustomize-controller:v1.4.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":8080,\"name\":\"http-prom\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"temp\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"kustomize-controller\",\"terminationGracePeriodSeconds\":60,\"volumes\":[{\"emptyDir\":{},\"name\":\"temp\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "kustomize-controller",
                    "app.kubernetes.io/part-of": "flux",
                    "control-plane": "controller"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/part-of": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"GOMAXPROCS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"GOMEMLIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RUNTIME_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"temp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:52Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:10Z"
                    }
                ],
                "name": "kustomize-controller",
                "namespace": "flux-system",
                "resourceVersion": "29293",
                "uid": "5a3df559-fc2a-4ba4-878c-3fe1d0bf2fdd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kustomize-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kustomize-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--events-addr=http://notification-controller.flux-system.svc.cluster.local./",
                                    "--watch-all-namespaces",
                                    "--log-level=info",
                                    "--log-encoding=json",
                                    "--enable-leader-election"
                                ],
                                "env": [
                                    {
                                        "name": "RUNTIME_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.cpu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.memory"
                                            }
                                        }
                                    }
                                ],
                                "image": "fluxcd/kustomize-controller:v1.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http-prom",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "temp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "kustomize-controller",
                        "serviceAccountName": "kustomize-controller",
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "temp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:58:10Z",
                        "lastUpdateTime": "2025-10-13T15:58:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:52Z",
                        "lastUpdateTime": "2025-10-13T15:58:10Z",
                        "message": "ReplicaSet \"kustomize-controller-64f9854cfc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|flux-system|notification-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|flux-system|notification-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"notification-controller\",\"app.kubernetes.io/part-of\":\"flux\",\"control-plane\":\"controller\"},\"name\":\"notification-controller\",\"namespace\":\"flux-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"notification-controller\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"notification-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"--watch-all-namespaces\",\"--log-level=info\",\"--log-encoding=json\",\"--enable-leader-election\"],\"env\":[{\"name\":\"RUNTIME_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.cpu\"}}},{\"name\":\"GOMEMLIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.memory\"}}}],\"image\":\"fluxcd/notification-controller:v1.4.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9090,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":9292,\"name\":\"http-webhook\",\"protocol\":\"TCP\"},{\"containerPort\":8080,\"name\":\"http-prom\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":\"healthz\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"temp\"}]}],\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"notification-controller\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"emptyDir\":{},\"name\":\"temp\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "notification-controller",
                    "app.kubernetes.io/part-of": "flux",
                    "control-plane": "controller"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/part-of": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"GOMAXPROCS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"GOMEMLIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RUNTIME_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9292,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"temp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:52Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:16Z"
                    }
                ],
                "name": "notification-controller",
                "namespace": "flux-system",
                "resourceVersion": "29339",
                "uid": "60b28f78-36f8-43d6-801a-45b528c23f20"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "notification-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "notification-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--watch-all-namespaces",
                                    "--log-level=info",
                                    "--log-encoding=json",
                                    "--enable-leader-election"
                                ],
                                "env": [
                                    {
                                        "name": "RUNTIME_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.cpu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.memory"
                                            }
                                        }
                                    }
                                ],
                                "image": "fluxcd/notification-controller:v1.4.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9090,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9292,
                                        "name": "http-webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http-prom",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "temp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "notification-controller",
                        "serviceAccountName": "notification-controller",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "temp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:58:16Z",
                        "lastUpdateTime": "2025-10-13T15:58:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:52Z",
                        "lastUpdateTime": "2025-10-13T15:58:16Z",
                        "message": "ReplicaSet \"notification-controller-6bf56fb46c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|flux-system|source-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|flux-system|source-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"source-controller\",\"app.kubernetes.io/part-of\":\"flux\",\"control-plane\":\"controller\"},\"name\":\"source-controller\",\"namespace\":\"flux-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"source-controller\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"8080\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"source-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"--events-addr=http://notification-controller.flux-system.svc.cluster.local./\",\"--watch-all-namespaces\",\"--log-level=info\",\"--log-encoding=json\",\"--enable-leader-election\",\"--storage-path=/data\",\"--storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.\"],\"env\":[{\"name\":\"RUNTIME_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"TUF_ROOT\",\"value\":\"/tmp/.sigstore\"},{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.cpu\"}}},{\"name\":\"GOMEMLIMIT\",\"valueFrom\":{\"resourceFieldRef\":{\"containerName\":\"manager\",\"resource\":\"limits.memory\"}}}],\"image\":\"fluxcd/source-controller:v1.4.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"}},\"name\":\"manager\",\"ports\":[{\"containerPort\":9090,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":8080,\"name\":\"http-prom\",\"protocol\":\"TCP\"},{\"containerPort\":9440,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":\"http\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"data\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"priorityClassName\":\"system-cluster-critical\",\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"source-controller\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"emptyDir\":{},\"name\":\"data\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:57:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "source-controller",
                    "app.kubernetes.io/part-of": "flux",
                    "control-plane": "controller"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/part-of": {},
                                    "f:control-plane": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"manager\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"GOMAXPROCS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"GOMEMLIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RUNTIME_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"TUF_ROOT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9440,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/data\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"data\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:57:52Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:58:23Z"
                    }
                ],
                "name": "source-controller",
                "namespace": "flux-system",
                "resourceVersion": "29396",
                "uid": "f2c5bffd-16b5-4289-875c-62f207039f43"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "source-controller"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "8080",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "source-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--events-addr=http://notification-controller.flux-system.svc.cluster.local./",
                                    "--watch-all-namespaces",
                                    "--log-level=info",
                                    "--log-encoding=json",
                                    "--enable-leader-election",
                                    "--storage-path=/data",
                                    "--storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local."
                                ],
                                "env": [
                                    {
                                        "name": "RUNTIME_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "TUF_ROOT",
                                        "value": "/tmp/.sigstore"
                                    },
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.cpu"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GOMEMLIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "manager",
                                                "divisor": "0",
                                                "resource": "limits.memory"
                                            }
                                        }
                                    }
                                ],
                                "image": "fluxcd/source-controller:v1.4.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "manager",
                                "ports": [
                                    {
                                        "containerPort": 9090,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http-prom",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9440,
                                        "name": "healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "64Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "data"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "source-controller",
                        "serviceAccountName": "source-controller",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "data"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:58:23Z",
                        "lastUpdateTime": "2025-10-13T15:58:23Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:57:52Z",
                        "lastUpdateTime": "2025-10-13T15:58:23Z",
                        "message": "ReplicaSet \"source-controller-5b4ffb7f48\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace flux-system] *****************
Monday 13 October 2025  16:22:34 +0000 (0:00:00.188)       0:03:28.886 ******** 
Monday 13 October 2025  16:22:34 +0000 (0:00:00.188)       0:03:28.885 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'helm-controller', 'namespace': 'flux-system', 'uid': 'fa47bb40-9e97-4b13-8673-381654905a17', 'resourceVersion': '29249', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:52Z', 'labels': {'app.kubernetes.io/component': 'helm-controller', 'app.kubernetes.io/part-of': 'flux', 'control-plane': 'controller'}, 'annotations': {'config.k8s.io/owning-inventory': '69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|flux-system|helm-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367","internal.kpt.dev/upstream-identifier":"apps|Deployment|flux-system|helm-controller"},"labels":{"app.kubernetes.io/component":"helm-controller","app.kubernetes.io/part-of":"flux","control-plane":"controller"},"name":"helm-controller","namespace":"flux-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"helm-controller"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"8080","prometheus.io/scrape":"true"},"labels":{"app":"helm-controller"}},"spec":{"containers":[{"args":["--events-addr=http://notification-controller.flux-system.svc.cluster.local./","--watch-all-namespaces","--log-level=info","--log-encoding=json","--enable-leader-election"],"env":[{"name":"RUNTIME_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.cpu"}}},{"name":"GOMEMLIMIT","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.memory"}}}],"image":"fluxcd/helm-controller:v1.1.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":8080,"name":"http-prom","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/tmp","name":"temp"}]}],"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":1337},"serviceAccountName":"helm-controller","terminationGracePeriodSeconds":600,"volumes":[{"emptyDir":{},"name":"temp"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:52Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/part-of': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"GOMAXPROCS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"GOMEMLIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"RUNTIME_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"temp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:04Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'helm-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'helm-controller'}, 'annotations': {'prometheus.io/port': '8080', 'prometheus.io/scrape': 'true'}}, 'spec': {'volumes': [{'name': 'temp', 'emptyDir': {}}], 'containers': [{'name': 'manager', 'image': 'fluxcd/helm-controller:v1.1.0', 'args': ['--events-addr=http://notification-controller.flux-system.svc.cluster.local./', '--watch-all-namespaces', '--log-level=info', '--log-encoding=json', '--enable-leader-election'], 'ports': [{'name': 'http-prom', 'containerPort': 8080, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}], 'env': [{'name': 'RUNTIME_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'GOMAXPROCS', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.cpu', 'divisor': '0'}}}, {'name': 'GOMEMLIMIT', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.memory', 'divisor': '0'}}}], 'resources': {'limits': {'cpu': '1', 'memory': '1Gi'}, 'requests': {'cpu': '100m', 'memory': '64Mi'}}, 'volumeMounts': [{'name': 'temp', 'mountPath': '/tmp'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 600, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'helm-controller', 'serviceAccount': 'helm-controller', 'securityContext': {'fsGroup': 1337}, 'schedulerName': 'default-scheduler', 'priorityClassName': 'system-cluster-critical'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:04Z', 'lastTransitionTime': '2025-10-13T15:58:04Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:04Z', 'lastTransitionTime': '2025-10-13T15:57:52Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "helm-controller-9749bc56d" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'kustomize-controller', 'namespace': 'flux-system', 'uid': '5a3df559-fc2a-4ba4-878c-3fe1d0bf2fdd', 'resourceVersion': '29293', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:52Z', 'labels': {'app.kubernetes.io/component': 'kustomize-controller', 'app.kubernetes.io/part-of': 'flux', 'control-plane': 'controller'}, 'annotations': {'config.k8s.io/owning-inventory': '69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|flux-system|kustomize-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367","internal.kpt.dev/upstream-identifier":"apps|Deployment|flux-system|kustomize-controller"},"labels":{"app.kubernetes.io/component":"kustomize-controller","app.kubernetes.io/part-of":"flux","control-plane":"controller"},"name":"kustomize-controller","namespace":"flux-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"kustomize-controller"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"8080","prometheus.io/scrape":"true"},"labels":{"app":"kustomize-controller"}},"spec":{"containers":[{"args":["--events-addr=http://notification-controller.flux-system.svc.cluster.local./","--watch-all-namespaces","--log-level=info","--log-encoding=json","--enable-leader-election"],"env":[{"name":"RUNTIME_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.cpu"}}},{"name":"GOMEMLIMIT","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.memory"}}}],"image":"fluxcd/kustomize-controller:v1.4.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":8080,"name":"http-prom","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/tmp","name":"temp"}]}],"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":1337},"serviceAccountName":"kustomize-controller","terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{},"name":"temp"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:52Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/part-of': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"GOMAXPROCS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"GOMEMLIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"RUNTIME_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"temp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:10Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'kustomize-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'kustomize-controller'}, 'annotations': {'prometheus.io/port': '8080', 'prometheus.io/scrape': 'true'}}, 'spec': {'volumes': [{'name': 'temp', 'emptyDir': {}}], 'containers': [{'name': 'manager', 'image': 'fluxcd/kustomize-controller:v1.4.0', 'args': ['--events-addr=http://notification-controller.flux-system.svc.cluster.local./', '--watch-all-namespaces', '--log-level=info', '--log-encoding=json', '--enable-leader-election'], 'ports': [{'name': 'http-prom', 'containerPort': 8080, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}], 'env': [{'name': 'RUNTIME_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'GOMAXPROCS', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.cpu', 'divisor': '0'}}}, {'name': 'GOMEMLIMIT', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.memory', 'divisor': '0'}}}], 'resources': {'limits': {'cpu': '1', 'memory': '1Gi'}, 'requests': {'cpu': '100m', 'memory': '64Mi'}}, 'volumeMounts': [{'name': 'temp', 'mountPath': '/tmp'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 60, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'kustomize-controller', 'serviceAccount': 'kustomize-controller', 'securityContext': {'fsGroup': 1337}, 'schedulerName': 'default-scheduler', 'priorityClassName': 'system-cluster-critical'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:10Z', 'lastTransitionTime': '2025-10-13T15:58:10Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:10Z', 'lastTransitionTime': '2025-10-13T15:57:52Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "kustomize-controller-64f9854cfc" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'notification-controller', 'namespace': 'flux-system', 'uid': '60b28f78-36f8-43d6-801a-45b528c23f20', 'resourceVersion': '29339', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:52Z', 'labels': {'app.kubernetes.io/component': 'notification-controller', 'app.kubernetes.io/part-of': 'flux', 'control-plane': 'controller'}, 'annotations': {'config.k8s.io/owning-inventory': '69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|flux-system|notification-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367","internal.kpt.dev/upstream-identifier":"apps|Deployment|flux-system|notification-controller"},"labels":{"app.kubernetes.io/component":"notification-controller","app.kubernetes.io/part-of":"flux","control-plane":"controller"},"name":"notification-controller","namespace":"flux-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"notification-controller"}},"template":{"metadata":{"annotations":{"prometheus.io/port":"8080","prometheus.io/scrape":"true"},"labels":{"app":"notification-controller"}},"spec":{"containers":[{"args":["--watch-all-namespaces","--log-level=info","--log-encoding=json","--enable-leader-election"],"env":[{"name":"RUNTIME_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.cpu"}}},{"name":"GOMEMLIMIT","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.memory"}}}],"image":"fluxcd/notification-controller:v1.4.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9090,"name":"http","protocol":"TCP"},{"containerPort":9292,"name":"http-webhook","protocol":"TCP"},{"containerPort":8080,"name":"http-prom","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":"healthz"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/tmp","name":"temp"}]}],"securityContext":{"fsGroup":1337},"serviceAccountName":"notification-controller","terminationGracePeriodSeconds":10,"volumes":[{"emptyDir":{},"name":"temp"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:52Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/part-of': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"GOMAXPROCS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"GOMEMLIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"RUNTIME_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9292,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"temp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:16Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'notification-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'notification-controller'}, 'annotations': {'prometheus.io/port': '8080', 'prometheus.io/scrape': 'true'}}, 'spec': {'volumes': [{'name': 'temp', 'emptyDir': {}}], 'containers': [{'name': 'manager', 'image': 'fluxcd/notification-controller:v1.4.0', 'args': ['--watch-all-namespaces', '--log-level=info', '--log-encoding=json', '--enable-leader-election'], 'ports': [{'name': 'http', 'containerPort': 9090, 'protocol': 'TCP'}, {'name': 'http-webhook', 'containerPort': 9292, 'protocol': 'TCP'}, {'name': 'http-prom', 'containerPort': 8080, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}], 'env': [{'name': 'RUNTIME_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'GOMAXPROCS', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.cpu', 'divisor': '0'}}}, {'name': 'GOMEMLIMIT', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.memory', 'divisor': '0'}}}], 'resources': {'limits': {'cpu': '1', 'memory': '1Gi'}, 'requests': {'cpu': '100m', 'memory': '64Mi'}}, 'volumeMounts': [{'name': 'temp', 'mountPath': '/tmp'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/readyz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'notification-controller', 'serviceAccount': 'notification-controller', 'securityContext': {'fsGroup': 1337}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:16Z', 'lastTransitionTime': '2025-10-13T15:58:16Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:16Z', 'lastTransitionTime': '2025-10-13T15:57:52Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "notification-controller-6bf56fb46c" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'source-controller', 'namespace': 'flux-system', 'uid': 'f2c5bffd-16b5-4289-875c-62f207039f43', 'resourceVersion': '29396', 'generation': 1, 'creationTimestamp': '2025-10-13T15:57:52Z', 'labels': {'app.kubernetes.io/component': 'source-controller', 'app.kubernetes.io/part-of': 'flux', 'control-plane': 'controller'}, 'annotations': {'config.k8s.io/owning-inventory': '69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|flux-system|source-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"69f3e9f5564f944c99c0cacb0ecf1182fe430c67-1760371068068850367","internal.kpt.dev/upstream-identifier":"apps|Deployment|flux-system|source-controller"},"labels":{"app.kubernetes.io/component":"source-controller","app.kubernetes.io/part-of":"flux","control-plane":"controller"},"name":"source-controller","namespace":"flux-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"source-controller"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"8080","prometheus.io/scrape":"true"},"labels":{"app":"source-controller"}},"spec":{"containers":[{"args":["--events-addr=http://notification-controller.flux-system.svc.cluster.local./","--watch-all-namespaces","--log-level=info","--log-encoding=json","--enable-leader-election","--storage-path=/data","--storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local."],"env":[{"name":"RUNTIME_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"TUF_ROOT","value":"/tmp/.sigstore"},{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.cpu"}}},{"name":"GOMEMLIMIT","valueFrom":{"resourceFieldRef":{"containerName":"manager","resource":"limits.memory"}}}],"image":"fluxcd/source-controller:v1.4.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"healthz"}},"name":"manager","ports":[{"containerPort":9090,"name":"http","protocol":"TCP"},{"containerPort":8080,"name":"http-prom","protocol":"TCP"},{"containerPort":9440,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/","port":"http"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"50m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/data","name":"data"},{"mountPath":"/tmp","name":"tmp"}]}],"priorityClassName":"system-cluster-critical","securityContext":{"fsGroup":1337},"serviceAccountName":"source-controller","terminationGracePeriodSeconds":10,"volumes":[{"emptyDir":{},"name":"data"},{"emptyDir":{},"name":"tmp"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:57:52Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/part-of': {}, 'f:control-plane': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:type': {}}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:prometheus.io/port': {}, 'f:prometheus.io/scrape': {}}, 'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"manager"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"GOMAXPROCS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"GOMEMLIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:resourceFieldRef': {}}}, 'k:{"name":"RUNTIME_NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}, 'k:{"name":"TUF_ROOT"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9090,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":9440,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {'.': {}, 'f:limits': {'.': {}, 'f:cpu': {}, 'f:memory': {}}, 'f:requests': {'.': {}, 'f:cpu': {}, 'f:memory': {}}}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/data"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:priorityClassName': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:fsGroup': {}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"data"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"tmp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:23Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'source-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'source-controller'}, 'annotations': {'prometheus.io/port': '8080', 'prometheus.io/scrape': 'true'}}, 'spec': {'volumes': [{'name': 'data', 'emptyDir': {}}, {'name': 'tmp', 'emptyDir': {}}], 'containers': [{'name': 'manager', 'image': 'fluxcd/source-controller:v1.4.1', 'args': ['--events-addr=http://notification-controller.flux-system.svc.cluster.local./', '--watch-all-namespaces', '--log-level=info', '--log-encoding=json', '--enable-leader-election', '--storage-path=/data', '--storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.'], 'ports': [{'name': 'http', 'containerPort': 9090, 'protocol': 'TCP'}, {'name': 'http-prom', 'containerPort': 8080, 'protocol': 'TCP'}, {'name': 'healthz', 'containerPort': 9440, 'protocol': 'TCP'}], 'env': [{'name': 'RUNTIME_NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'TUF_ROOT', 'value': '/tmp/.sigstore'}, {'name': 'GOMAXPROCS', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.cpu', 'divisor': '0'}}}, {'name': 'GOMEMLIMIT', 'valueFrom': {'resourceFieldRef': {'containerName': 'manager', 'resource': 'limits.memory', 'divisor': '0'}}}], 'resources': {'limits': {'cpu': '1', 'memory': '1Gi'}, 'requests': {'cpu': '50m', 'memory': '64Mi'}}, 'volumeMounts': [{'name': 'data', 'mountPath': '/data'}, {'name': 'tmp', 'mountPath': '/tmp'}], 'livenessProbe': {'httpGet': {'path': '/healthz', 'port': 'healthz', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/', 'port': 'http', 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'source-controller', 'serviceAccount': 'source-controller', 'securityContext': {'fsGroup': 1337}, 'schedulerName': 'default-scheduler', 'priorityClassName': 'system-cluster-critical'}}, 'strategy': {'type': 'Recreate'}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:23Z', 'lastTransitionTime': '2025-10-13T15:58:23Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:58:23Z', 'lastTransitionTime': '2025-10-13T15:57:52Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "source-controller-5b4ffb7f48" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Get deployment resources in namespace argocd] ******************
Monday 13 October 2025  16:22:38 +0000 (0:00:03.958)       0:03:32.844 ******** 
Monday 13 October 2025  16:22:38 +0000 (0:00:03.958)       0:03:32.843 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace argocd] ****************
Monday 13 October 2025  16:22:39 +0000 (0:00:01.278)       0:03:34.123 ******** 
Monday 13 October 2025  16:22:39 +0000 (0:00:01.278)       0:03:34.122 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-applicationset-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-applicationset-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"applicationset-controller\",\"app.kubernetes.io/name\":\"argocd-applicationset-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-applicationset-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-applicationset-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-applicationset-controller\"],\"env\":[{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.annotations\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.global.preserved.labels\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.leader.election\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.policy.override\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.debug\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"log.format.timestamp\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.dryrun\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.progressive.syncs\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.tokenref.strict.mode\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.new.git.file.globbing\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.concurrent.reconciliations.max\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.scm.root.ca.path\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.allowed.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.webhook.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.requeue.after\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"Always\",\"name\":\"argocd-applicationset-controller\",\"ports\":[{\"containerPort\":7000,\"name\":\"webhook\"},{\"containerPort\":8080,\"name\":\"metrics\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"argocd-applicationset-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "applicationset-controller",
                    "app.kubernetes.io/name": "argocd-applicationset-controller",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"argocd-applicationset-controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/ssh\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"argocd-repo-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"gpg-keyring\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"gpg-keys\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssh-known-hosts\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tls-certs\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:18Z"
                    }
                ],
                "name": "argocd-applicationset-controller",
                "namespace": "argocd",
                "resourceVersion": "29912",
                "uid": "08922e02-1039-4956-b1fa-c5589c0c3a1e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-applicationset-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-applicationset-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/usr/local/bin/argocd-applicationset-controller"
                                ],
                                "env": [
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.global.preserved.annotations",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.global.preserved.labels",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.leader.election",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "repo.server",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.policy",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.policy.override",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.debug",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.log.format",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.log.level",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "log.format.timestamp",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.dryrun",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_GIT_MODULES_ENABLED",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.git.submodule",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.progressive.syncs",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.tokenref.strict.mode",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.new.git.file.globbing",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.repo.server.plaintext",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.repo.server.strict.tls",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.repo.server.timeout.seconds",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.concurrent.reconciliations.max",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.namespaces",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.scm.root.ca.path",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.allowed.scm.providers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.scm.providers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.webhook.parallelism.limit",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.requeue.after",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "Always",
                                "name": "argocd-applicationset-controller",
                                "ports": [
                                    {
                                        "containerPort": 7000,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-applicationset-controller",
                        "serviceAccountName": "argocd-applicationset-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:18Z",
                        "lastUpdateTime": "2025-10-13T15:59:18Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:18Z",
                        "message": "ReplicaSet \"argocd-applicationset-controller-77cb676b6c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-dex-server",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-dex-server\"},\"labels\":{\"app.kubernetes.io/component\":\"dex-server\",\"app.kubernetes.io/name\":\"argocd-dex-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-dex-server\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-dex-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/shared/argocd-dex\",\"rundex\"],\"env\":[{\"name\":\"ARGOCD_DEX_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"dexserver.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEX_SERVER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"dexserver.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"log.format.timestamp\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"dexserver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"ghcr.io/dexidp/dex:v2.41.1\",\"imagePullPolicy\":\"Always\",\"name\":\"dex\",\"ports\":[{\"containerPort\":5556},{\"containerPort\":5557},{\"containerPort\":5558}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"},{\"mountPath\":\"/tls\",\"name\":\"argocd-dex-server-tls\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/shared/argocd-dex\"],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"Always\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/shared\",\"name\":\"static-files\"},{\"mountPath\":\"/tmp\",\"name\":\"dexconfig\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"argocd-dex-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"static-files\"},{\"emptyDir\":{},\"name\":\"dexconfig\"},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "dex-server",
                    "app.kubernetes.io/name": "argocd-dex-server",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"dex\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_DEX_SERVER_LOGFORMAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_DEX_SERVER_LOGLEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/shared\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:initContainers": {
                                            ".": {},
                                            "k:{\"name\":\"copyutil\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/shared\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"argocd-dex-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"dexconfig\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"static-files\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:27Z"
                    }
                ],
                "name": "argocd-dex-server",
                "namespace": "argocd",
                "resourceVersion": "30017",
                "uid": "58d05a43-7b73-446f-b911-6a1638663ad6"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-dex-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-dex-server"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/part-of": "argocd"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 5
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "command": [
                                    "/shared/argocd-dex",
                                    "rundex"
                                ],
                                "env": [
                                    {
                                        "name": "ARGOCD_DEX_SERVER_LOGFORMAT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "dexserver.log.format",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_DEX_SERVER_LOGLEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "dexserver.log.level",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "log.format.timestamp",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "dexserver.disable.tls",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "image": "ghcr.io/dexidp/dex:v2.41.1",
                                "imagePullPolicy": "Always",
                                "name": "dex",
                                "ports": [
                                    {
                                        "containerPort": 5556,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5557,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5558,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "dexconfig"
                                    },
                                    {
                                        "mountPath": "/tls",
                                        "name": "argocd-dex-server-tls"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/bin/cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/shared/argocd-dex"
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "Always",
                                "name": "copyutil",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "dexconfig"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-dex-server",
                        "serviceAccountName": "argocd-dex-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "static-files"
                            },
                            {
                                "emptyDir": {},
                                "name": "dexconfig"
                            },
                            {
                                "name": "argocd-dex-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-dex-server-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:27Z",
                        "lastUpdateTime": "2025-10-13T15:59:27Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:27Z",
                        "message": "ReplicaSet \"argocd-dex-server-69d76976fd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-notifications-controller",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-notifications-controller\"},\"labels\":{\"app.kubernetes.io/component\":\"notifications-controller\",\"app.kubernetes.io/name\":\"argocd-notifications-controller\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-notifications-controller\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-notifications-controller\"}},\"spec\":{\"containers\":[{\"args\":[\"/usr/local/bin/argocd-notifications\"],\"env\":[{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"log.format.timestamp\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.selfservice.enabled\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"notificationscontroller.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"tcpSocket\":{\"port\":9001}},\"name\":\"argocd-notifications-controller\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"}],\"workingDir\":\"/app\"}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-notifications-controller\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "notifications-controller",
                    "app.kubernetes.io/name": "argocd-notifications-controller",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"argocd-notifications-controller\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:tcpSocket": {
                                                        ".": {},
                                                        "f:port": {}
                                                    },
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                },
                                                "f:workingDir": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"argocd-repo-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"tls-certs\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:18Z"
                    }
                ],
                "name": "argocd-notifications-controller",
                "namespace": "argocd",
                "resourceVersion": "29917",
                "uid": "46720d4c-985e-4b68-b94d-f2b31d9ad740"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-notifications-controller"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-notifications-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/usr/local/bin/argocd-notifications"
                                ],
                                "env": [
                                    {
                                        "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "notificationscontroller.log.format",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "notificationscontroller.log.level",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "log.format.timestamp",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATION_NAMESPACES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "application.namespaces",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "notificationscontroller.selfservice.enabled",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "notificationscontroller.repo.server.plaintext",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 9001
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "argocd-notifications-controller",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    }
                                ],
                                "workingDir": "/app"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "argocd-notifications-controller",
                        "serviceAccountName": "argocd-notifications-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:18Z",
                        "lastUpdateTime": "2025-10-13T15:59:18Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:18Z",
                        "message": "ReplicaSet \"argocd-notifications-controller-7776574f76\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-redis",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-redis\"},\"labels\":{\"app.kubernetes.io/component\":\"redis\",\"app.kubernetes.io/name\":\"argocd-redis\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-redis\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-redis\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"--save\",\"\",\"--appendonly\",\"no\",\"--requirepass $(REDIS_PASSWORD)\"],\"env\":[{\"name\":\"REDIS_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"auth\",\"name\":\"argocd-redis\"}}}],\"image\":\"redis:7.2.7-alpine\",\"imagePullPolicy\":\"Always\",\"name\":\"redis\",\"ports\":[{\"containerPort\":6379}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"initContainers\":[{\"command\":[\"argocd\",\"admin\",\"redis-initial-password\"],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"secret-init\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"argocd-redis\"}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "redis",
                    "app.kubernetes.io/name": "argocd-redis",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"redis\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"REDIS_PASSWORD\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:secretKeyRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":6379,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:initContainers": {
                                            ".": {},
                                            "k:{\"name\":\"secret-init\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {}
                                            }
                                        },
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {},
                                            "f:seccompProfile": {
                                                ".": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:29Z"
                    }
                ],
                "name": "argocd-redis",
                "namespace": "argocd",
                "resourceVersion": "30044",
                "uid": "b1ce3695-6abf-40aa-bf4c-c44987ad77be"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-redis"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/name": "argocd-redis"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    },
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/part-of": "argocd"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 5
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--save",
                                    "",
                                    "--appendonly",
                                    "no",
                                    "--requirepass $(REDIS_PASSWORD)"
                                ],
                                "env": [
                                    {
                                        "name": "REDIS_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "auth",
                                                "name": "argocd-redis"
                                            }
                                        }
                                    }
                                ],
                                "image": "redis:7.2.7-alpine",
                                "imagePullPolicy": "Always",
                                "name": "redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "argocd",
                                    "admin",
                                    "redis-initial-password"
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "secret-init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 999,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "argocd-redis",
                        "serviceAccountName": "argocd-redis",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:29Z",
                        "lastUpdateTime": "2025-10-13T15:59:29Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:29Z",
                        "message": "ReplicaSet \"argocd-redis-6dd5986579\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-repo-server",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-repo-server\"},\"labels\":{\"app.kubernetes.io/component\":\"repo-server\",\"app.kubernetes.io/name\":\"argocd-repo-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-repo-server\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-repo-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"/usr/local/bin/argocd-repo-server\"],\"env\":[{\"name\":\"REDIS_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"auth\",\"name\":\"argocd-redis\"}}},{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"timeout.reconciliation\",\"name\":\"argocd-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"log.format.timestamp\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.repo.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_INSECURE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.insecure\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_HEADERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.headers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ATTRS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.attrs\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.max.combined.directory.manifests.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.plugin.tar.exclusions\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.plugin.use.manifest.generate.paths\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.allow.oob.symlinks\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.tar.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.streamed.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.disable.helm.manifest.max.extracted.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.revision.cache.lock.timeout\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.enable.git.submodule\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.git.lsremote.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GIT_REQUEST_TIMEOUT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.git.request.timeout\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_GRPC_MAX_SIZE_MB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.grpc.max.size\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"reposerver.include.hidden.directories\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"HELM_CACHE_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_CONFIG_HOME\",\"value\":\"/helm-working-dir\"},{\"name\":\"HELM_DATA_HOME\",\"value\":\"/helm-working-dir\"}],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8084},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-repo-server\",\"ports\":[{\"containerPort\":8081},{\"containerPort\":8084}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8084},\"initialDelaySeconds\":5,\"periodSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/gpg/source\",\"name\":\"gpg-keys\"},{\"mountPath\":\"/app/config/gpg/keys\",\"name\":\"gpg-keyring\"},{\"mountPath\":\"/app/config/reposerver/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/helm-working-dir\",\"name\":\"helm-working-dir\"},{\"mountPath\":\"/home/argocd/cmp-server/plugins\",\"name\":\"plugins\"}]}],\"initContainers\":[{\"command\":[\"/bin/cp\",\"-n\",\"/usr/local/bin/argocd\",\"/var/run/argocd/argocd-cmp-server\"],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"name\":\"copyutil\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/var/run/argocd\",\"name\":\"var-files\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"argocd-repo-server\",\"volumes\":[{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"configMap\":{\"name\":\"argocd-gpg-keys-cm\"},\"name\":\"gpg-keys\"},{\"emptyDir\":{},\"name\":\"gpg-keyring\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"emptyDir\":{},\"name\":\"helm-working-dir\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"emptyDir\":{},\"name\":\"var-files\"},{\"emptyDir\":{},\"name\":\"plugins\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "repo-server",
                    "app.kubernetes.io/name": "argocd-repo-server",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:automountServiceAccountToken": {},
                                        "f:containers": {
                                            "k:{\"name\":\"argocd-repo-server\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_GIT_REQUEST_TIMEOUT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_GRPC_MAX_SIZE_MB\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ATTRS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_HEADERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_INSECURE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HELM_DATA_HOME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"REDISDB\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_PASSWORD\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:secretKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_SERVER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/ssh\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/helm-working-dir\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:initContainers": {
                                            ".": {},
                                            "k:{\"name\":\"copyutil\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/var/run/argocd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"argocd-repo-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"gpg-keyring\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"gpg-keys\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"helm-working-dir\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"plugins\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssh-known-hosts\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tls-certs\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"var-files\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:37Z"
                    }
                ],
                "name": "argocd-repo-server",
                "namespace": "argocd",
                "resourceVersion": "30094",
                "uid": "67bd4daf-8a8d-4264-8e62-efc717271b3d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-repo-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-repo-server"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/name": "argocd-repo-server"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    },
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/part-of": "argocd"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 5
                                    }
                                ]
                            }
                        },
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "args": [
                                    "/usr/local/bin/argocd-repo-server"
                                ],
                                "env": [
                                    {
                                        "name": "REDIS_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "auth",
                                                "name": "argocd-redis"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "timeout.reconciliation",
                                                "name": "argocd-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.log.format",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.log.level",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "log.format.timestamp",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.parallelism.limit",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.listen.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.metrics.listen.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.disable.tls",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_MIN_VERSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.tls.minversion",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_MAX_VERSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.tls.maxversion",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_CIPHERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.tls.ciphers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.repo.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDIS_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.server",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDIS_COMPRESSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.compression",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDISDB",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.db",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.default.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_OTLP_INSECURE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.insecure",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_OTLP_HEADERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.headers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_OTLP_ATTRS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.attrs",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.max.combined.directory.manifests.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.plugin.tar.exclusions",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.plugin.use.manifest.generate.paths",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.allow.oob.symlinks",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.streamed.manifest.max.tar.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.streamed.manifest.max.extracted.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.helm.manifest.max.extracted.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.disable.helm.manifest.max.extracted.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REVISION_CACHE_LOCK_TIMEOUT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.revision.cache.lock.timeout",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_GIT_MODULES_ENABLED",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.enable.git.submodule",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.git.lsremote.parallelism.limit",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_GIT_REQUEST_TIMEOUT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.git.request.timeout",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_GRPC_MAX_SIZE_MB",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.grpc.max.size",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "reposerver.include.hidden.directories",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "HELM_CACHE_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_CONFIG_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_DATA_HOME",
                                        "value": "/helm-working-dir"
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz?full=true",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "argocd-repo-server",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8084,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8084,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/helm-working-dir",
                                        "name": "helm-working-dir"
                                    },
                                    {
                                        "mountPath": "/home/argocd/cmp-server/plugins",
                                        "name": "plugins"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/bin/cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/var/run/argocd/argocd-cmp-server"
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "copyutil",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/argocd",
                                        "name": "var-files"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-repo-server",
                        "serviceAccountName": "argocd-repo-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "emptyDir": {},
                                "name": "helm-working-dir"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "var-files"
                            },
                            {
                                "emptyDir": {},
                                "name": "plugins"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:37Z",
                        "lastUpdateTime": "2025-10-13T15:59:37Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:37Z",
                        "message": "ReplicaSet \"argocd-repo-server-575bbf7949\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|argocd|argocd-server",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|argocd|argocd-server\"},\"labels\":{\"app.kubernetes.io/component\":\"server\",\"app.kubernetes.io/name\":\"argocd-server\",\"app.kubernetes.io/part-of\":\"argocd\"},\"name\":\"argocd-server\",\"namespace\":\"argocd\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"argocd-server\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100},{\"podAffinityTerm\":{\"labelSelector\":{\"matchLabels\":{\"app.kubernetes.io/part-of\":\"argocd\"}},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"/usr/local/bin/argocd-server\"],\"env\":[{\"name\":\"REDIS_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"auth\",\"name\":\"argocd-redis\"}}},{\"name\":\"ARGOCD_SERVER_INSECURE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.insecure\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_BASEHREF\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.basehref\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ROOTPATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.rootpath\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGFORMAT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.format\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.log.level\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"repo.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.disable.auth\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.gzip\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.timeout.seconds\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.x.frame.options\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.content.security.policy\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.repo.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.plaintext\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.dex.server.strict.tls\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MIN_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.minversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_MAX_VERSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.maxversion\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_TLS_CIPHERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.tls.ciphers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.connection.status.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.oidc.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.login.attempts.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.staticassets\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.app.state.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.server\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDIS_COMPRESSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.compression\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"REDISDB\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"redis.db\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.default.cache.expiration\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.http.cookie.maxnumber\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.metrics.listen.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.address\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_INSECURE\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.insecure\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_HEADERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.headers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_OTLP_ATTRS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"otlp.attrs\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"application.namespaces\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.enable.proxy.extension\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_K8SCLIENT_RETRY_MAX\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.k8sclient.retry.max\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.k8sclient.retry.base.backoff\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_API_CONTENT_TYPES\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.api.content.types\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.webhook.parallelism.limit\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.new.git.file.globbing\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.scm.root.ca.path\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.allowed.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"applicationsetcontroller.enable.scm.providers\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_HYDRATOR_ENABLED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"hydrator.enabled\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}},{\"name\":\"ARGOCD_SYNC_WITH_REPLACE_ALLOWED\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"server.sync.replace.allowed\",\"name\":\"argocd-cmd-params-cm\",\"optional\":true}}}],\"image\":\"quay.io/argoproj/argocd:v3.0.6\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz?full=true\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30,\"timeoutSeconds\":5},\"name\":\"argocd-server\",\"ports\":[{\"containerPort\":8080},{\"containerPort\":8083}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":30},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/app/config/ssh\",\"name\":\"ssh-known-hosts\"},{\"mountPath\":\"/app/config/tls\",\"name\":\"tls-certs\"},{\"mountPath\":\"/app/config/server/tls\",\"name\":\"argocd-repo-server-tls\"},{\"mountPath\":\"/app/config/dex/tls\",\"name\":\"argocd-dex-server-tls\"},{\"mountPath\":\"/home/argocd\",\"name\":\"plugins-home\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"},{\"mountPath\":\"/home/argocd/params\",\"name\":\"argocd-cmd-params-cm\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"argocd-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"plugins-home\"},{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"name\":\"argocd-ssh-known-hosts-cm\"},\"name\":\"ssh-known-hosts\"},{\"configMap\":{\"name\":\"argocd-tls-certs-cm\"},\"name\":\"tls-certs\"},{\"name\":\"argocd-repo-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"tls.key\",\"path\":\"tls.key\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-repo-server-tls\"}},{\"name\":\"argocd-dex-server-tls\",\"secret\":{\"items\":[{\"key\":\"tls.crt\",\"path\":\"tls.crt\"},{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}],\"optional\":true,\"secretName\":\"argocd-dex-server-tls\"}},{\"configMap\":{\"items\":[{\"key\":\"server.profile.enabled\",\"path\":\"profiler.enabled\"}],\"name\":\"argocd-cmd-params-cm\",\"optional\":true},\"name\":\"argocd-cmd-params-cm\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T15:58:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/name": "argocd-server",
                    "app.kubernetes.io/part-of": "argocd"
                },
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/component": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:app.kubernetes.io/part-of": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"argocd-server\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ARGOCD_API_CONTENT_TYPES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_HYDRATOR_ENABLED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_MAX\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_OTLP_ATTRS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_OTLP_HEADERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_OTLP_INSECURE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_SYNC_WITH_REPLACE_ALLOWED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDISDB\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_PASSWORD\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:secretKeyRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"REDIS_SERVER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:configMapKeyRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:seccompProfile": {
                                                        ".": {},
                                                        "f:type": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/ssh\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/app/config/tls\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/home/argocd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/home/argocd/params\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:nodeSelector": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"argocd-cmd-params-cm\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:name": {},
                                                    "f:optional": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"argocd-dex-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"argocd-repo-server-tls\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"plugins-home\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssh-known-hosts\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tls-certs\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T15:58:46Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T15:59:47Z"
                    }
                ],
                "name": "argocd-server",
                "namespace": "argocd",
                "resourceVersion": "30161",
                "uid": "c56d2d45-7d84-4304-8e68-aa22ad0fdc21"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "argocd-server"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/name": "argocd-server"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    },
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchLabels": {
                                                    "app.kubernetes.io/part-of": "argocd"
                                                }
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 5
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "/usr/local/bin/argocd-server"
                                ],
                                "env": [
                                    {
                                        "name": "REDIS_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "auth",
                                                "name": "argocd-redis"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_INSECURE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.insecure",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_BASEHREF",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.basehref",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_ROOTPATH",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.rootpath",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_LOGFORMAT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.log.format",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_LOG_LEVEL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.log.level",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_REPO_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "repo.server",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_DEX_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.dex.server",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_DISABLE_AUTH",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.disable.auth",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_ENABLE_GZIP",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.enable.gzip",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.repo.server.timeout.seconds",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.x.frame.options",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.content.security.policy",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.repo.server.plaintext",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.repo.server.strict.tls",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.dex.server.plaintext",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.dex.server.strict.tls",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_MIN_VERSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.tls.minversion",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_MAX_VERSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.tls.maxversion",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_TLS_CIPHERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.tls.ciphers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.connection.status.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.oidc.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.login.attempts.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_STATIC_ASSETS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.staticassets",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.app.state.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDIS_SERVER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.server",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDIS_COMPRESSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.compression",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "REDISDB",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "redis.db",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.default.cache.expiration",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_MAX_COOKIE_NUMBER",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.http.cookie.maxnumber",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.listen.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.metrics.listen.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.address",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_OTLP_INSECURE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.insecure",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_OTLP_HEADERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.headers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_OTLP_ATTRS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "otlp.attrs",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATION_NAMESPACES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "application.namespaces",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.enable.proxy.extension",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_K8SCLIENT_RETRY_MAX",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.k8sclient.retry.max",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.k8sclient.retry.base.backoff",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_API_CONTENT_TYPES",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.api.content.types",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.webhook.parallelism.limit",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.new.git.file.globbing",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.scm.root.ca.path",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.allowed.scm.providers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "applicationsetcontroller.enable.scm.providers",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_HYDRATOR_ENABLED",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "hydrator.enabled",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "ARGOCD_SYNC_WITH_REPLACE_ALLOWED",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "server.sync.replace.allowed",
                                                "name": "argocd-cmd-params-cm",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v3.0.6",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz?full=true",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "argocd-server",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8083,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/server/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/app/config/dex/tls",
                                        "name": "argocd-dex-server-tls"
                                    },
                                    {
                                        "mountPath": "/home/argocd",
                                        "name": "plugins-home"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/home/argocd/params",
                                        "name": "argocd-cmd-params-cm"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-server",
                        "serviceAccountName": "argocd-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "plugins-home"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "name": "argocd-dex-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-dex-server-tls"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "server.profile.enabled",
                                            "path": "profiler.enabled"
                                        }
                                    ],
                                    "name": "argocd-cmd-params-cm",
                                    "optional": true
                                },
                                "name": "argocd-cmd-params-cm"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T15:59:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T15:58:46Z",
                        "lastUpdateTime": "2025-10-13T15:59:46Z",
                        "message": "ReplicaSet \"argocd-server-6769964c47\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace argocd] **********************
Monday 13 October 2025  16:22:40 +0000 (0:00:00.371)       0:03:34.494 ******** 
Monday 13 October 2025  16:22:40 +0000 (0:00:00.371)       0:03:34.493 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-applicationset-controller', 'namespace': 'argocd', 'uid': '08922e02-1039-4956-b1fa-c5589c0c3a1e', 'resourceVersion': '29912', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'applicationset-controller', 'app.kubernetes.io/name': 'argocd-applicationset-controller', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-applicationset-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-applicationset-controller"},"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-applicationset-controller","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"spec":{"containers":[{"args":["/usr/local/bin/argocd-applicationset-controller"],"env":[{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.global.preserved.annotations","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.global.preserved.labels","name":"argocd-cmd-params-cm","optional":true}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.leader.election","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"key":"repo.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.policy","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.policy.override","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.debug","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.dryrun","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.git.submodule","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.progressive.syncs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.tokenref.strict.mode","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.new.git.file.globbing","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.concurrent.reconciliations.max","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.scm.root.ca.path","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.allowed.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.webhook.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.requeue.after","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","name":"argocd-applicationset-controller","ports":[{"containerPort":7000,"name":"webhook"},{"containerPort":8080,"name":"metrics"}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-applicationset-controller","volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:containers': {'k:{"name":"argocd-applicationset-controller"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_GIT_MODULES_ENABLED"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"NAMESPACE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:fieldRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":7000,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/app/config/gpg/keys"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/gpg/source"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/reposerver/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/ssh"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"argocd-repo-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"gpg-keyring"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"gpg-keys"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"ssh-known-hosts"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tls-certs"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tmp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:18Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-applicationset-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-applicationset-controller'}}, 'spec': {'volumes': [{'name': 'ssh-known-hosts', 'configMap': {'name': 'argocd-ssh-known-hosts-cm', 'defaultMode': 420}}, {'name': 'tls-certs', 'configMap': {'name': 'argocd-tls-certs-cm', 'defaultMode': 420}}, {'name': 'gpg-keys', 'configMap': {'name': 'argocd-gpg-keys-cm', 'defaultMode': 420}}, {'name': 'gpg-keyring', 'emptyDir': {}}, {'name': 'tmp', 'emptyDir': {}}, {'name': 'argocd-repo-server-tls', 'secret': {'secretName': 'argocd-repo-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'tls.key', 'path': 'tls.key'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}], 'containers': [{'name': 'argocd-applicationset-controller', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'args': ['/usr/local/bin/argocd-applicationset-controller'], 'ports': [{'name': 'webhook', 'containerPort': 7000, 'protocol': 'TCP'}, {'name': 'metrics', 'containerPort': 8080, 'protocol': 'TCP'}], 'env': [{'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.global.preserved.annotations', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.global.preserved.labels', 'optional': True}}}, {'name': 'NAMESPACE', 'valueFrom': {'fieldRef': {'apiVersion': 'v1', 'fieldPath': 'metadata.namespace'}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.leader.election', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'repo.server', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_POLICY', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.policy', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.policy.override', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.debug', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.log.format', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.log.level', 'optional': True}}}, {'name': 'ARGOCD_LOG_FORMAT_TIMESTAMP', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'log.format.timestamp', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.dryrun', 'optional': True}}}, {'name': 'ARGOCD_GIT_MODULES_ENABLED', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.git.submodule', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.progressive.syncs', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.tokenref.strict.mode', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.new.git.file.globbing', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.repo.server.plaintext', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.repo.server.strict.tls', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.repo.server.timeout.seconds', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.concurrent.reconciliations.max', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.namespaces', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.scm.root.ca.path', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.allowed.scm.providers', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.scm.providers', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.webhook.parallelism.limit', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.requeue.after', 'optional': True}}}], 'resources': {}, 'volumeMounts': [{'name': 'ssh-known-hosts', 'mountPath': '/app/config/ssh'}, {'name': 'tls-certs', 'mountPath': '/app/config/tls'}, {'name': 'gpg-keys', 'mountPath': '/app/config/gpg/source'}, {'name': 'gpg-keyring', 'mountPath': '/app/config/gpg/keys'}, {'name': 'tmp', 'mountPath': '/tmp'}, {'name': 'argocd-repo-server-tls', 'mountPath': '/app/config/reposerver/tls'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-applicationset-controller', 'serviceAccount': 'argocd-applicationset-controller', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:18Z', 'lastTransitionTime': '2025-10-13T15:59:18Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:18Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-applicationset-controller-77cb676b6c" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-dex-server', 'namespace': 'argocd', 'uid': '58d05a43-7b73-446f-b911-6a1638663ad6', 'resourceVersion': '30017', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'dex-server', 'app.kubernetes.io/name': 'argocd-dex-server', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-dex-server', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-dex-server"},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"env":[{"name":"ARGOCD_DEX_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"dexserver.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEX_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"dexserver.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEX_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"key":"dexserver.disable.tls","name":"argocd-cmd-params-cm","optional":true}}}],"image":"ghcr.io/dexidp/dex:v2.41.1","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"},{"mountPath":"/tls","name":"argocd-dex-server-tls"}]}],"initContainers":[{"command":["/bin/cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","name":"copyutil","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"},{"emptyDir":{},"name":"dexconfig"},{"name":"argocd-dex-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-dex-server-tls"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:podAntiAffinity': {'.': {}, 'f:preferredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"dex"}': {'.': {}, 'f:command': {}, 'f:env': {'.': {}, 'k:{"name":"ARGOCD_DEX_SERVER_DISABLE_TLS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_DEX_SERVER_LOGFORMAT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_DEX_SERVER_LOGLEVEL"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":5556,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":5557,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":5558,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/shared"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:initContainers': {'.': {}, 'k:{"name":"copyutil"}': {'.': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/shared"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"argocd-dex-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"dexconfig"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"static-files"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:27Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-dex-server'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-dex-server'}}, 'spec': {'volumes': [{'name': 'static-files', 'emptyDir': {}}, {'name': 'dexconfig', 'emptyDir': {}}, {'name': 'argocd-dex-server-tls', 'secret': {'secretName': 'argocd-dex-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'tls.key', 'path': 'tls.key'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}], 'initContainers': [{'name': 'copyutil', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'command': ['/bin/cp', '-n', '/usr/local/bin/argocd', '/shared/argocd-dex'], 'resources': {}, 'volumeMounts': [{'name': 'static-files', 'mountPath': '/shared'}, {'name': 'dexconfig', 'mountPath': '/tmp'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'containers': [{'name': 'dex', 'image': 'ghcr.io/dexidp/dex:v2.41.1', 'command': ['/shared/argocd-dex', 'rundex'], 'ports': [{'containerPort': 5556, 'protocol': 'TCP'}, {'containerPort': 5557, 'protocol': 'TCP'}, {'containerPort': 5558, 'protocol': 'TCP'}], 'env': [{'name': 'ARGOCD_DEX_SERVER_LOGFORMAT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'dexserver.log.format', 'optional': True}}}, {'name': 'ARGOCD_DEX_SERVER_LOGLEVEL', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'dexserver.log.level', 'optional': True}}}, {'name': 'ARGOCD_LOG_FORMAT_TIMESTAMP', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'log.format.timestamp', 'optional': True}}}, {'name': 'ARGOCD_DEX_SERVER_DISABLE_TLS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'dexserver.disable.tls', 'optional': True}}}], 'resources': {}, 'volumeMounts': [{'name': 'static-files', 'mountPath': '/shared'}, {'name': 'dexconfig', 'mountPath': '/tmp'}, {'name': 'argocd-dex-server-tls', 'mountPath': '/tls'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-dex-server', 'serviceAccount': 'argocd-dex-server', 'securityContext': {}, 'affinity': {'podAntiAffinity': {'preferredDuringSchedulingIgnoredDuringExecution': [{'weight': 5, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/part-of': 'argocd'}}, 'topologyKey': 'kubernetes.io/hostname'}}]}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:27Z', 'lastTransitionTime': '2025-10-13T15:59:27Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:27Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-dex-server-69d76976fd" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-notifications-controller', 'namespace': 'argocd', 'uid': '46720d4c-985e-4b68-b94d-f2b31d9ad740', 'resourceVersion': '29917', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'notifications-controller', 'app.kubernetes.io/name': 'argocd-notifications-controller', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-notifications-controller', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-notifications-controller"},"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-notifications-controller","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"spec":{"containers":[{"args":["/usr/local/bin/argocd-notifications"],"env":[{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"application.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.selfservice.enabled","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"tcpSocket":{"port":9001}},"name":"argocd-notifications-controller","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}],"workingDir":"/app"}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"argocd-notifications-controller","volumes":[{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:containers': {'k:{"name":"argocd-notifications-controller"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"ARGOCD_APPLICATION_NAMESPACES"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:tcpSocket': {'.': {}, 'f:port': {}}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/app/config/reposerver/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}, 'f:workingDir': {}}}, 'f:dnsPolicy': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"argocd-repo-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"tls-certs"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:18Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-notifications-controller'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-notifications-controller'}}, 'spec': {'volumes': [{'name': 'tls-certs', 'configMap': {'name': 'argocd-tls-certs-cm', 'defaultMode': 420}}, {'name': 'argocd-repo-server-tls', 'secret': {'secretName': 'argocd-repo-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'tls.key', 'path': 'tls.key'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}], 'containers': [{'name': 'argocd-notifications-controller', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'args': ['/usr/local/bin/argocd-notifications'], 'workingDir': '/app', 'env': [{'name': 'ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'notificationscontroller.log.format', 'optional': True}}}, {'name': 'ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'notificationscontroller.log.level', 'optional': True}}}, {'name': 'ARGOCD_LOG_FORMAT_TIMESTAMP', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'log.format.timestamp', 'optional': True}}}, {'name': 'ARGOCD_APPLICATION_NAMESPACES', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'application.namespaces', 'optional': True}}}, {'name': 'ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'notificationscontroller.selfservice.enabled', 'optional': True}}}, {'name': 'ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'notificationscontroller.repo.server.plaintext', 'optional': True}}}], 'resources': {}, 'volumeMounts': [{'name': 'tls-certs', 'mountPath': '/app/config/tls'}, {'name': 'argocd-repo-server-tls', 'mountPath': '/app/config/reposerver/tls'}], 'livenessProbe': {'tcpSocket': {'port': 9001}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-notifications-controller', 'serviceAccount': 'argocd-notifications-controller', 'securityContext': {'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'Recreate'}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:18Z', 'lastTransitionTime': '2025-10-13T15:59:18Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:18Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-notifications-controller-7776574f76" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-redis', 'namespace': 'argocd', 'uid': 'b1ce3695-6abf-40aa-bf4c-c44987ad77be', 'resourceVersion': '30044', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'redis', 'app.kubernetes.io/name': 'argocd-redis', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-redis', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-redis"},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no","--requirepass $(REDIS_PASSWORD)"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}}],"image":"redis:7.2.7-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"initContainers":[{"command":["argocd","admin","redis-initial-password"],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"IfNotPresent","name":"secret-init","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}}}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"runAsUser":999,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"argocd-redis"}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:podAntiAffinity': {'.': {}, 'f:preferredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"redis"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"REDIS_PASSWORD"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:secretKeyRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":6379,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:dnsPolicy': {}, 'f:initContainers': {'.': {}, 'k:{"name":"secret-init"}': {'.': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}}}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {'.': {}, 'f:runAsNonRoot': {}, 'f:runAsUser': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:29Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-redis'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-redis'}}, 'spec': {'initContainers': [{'name': 'secret-init', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'command': ['argocd', 'admin', 'redis-initial-password'], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'containers': [{'name': 'redis', 'image': 'redis:7.2.7-alpine', 'args': ['--save', '', '--appendonly', 'no', '--requirepass $(REDIS_PASSWORD)'], 'ports': [{'containerPort': 6379, 'protocol': 'TCP'}], 'env': [{'name': 'REDIS_PASSWORD', 'valueFrom': {'secretKeyRef': {'name': 'argocd-redis', 'key': 'auth'}}}], 'resources': {}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-redis', 'serviceAccount': 'argocd-redis', 'securityContext': {'runAsUser': 999, 'runAsNonRoot': True, 'seccompProfile': {'type': 'RuntimeDefault'}}, 'affinity': {'podAntiAffinity': {'preferredDuringSchedulingIgnoredDuringExecution': [{'weight': 100, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-redis'}}, 'topologyKey': 'kubernetes.io/hostname'}}, {'weight': 5, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/part-of': 'argocd'}}, 'topologyKey': 'kubernetes.io/hostname'}}]}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:29Z', 'lastTransitionTime': '2025-10-13T15:59:29Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:29Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-redis-6dd5986579" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-repo-server', 'namespace': 'argocd', 'uid': '67bd4daf-8a8d-4264-8e62-efc717271b3d', 'resourceVersion': '30094', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'repo-server', 'app.kubernetes.io/name': 'argocd-repo-server', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-repo-server', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-repo-server"},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["/usr/local/bin/argocd-repo-server"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}},{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"timeout.reconciliation","name":"argocd-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"reposerver.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"reposerver.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"reposerver.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"reposerver.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"reposerver.metrics.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"key":"reposerver.disable.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.minversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.maxversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.ciphers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"reposerver.repo.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"key":"redis.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"key":"redis.compression","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"key":"redis.db","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"reposerver.default.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"otlp.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_INSECURE","valueFrom":{"configMapKeyRef":{"key":"otlp.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_HEADERS","valueFrom":{"configMapKeyRef":{"key":"otlp.headers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ATTRS","valueFrom":{"configMapKeyRef":{"key":"otlp.attrs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.max.combined.directory.manifests.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS","valueFrom":{"configMapKeyRef":{"key":"reposerver.plugin.tar.exclusions","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS","valueFrom":{"configMapKeyRef":{"key":"reposerver.plugin.use.manifest.generate.paths","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS","valueFrom":{"configMapKeyRef":{"key":"reposerver.allow.oob.symlinks","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.streamed.manifest.max.tar.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.streamed.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.helm.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.disable.helm.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"reposerver.revision.cache.lock.timeout","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"key":"reposerver.enable.git.submodule","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"reposerver.git.lsremote.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_REQUEST_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"reposerver.git.request.timeout","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GRPC_MAX_SIZE_MB","valueFrom":{"configMapKeyRef":{"key":"reposerver.grpc.max.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES","valueFrom":{"configMapKeyRef":{"key":"reposerver.include.hidden.directories","name":"argocd-cmd-params-cm","optional":true}}},{"name":"HELM_CACHE_HOME","value":"/helm-working-dir"},{"name":"HELM_CONFIG_HOME","value":"/helm-working-dir"},{"name":"HELM_DATA_HOME","value":"/helm-working-dir"}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/helm-working-dir","name":"helm-working-dir"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"}]}],"initContainers":[{"command":["/bin/cp","-n","/usr/local/bin/argocd","/var/run/argocd/argocd-cmp-server"],"image":"quay.io/argoproj/argocd:v3.0.6","name":"copyutil","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-repo-server","volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"emptyDir":{},"name":"helm-working-dir"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"emptyDir":{},"name":"var-files"},{"emptyDir":{},"name":"plugins"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:podAntiAffinity': {'.': {}, 'f:preferredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:automountServiceAccountToken': {}, 'f:containers': {'k:{"name":"argocd-repo-server"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_GIT_MODULES_ENABLED"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_GIT_REQUEST_TIMEOUT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_GRPC_MAX_SIZE_MB"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_RECONCILIATION_TIMEOUT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_LOGFORMAT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_LOGLEVEL"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_OTLP_ATTRS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_OTLP_HEADERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_OTLP_INSECURE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_CIPHERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_MAX_VERSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_MIN_VERSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"HELM_CACHE_HOME"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"HELM_CONFIG_HOME"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"HELM_DATA_HOME"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"REDISDB"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"REDIS_COMPRESSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"REDIS_PASSWORD"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:secretKeyRef': {}}}, 'k:{"name":"REDIS_SERVER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8081,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":8084,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/app/config/gpg/keys"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/gpg/source"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/reposerver/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/ssh"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/helm-working-dir"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/home/argocd/cmp-server/plugins"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:initContainers': {'.': {}, 'k:{"name":"copyutil"}': {'.': {}, 'f:command': {}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/var/run/argocd"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"argocd-repo-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"gpg-keyring"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"gpg-keys"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"helm-working-dir"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"plugins"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"ssh-known-hosts"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tls-certs"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tmp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"var-files"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:37Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-repo-server'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-repo-server'}}, 'spec': {'volumes': [{'name': 'ssh-known-hosts', 'configMap': {'name': 'argocd-ssh-known-hosts-cm', 'defaultMode': 420}}, {'name': 'tls-certs', 'configMap': {'name': 'argocd-tls-certs-cm', 'defaultMode': 420}}, {'name': 'gpg-keys', 'configMap': {'name': 'argocd-gpg-keys-cm', 'defaultMode': 420}}, {'name': 'gpg-keyring', 'emptyDir': {}}, {'name': 'tmp', 'emptyDir': {}}, {'name': 'helm-working-dir', 'emptyDir': {}}, {'name': 'argocd-repo-server-tls', 'secret': {'secretName': 'argocd-repo-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'tls.key', 'path': 'tls.key'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}, {'name': 'var-files', 'emptyDir': {}}, {'name': 'plugins', 'emptyDir': {}}], 'initContainers': [{'name': 'copyutil', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'command': ['/bin/cp', '-n', '/usr/local/bin/argocd', '/var/run/argocd/argocd-cmp-server'], 'resources': {}, 'volumeMounts': [{'name': 'var-files', 'mountPath': '/var/run/argocd'}], 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'containers': [{'name': 'argocd-repo-server', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'args': ['/usr/local/bin/argocd-repo-server'], 'ports': [{'containerPort': 8081, 'protocol': 'TCP'}, {'containerPort': 8084, 'protocol': 'TCP'}], 'env': [{'name': 'REDIS_PASSWORD', 'valueFrom': {'secretKeyRef': {'name': 'argocd-redis', 'key': 'auth'}}}, {'name': 'ARGOCD_RECONCILIATION_TIMEOUT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cm', 'key': 'timeout.reconciliation', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_LOGFORMAT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.log.format', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_LOGLEVEL', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.log.level', 'optional': True}}}, {'name': 'ARGOCD_LOG_FORMAT_TIMESTAMP', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'log.format.timestamp', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_PARALLELISM_LIMIT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.parallelism.limit', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_LISTEN_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.listen.address', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.metrics.listen.address', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_DISABLE_TLS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.disable.tls', 'optional': True}}}, {'name': 'ARGOCD_TLS_MIN_VERSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.tls.minversion', 'optional': True}}}, {'name': 'ARGOCD_TLS_MAX_VERSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.tls.maxversion', 'optional': True}}}, {'name': 'ARGOCD_TLS_CIPHERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.tls.ciphers', 'optional': True}}}, {'name': 'ARGOCD_REPO_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.repo.cache.expiration', 'optional': True}}}, {'name': 'REDIS_SERVER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.server', 'optional': True}}}, {'name': 'REDIS_COMPRESSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.compression', 'optional': True}}}, {'name': 'REDISDB', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.db', 'optional': True}}}, {'name': 'ARGOCD_DEFAULT_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.default.cache.expiration', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_OTLP_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.address', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_OTLP_INSECURE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.insecure', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_OTLP_HEADERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.headers', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_OTLP_ATTRS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.attrs', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.max.combined.directory.manifests.size', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.plugin.tar.exclusions', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.plugin.use.manifest.generate.paths', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.allow.oob.symlinks', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.streamed.manifest.max.tar.size', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.streamed.manifest.max.extracted.size', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.helm.manifest.max.extracted.size', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.disable.helm.manifest.max.extracted.size', 'optional': True}}}, {'name': 'ARGOCD_REVISION_CACHE_LOCK_TIMEOUT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.revision.cache.lock.timeout', 'optional': True}}}, {'name': 'ARGOCD_GIT_MODULES_ENABLED', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.enable.git.submodule', 'optional': True}}}, {'name': 'ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.git.lsremote.parallelism.limit', 'optional': True}}}, {'name': 'ARGOCD_GIT_REQUEST_TIMEOUT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.git.request.timeout', 'optional': True}}}, {'name': 'ARGOCD_GRPC_MAX_SIZE_MB', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.grpc.max.size', 'optional': True}}}, {'name': 'ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'reposerver.include.hidden.directories', 'optional': True}}}, {'name': 'HELM_CACHE_HOME', 'value': '/helm-working-dir'}, {'name': 'HELM_CONFIG_HOME', 'value': '/helm-working-dir'}, {'name': 'HELM_DATA_HOME', 'value': '/helm-working-dir'}], 'resources': {}, 'volumeMounts': [{'name': 'ssh-known-hosts', 'mountPath': '/app/config/ssh'}, {'name': 'tls-certs', 'mountPath': '/app/config/tls'}, {'name': 'gpg-keys', 'mountPath': '/app/config/gpg/source'}, {'name': 'gpg-keyring', 'mountPath': '/app/config/gpg/keys'}, {'name': 'argocd-repo-server-tls', 'mountPath': '/app/config/reposerver/tls'}, {'name': 'tmp', 'mountPath': '/tmp'}, {'name': 'helm-working-dir', 'mountPath': '/helm-working-dir'}, {'name': 'plugins', 'mountPath': '/home/argocd/cmp-server/plugins'}], 'livenessProbe': {'httpGet': {'path': '/healthz?full=true', 'port': 8084, 'scheme': 'HTTP'}, 'initialDelaySeconds': 30, 'timeoutSeconds': 5, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/healthz', 'port': 8084, 'scheme': 'HTTP'}, 'initialDelaySeconds': 5, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-repo-server', 'serviceAccount': 'argocd-repo-server', 'automountServiceAccountToken': False, 'securityContext': {}, 'affinity': {'podAntiAffinity': {'preferredDuringSchedulingIgnoredDuringExecution': [{'weight': 100, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-repo-server'}}, 'topologyKey': 'kubernetes.io/hostname'}}, {'weight': 5, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/part-of': 'argocd'}}, 'topologyKey': 'kubernetes.io/hostname'}}]}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:37Z', 'lastTransitionTime': '2025-10-13T15:59:37Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:37Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-repo-server-575bbf7949" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})
ok: [127.0.0.1] => (item={'metadata': {'name': 'argocd-server', 'namespace': 'argocd', 'uid': 'c56d2d45-7d84-4304-8e68-aa22ad0fdc21', 'resourceVersion': '30161', 'generation': 1, 'creationTimestamp': '2025-10-13T15:58:46Z', 'labels': {'app.kubernetes.io/component': 'server', 'app.kubernetes.io/name': 'argocd-server', 'app.kubernetes.io/part-of': 'argocd'}, 'annotations': {'config.k8s.io/owning-inventory': '76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|argocd|argocd-server', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"76ee22bfc39ec8e56df554c26468c8735113328e-1760371113861855998","internal.kpt.dev/upstream-identifier":"apps|Deployment|argocd|argocd-server"},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["/usr/local/bin/argocd-server"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}},{"name":"ARGOCD_SERVER_INSECURE","valueFrom":{"configMapKeyRef":{"key":"server.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_BASEHREF","valueFrom":{"configMapKeyRef":{"key":"server.basehref","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ROOTPATH","valueFrom":{"configMapKeyRef":{"key":"server.rootpath","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"server.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOG_LEVEL","valueFrom":{"configMapKeyRef":{"key":"server.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"key":"repo.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER","valueFrom":{"configMapKeyRef":{"key":"server.dex.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DISABLE_AUTH","valueFrom":{"configMapKeyRef":{"key":"server.disable.auth","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ENABLE_GZIP","valueFrom":{"configMapKeyRef":{"key":"server.enable.gzip","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS","valueFrom":{"configMapKeyRef":{"key":"server.x.frame.options","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY","valueFrom":{"configMapKeyRef":{"key":"server.content.security.policy","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"server.dex.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"server.dex.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"key":"server.tls.minversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"key":"server.tls.maxversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"key":"server.tls.ciphers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.connection.status.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.oidc.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.login.attempts.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_STATIC_ASSETS","valueFrom":{"configMapKeyRef":{"key":"server.staticassets","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.app.state.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"key":"redis.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"key":"redis.compression","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"key":"redis.db","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.default.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_MAX_COOKIE_NUMBER","valueFrom":{"configMapKeyRef":{"key":"server.http.cookie.maxnumber","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"server.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"server.metrics.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"otlp.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_INSECURE","valueFrom":{"configMapKeyRef":{"key":"otlp.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_HEADERS","valueFrom":{"configMapKeyRef":{"key":"otlp.headers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_ATTRS","valueFrom":{"configMapKeyRef":{"key":"otlp.attrs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"application.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION","valueFrom":{"configMapKeyRef":{"key":"server.enable.proxy.extension","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_MAX","valueFrom":{"configMapKeyRef":{"key":"server.k8sclient.retry.max","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF","valueFrom":{"configMapKeyRef":{"key":"server.k8sclient.retry.base.backoff","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_API_CONTENT_TYPES","valueFrom":{"configMapKeyRef":{"key":"server.api.content.types","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"server.webhook.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.new.git.file.globbing","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.scm.root.ca.path","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.allowed.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_HYDRATOR_ENABLED","valueFrom":{"configMapKeyRef":{"key":"hydrator.enabled","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SYNC_WITH_REPLACE_ALLOWED","valueFrom":{"configMapKeyRef":{"key":"server.sync.replace.allowed","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30,"timeoutSeconds":5},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/dex/tls","name":"argocd-dex-server-tls"},{"mountPath":"/home/argocd","name":"plugins-home"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/home/argocd/params","name":"argocd-cmd-params-cm"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"plugins-home"},{"emptyDir":{},"name":"tmp"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"name":"argocd-dex-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-dex-server-tls"}},{"configMap":{"items":[{"key":"server.profile.enabled","path":"profiler.enabled"}],"name":"argocd-cmd-params-cm","optional":true},"name":"argocd-cmd-params-cm"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:58:46Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/component': {}, 'f:app.kubernetes.io/name': {}, 'f:app.kubernetes.io/part-of': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:affinity': {'.': {}, 'f:podAntiAffinity': {'.': {}, 'f:preferredDuringSchedulingIgnoredDuringExecution': {}}}, 'f:containers': {'k:{"name":"argocd-server"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"ARGOCD_API_CONTENT_TYPES"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APPLICATION_NAMESPACES"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_HYDRATOR_ENABLED"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_K8SCLIENT_RETRY_MAX"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_MAX_COOKIE_NUMBER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_BASEHREF"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_DEX_SERVER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_DISABLE_AUTH"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_ENABLE_GZIP"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_INSECURE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_LISTEN_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_LOGFORMAT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_LOG_LEVEL"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_OTLP_ADDRESS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_OTLP_ATTRS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_OTLP_HEADERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_OTLP_INSECURE"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_REPO_SERVER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_ROOTPATH"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_STATIC_ASSETS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_SYNC_WITH_REPLACE_ALLOWED"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_CIPHERS"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_MAX_VERSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"ARGOCD_TLS_MIN_VERSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"REDISDB"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"REDIS_COMPRESSION"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}, 'k:{"name":"REDIS_PASSWORD"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:secretKeyRef': {}}}, 'k:{"name":"REDIS_SERVER"}': {'.': {}, 'f:name': {}, 'f:valueFrom': {'.': {}, 'f:configMapKeyRef': {}}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:livenessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":8080,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}, 'k:{"containerPort":8083,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:initialDelaySeconds': {}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:securityContext': {'.': {}, 'f:allowPrivilegeEscalation': {}, 'f:capabilities': {'.': {}, 'f:drop': {}}, 'f:readOnlyRootFilesystem': {}, 'f:runAsNonRoot': {}, 'f:seccompProfile': {'.': {}, 'f:type': {}}}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/app/config/dex/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/server/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/ssh"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/app/config/tls"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/home/argocd"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/home/argocd/params"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}, 'k:{"mountPath":"/tmp"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:nodeSelector': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"argocd-cmd-params-cm"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:name': {}, 'f:optional': {}}, 'f:name': {}}, 'k:{"name":"argocd-dex-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"argocd-repo-server-tls"}': {'.': {}, 'f:name': {}, 'f:secret': {'.': {}, 'f:defaultMode': {}, 'f:items': {}, 'f:optional': {}, 'f:secretName': {}}}, 'k:{"name":"plugins-home"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}, 'k:{"name":"ssh-known-hosts"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tls-certs"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}, 'k:{"name":"tmp"}': {'.': {}, 'f:emptyDir': {}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T15:59:47Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-server'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app.kubernetes.io/name': 'argocd-server'}}, 'spec': {'volumes': [{'name': 'plugins-home', 'emptyDir': {}}, {'name': 'tmp', 'emptyDir': {}}, {'name': 'ssh-known-hosts', 'configMap': {'name': 'argocd-ssh-known-hosts-cm', 'defaultMode': 420}}, {'name': 'tls-certs', 'configMap': {'name': 'argocd-tls-certs-cm', 'defaultMode': 420}}, {'name': 'argocd-repo-server-tls', 'secret': {'secretName': 'argocd-repo-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'tls.key', 'path': 'tls.key'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}, {'name': 'argocd-dex-server-tls', 'secret': {'secretName': 'argocd-dex-server-tls', 'items': [{'key': 'tls.crt', 'path': 'tls.crt'}, {'key': 'ca.crt', 'path': 'ca.crt'}], 'defaultMode': 420, 'optional': True}}, {'name': 'argocd-cmd-params-cm', 'configMap': {'name': 'argocd-cmd-params-cm', 'items': [{'key': 'server.profile.enabled', 'path': 'profiler.enabled'}], 'defaultMode': 420, 'optional': True}}], 'containers': [{'name': 'argocd-server', 'image': 'quay.io/argoproj/argocd:v3.0.6', 'args': ['/usr/local/bin/argocd-server'], 'ports': [{'containerPort': 8080, 'protocol': 'TCP'}, {'containerPort': 8083, 'protocol': 'TCP'}], 'env': [{'name': 'REDIS_PASSWORD', 'valueFrom': {'secretKeyRef': {'name': 'argocd-redis', 'key': 'auth'}}}, {'name': 'ARGOCD_SERVER_INSECURE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.insecure', 'optional': True}}}, {'name': 'ARGOCD_SERVER_BASEHREF', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.basehref', 'optional': True}}}, {'name': 'ARGOCD_SERVER_ROOTPATH', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.rootpath', 'optional': True}}}, {'name': 'ARGOCD_SERVER_LOGFORMAT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.log.format', 'optional': True}}}, {'name': 'ARGOCD_SERVER_LOG_LEVEL', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.log.level', 'optional': True}}}, {'name': 'ARGOCD_SERVER_REPO_SERVER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'repo.server', 'optional': True}}}, {'name': 'ARGOCD_SERVER_DEX_SERVER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.dex.server', 'optional': True}}}, {'name': 'ARGOCD_SERVER_DISABLE_AUTH', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.disable.auth', 'optional': True}}}, {'name': 'ARGOCD_SERVER_ENABLE_GZIP', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.enable.gzip', 'optional': True}}}, {'name': 'ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.repo.server.timeout.seconds', 'optional': True}}}, {'name': 'ARGOCD_SERVER_X_FRAME_OPTIONS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.x.frame.options', 'optional': True}}}, {'name': 'ARGOCD_SERVER_CONTENT_SECURITY_POLICY', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.content.security.policy', 'optional': True}}}, {'name': 'ARGOCD_SERVER_REPO_SERVER_PLAINTEXT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.repo.server.plaintext', 'optional': True}}}, {'name': 'ARGOCD_SERVER_REPO_SERVER_STRICT_TLS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.repo.server.strict.tls', 'optional': True}}}, {'name': 'ARGOCD_SERVER_DEX_SERVER_PLAINTEXT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.dex.server.plaintext', 'optional': True}}}, {'name': 'ARGOCD_SERVER_DEX_SERVER_STRICT_TLS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.dex.server.strict.tls', 'optional': True}}}, {'name': 'ARGOCD_TLS_MIN_VERSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.tls.minversion', 'optional': True}}}, {'name': 'ARGOCD_TLS_MAX_VERSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.tls.maxversion', 'optional': True}}}, {'name': 'ARGOCD_TLS_CIPHERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.tls.ciphers', 'optional': True}}}, {'name': 'ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.connection.status.cache.expiration', 'optional': True}}}, {'name': 'ARGOCD_SERVER_OIDC_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.oidc.cache.expiration', 'optional': True}}}, {'name': 'ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.login.attempts.expiration', 'optional': True}}}, {'name': 'ARGOCD_SERVER_STATIC_ASSETS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.staticassets', 'optional': True}}}, {'name': 'ARGOCD_APP_STATE_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.app.state.cache.expiration', 'optional': True}}}, {'name': 'REDIS_SERVER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.server', 'optional': True}}}, {'name': 'REDIS_COMPRESSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.compression', 'optional': True}}}, {'name': 'REDISDB', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'redis.db', 'optional': True}}}, {'name': 'ARGOCD_DEFAULT_CACHE_EXPIRATION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.default.cache.expiration', 'optional': True}}}, {'name': 'ARGOCD_MAX_COOKIE_NUMBER', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.http.cookie.maxnumber', 'optional': True}}}, {'name': 'ARGOCD_SERVER_LISTEN_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.listen.address', 'optional': True}}}, {'name': 'ARGOCD_SERVER_METRICS_LISTEN_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.metrics.listen.address', 'optional': True}}}, {'name': 'ARGOCD_SERVER_OTLP_ADDRESS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.address', 'optional': True}}}, {'name': 'ARGOCD_SERVER_OTLP_INSECURE', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.insecure', 'optional': True}}}, {'name': 'ARGOCD_SERVER_OTLP_HEADERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.headers', 'optional': True}}}, {'name': 'ARGOCD_SERVER_OTLP_ATTRS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'otlp.attrs', 'optional': True}}}, {'name': 'ARGOCD_APPLICATION_NAMESPACES', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'application.namespaces', 'optional': True}}}, {'name': 'ARGOCD_SERVER_ENABLE_PROXY_EXTENSION', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.enable.proxy.extension', 'optional': True}}}, {'name': 'ARGOCD_K8SCLIENT_RETRY_MAX', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.k8sclient.retry.max', 'optional': True}}}, {'name': 'ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.k8sclient.retry.base.backoff', 'optional': True}}}, {'name': 'ARGOCD_API_CONTENT_TYPES', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.api.content.types', 'optional': True}}}, {'name': 'ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.webhook.parallelism.limit', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.new.git.file.globbing', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.scm.root.ca.path', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.allowed.scm.providers', 'optional': True}}}, {'name': 'ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'applicationsetcontroller.enable.scm.providers', 'optional': True}}}, {'name': 'ARGOCD_HYDRATOR_ENABLED', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'hydrator.enabled', 'optional': True}}}, {'name': 'ARGOCD_SYNC_WITH_REPLACE_ALLOWED', 'valueFrom': {'configMapKeyRef': {'name': 'argocd-cmd-params-cm', 'key': 'server.sync.replace.allowed', 'optional': True}}}], 'resources': {}, 'volumeMounts': [{'name': 'ssh-known-hosts', 'mountPath': '/app/config/ssh'}, {'name': 'tls-certs', 'mountPath': '/app/config/tls'}, {'name': 'argocd-repo-server-tls', 'mountPath': '/app/config/server/tls'}, {'name': 'argocd-dex-server-tls', 'mountPath': '/app/config/dex/tls'}, {'name': 'plugins-home', 'mountPath': '/home/argocd'}, {'name': 'tmp', 'mountPath': '/tmp'}, {'name': 'argocd-cmd-params-cm', 'mountPath': '/home/argocd/params'}], 'livenessProbe': {'httpGet': {'path': '/healthz?full=true', 'port': 8080, 'scheme': 'HTTP'}, 'initialDelaySeconds': 3, 'timeoutSeconds': 5, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'readinessProbe': {'httpGet': {'path': '/healthz', 'port': 8080, 'scheme': 'HTTP'}, 'initialDelaySeconds': 3, 'timeoutSeconds': 1, 'periodSeconds': 30, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'Always', 'securityContext': {'capabilities': {'drop': ['ALL']}, 'runAsNonRoot': True, 'readOnlyRootFilesystem': True, 'allowPrivilegeEscalation': False, 'seccompProfile': {'type': 'RuntimeDefault'}}}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 30, 'dnsPolicy': 'ClusterFirst', 'nodeSelector': {'kubernetes.io/os': 'linux'}, 'serviceAccountName': 'argocd-server', 'serviceAccount': 'argocd-server', 'securityContext': {}, 'affinity': {'podAntiAffinity': {'preferredDuringSchedulingIgnoredDuringExecution': [{'weight': 100, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/name': 'argocd-server'}}, 'topologyKey': 'kubernetes.io/hostname'}}, {'weight': 5, 'podAffinityTerm': {'labelSelector': {'matchLabels': {'app.kubernetes.io/part-of': 'argocd'}}, 'topologyKey': 'kubernetes.io/hostname'}}]}}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:46Z', 'lastTransitionTime': '2025-10-13T15:59:46Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T15:59:46Z', 'lastTransitionTime': '2025-10-13T15:58:46Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "argocd-server-6769964c47" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Create gitea user password in nephio-system namespace] *********
Monday 13 October 2025  16:22:46 +0000 (0:00:06.004)       0:03:40.498 ******** 
Monday 13 October 2025  16:22:46 +0000 (0:00:06.004)       0:03:40.497 ******** 
ok: [127.0.0.1]

TASK [Deploy Nephio webui] *****************************************************
Monday 13 October 2025  16:22:47 +0000 (0:00:01.082)       0:03:41.581 ******** 
Monday 13 October 2025  16:22:47 +0000 (0:00:01.082)       0:03:41.580 ******** 
included: kpt for 127.0.0.1

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:22:47 +0000 (0:00:00.160)       0:03:41.741 ******** 
Monday 13 October 2025  16:22:47 +0000 (0:00:00.160)       0:03:41.741 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/kpt-pkg/nephio/optional/webui] ***
Monday 13 October 2025  16:22:47 +0000 (0:00:00.059)       0:03:41.801 ******** 
Monday 13 October 2025  16:22:47 +0000 (0:00:00.059)       0:03:41.800 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/webui] ******************************
Monday 13 October 2025  16:22:47 +0000 (0:00:00.324)       0:03:42.126 ******** 
Monday 13 October 2025  16:22:47 +0000 (0:00:00.325)       0:03:42.125 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/webui] *********
Monday 13 October 2025  16:22:48 +0000 (0:00:00.347)       0:03:42.473 ******** 
Monday 13 October 2025  16:22:48 +0000 (0:00:00.347)       0:03:42.473 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/webui] *******
Monday 13 October 2025  16:22:48 +0000 (0:00:00.368)       0:03:42.842 ******** 
Monday 13 October 2025  16:22:48 +0000 (0:00:00.368)       0:03:42.841 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"webui\"",
        "├── [0-namespace.yaml]  Namespace nephio-webui",
        "├── [Kptfile]  Kptfile webui",
        "├── [_gen_configmap_nephio-webui-config.yaml]  ConfigMap nephio-webui/nephio-webui-config",
        "├── [cluster-role-binding.yaml]  ClusterRoleBinding nephio-webui",
        "├── [deployment.yaml]  Deployment nephio-webui/nephio-webui",
        "├── [gen-configmap.yaml]  GenConfigMap gen-app-config",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [resourcegroup.yaml]  ResourceGroup nephio-webui/inventory-75660745",
        "├── [service-account.yaml]  ServiceAccount nephio-webui/nephio-webui-sa",
        "├── [service.yaml]  Service nephio-webui/nephio-webui",
        "└── [set-auth.yaml]  StarlarkRun set-auth"
    ]
}

TASK [kpt : Render package: nephio/optional/webui] *****************************
Monday 13 October 2025  16:22:48 +0000 (0:00:00.076)       0:03:42.918 ******** 
Monday 13 October 2025  16:22:48 +0000 (0:00:00.076)       0:03:42.917 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:22:53 +0000 (0:00:05.085)       0:03:48.004 ******** 
Monday 13 October 2025  16:22:53 +0000 (0:00:05.085)       0:03:48.003 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/webui] ***
Monday 13 October 2025  16:22:54 +0000 (0:00:00.484)       0:03:48.488 ******** 
Monday 13 October 2025  16:22:54 +0000 (0:00:00.484)       0:03:48.487 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/webui] ******************
Monday 13 October 2025  16:22:55 +0000 (0:00:01.654)       0:03:50.143 ******** 
Monday 13 October 2025  16:22:55 +0000 (0:00:01.654)       0:03:50.142 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "diff /tmp/kpt-2596329461/local-main/cluster-role-binding.yaml /tmp/kpt-2596329461/target-main/cluster-role-binding.yaml",
        "6c6",
        "<     internal.kpt.dev/upstream-identifier: rbac.authorization.k8s.io|ClusterRoleBinding|default|nephio-webui",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'rbac.authorization.k8s.io|ClusterRoleBinding|default|nephio-webui'",
        "diff /tmp/kpt-2596329461/local-main/deployment.yaml /tmp/kpt-2596329461/target-main/deployment.yaml",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: apps|Deployment|nephio-webui|nephio-webui",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'apps|Deployment|nephio-webui|nephio-webui'",
        "diff /tmp/kpt-2596329461/local-main/gen-configmap.yaml /tmp/kpt-2596329461/target-main/gen-configmap.yaml",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: fn.kpt.dev|GenConfigMap|default|gen-app-config",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'fn.kpt.dev|GenConfigMap|default|gen-app-config'",
        "Only in /tmp/kpt-2596329461/local-main: resourcegroup.yaml",
        "diff /tmp/kpt-2596329461/local-main/set-auth.yaml /tmp/kpt-2596329461/target-main/set-auth.yaml",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: fn.kpt.dev|StarlarkRun|default|set-auth",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'fn.kpt.dev|StarlarkRun|default|set-auth'"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:22:55 +0000 (0:00:00.087)       0:03:50.231 ******** 
Monday 13 October 2025  16:22:55 +0000 (0:00:00.087)       0:03:50.230 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/webui] *******************************
Monday 13 October 2025  16:22:56 +0000 (0:00:00.360)       0:03:50.591 ******** 
Monday 13 October 2025  16:22:56 +0000 (0:00:00.360)       0:03:50.591 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/webui] ************
Monday 13 October 2025  16:22:56 +0000 (0:00:00.054)       0:03:50.646 ******** 
Monday 13 October 2025  16:22:56 +0000 (0:00:00.054)       0:03:50.645 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": false,
        "false_condition": "not kpt_resourcegroup.stat.exists",
        "skip_reason": "Conditional result was False",
        "skipped": true
    }
}

TASK [kpt : Apply package: nephio/optional/webui] ******************************
Monday 13 October 2025  16:22:56 +0000 (0:00:00.085)       0:03:50.731 ******** 
Monday 13 October 2025  16:22:56 +0000 (0:00:00.085)       0:03:50.731 ******** 
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC POLL on 127.0.0.1: jid=j489259966459.215463 started=1 finished=0
ASYNC OK on 127.0.0.1: jid=j489259966459.215463
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:28:15 +0000 (0:05:18.952)       0:09:09.684 ******** 
Monday 13 October 2025  16:28:15 +0000 (0:05:18.952)       0:09:09.684 ******** 
skipping: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:28:15 +0000 (0:00:00.049)       0:09:09.734 ******** 
Monday 13 October 2025  16:28:15 +0000 (0:00:00.049)       0:09:09.733 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": []
}

TASK [install : Wait for Nephio webui deployment] ******************************
Monday 13 October 2025  16:28:15 +0000 (0:00:00.094)       0:09:09.828 ******** 
Monday 13 October 2025  16:28:15 +0000 (0:00:00.094)       0:09:09.827 ******** 
included: /home/rehanfazal/test-infra/e2e/provision/playbooks/roles/install/tasks/wait_deployments.yml for 127.0.0.1

TASK [install : Get deployment resources in namespace nephio-webui] ************
Monday 13 October 2025  16:28:15 +0000 (0:00:00.117)       0:09:09.946 ******** 
Monday 13 October 2025  16:28:15 +0000 (0:00:00.117)       0:09:09.945 ******** 
ok: [127.0.0.1]

TASK [install : Print deployment resources in namespace nephio-webui] **********
Monday 13 October 2025  16:28:16 +0000 (0:00:01.040)       0:09:10.986 ******** 
Monday 13 October 2025  16:28:16 +0000 (0:00:01.040)       0:09:10.985 ******** 
ok: [127.0.0.1] => {
    "deployment_list.resources": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "config.k8s.io/owning-inventory": "6654158b3e406b504d0e97dfb241c4a396105d85-1760371230885509348",
                    "deployment.kubernetes.io/revision": "1",
                    "internal.kpt.dev/upstream-identifier": "apps|Deployment|nephio-webui|nephio-webui",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"config.k8s.io/owning-inventory\":\"6654158b3e406b504d0e97dfb241c4a396105d85-1760371230885509348\",\"internal.kpt.dev/upstream-identifier\":\"apps|Deployment|nephio-webui|nephio-webui\"},\"name\":\"nephio-webui\",\"namespace\":\"nephio-webui\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"nephio-webui\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nephio-webui\"}},\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/etc/config/app-config.nephio.yaml\"],\"env\":[{\"name\":\"AUTH_PROVIDER\",\"value\":\"current-context\"},{\"name\":\"AUTH_OIDC_TOKEN_PROVIDER\",\"value\":\"okta\"}],\"image\":\"nephio/kpt-backstage-plugins:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"main\",\"ports\":[{\"containerPort\":7007,\"name\":\"http\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":7007}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"config-volume\"}]}],\"serviceAccountName\":\"nephio-webui-sa\",\"terminationGracePeriodSeconds\":10,\"volumes\":[{\"configMap\":{\"name\":\"nephio-webui-config\"},\"name\":\"config-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-13T16:00:31Z",
                "generation": 1,
                "managedFields": [
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config.k8s.io/owning-inventory": {},
                                    "f:internal.kpt.dev/upstream-identifier": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"main\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"AUTH_OIDC_TOKEN_PROVIDER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AUTH_PROVIDER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":7007,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/config\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kubectl",
                        "operation": "Update",
                        "time": "2025-10-13T16:00:31Z"
                    },
                    {
                        "apiVersion": "apps/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2025-10-13T16:28:12Z"
                    }
                ],
                "name": "nephio-webui",
                "namespace": "nephio-webui",
                "resourceVersion": "41227",
                "uid": "7a523f94-0e72-4f69-9995-010d708a8f23"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nephio-webui"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nephio-webui"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config",
                                    "/etc/config/app-config.nephio.yaml"
                                ],
                                "env": [
                                    {
                                        "name": "AUTH_PROVIDER",
                                        "value": "current-context"
                                    },
                                    {
                                        "name": "AUTH_OIDC_TOKEN_PROVIDER",
                                        "value": "okta"
                                    }
                                ],
                                "image": "nephio/kpt-backstage-plugins:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "main",
                                "ports": [
                                    {
                                        "containerPort": 7007,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 7007,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/config",
                                        "name": "config-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nephio-webui-sa",
                        "serviceAccountName": "nephio-webui-sa",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "nephio-webui-config"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-13T16:28:12Z",
                        "lastUpdateTime": "2025-10-13T16:28:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-13T16:28:12Z",
                        "lastUpdateTime": "2025-10-13T16:28:12Z",
                        "message": "ReplicaSet \"nephio-webui-785d58fdcb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ]
}

TASK [install : Wait for deployments in namespace nephio-webui] ****************
Monday 13 October 2025  16:28:16 +0000 (0:00:00.103)       0:09:11.089 ******** 
Monday 13 October 2025  16:28:16 +0000 (0:00:00.103)       0:09:11.088 ******** 
ok: [127.0.0.1] => (item={'metadata': {'name': 'nephio-webui', 'namespace': 'nephio-webui', 'uid': '7a523f94-0e72-4f69-9995-010d708a8f23', 'resourceVersion': '41227', 'generation': 1, 'creationTimestamp': '2025-10-13T16:00:31Z', 'annotations': {'config.k8s.io/owning-inventory': '6654158b3e406b504d0e97dfb241c4a396105d85-1760371230885509348', 'deployment.kubernetes.io/revision': '1', 'internal.kpt.dev/upstream-identifier': 'apps|Deployment|nephio-webui|nephio-webui', 'kubectl.kubernetes.io/last-applied-configuration': '{"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"config.k8s.io/owning-inventory":"6654158b3e406b504d0e97dfb241c4a396105d85-1760371230885509348","internal.kpt.dev/upstream-identifier":"apps|Deployment|nephio-webui|nephio-webui"},"name":"nephio-webui","namespace":"nephio-webui"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"nephio-webui"}},"template":{"metadata":{"labels":{"app":"nephio-webui"}},"spec":{"containers":[{"args":["--config","/etc/config/app-config.nephio.yaml"],"env":[{"name":"AUTH_PROVIDER","value":"current-context"},{"name":"AUTH_OIDC_TOKEN_PROVIDER","value":"okta"}],"image":"nephio/kpt-backstage-plugins:latest","imagePullPolicy":"IfNotPresent","name":"main","ports":[{"containerPort":7007,"name":"http"}],"readinessProbe":{"httpGet":{"path":"/","port":7007}},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"}]}],"serviceAccountName":"nephio-webui-sa","terminationGracePeriodSeconds":10,"volumes":[{"configMap":{"name":"nephio-webui-config"},"name":"config-volume"}]}}}}\n'}, 'managedFields': [{'manager': 'kubectl', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T16:00:31Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'.': {}, 'f:config.k8s.io/owning-inventory': {}, 'f:internal.kpt.dev/upstream-identifier': {}, 'f:kubectl.kubernetes.io/last-applied-configuration': {}}}, 'f:spec': {'f:progressDeadlineSeconds': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:strategy': {'f:rollingUpdate': {'.': {}, 'f:maxSurge': {}, 'f:maxUnavailable': {}}, 'f:type': {}}, 'f:template': {'f:metadata': {'f:labels': {'.': {}, 'f:app': {}}}, 'f:spec': {'f:containers': {'k:{"name":"main"}': {'.': {}, 'f:args': {}, 'f:env': {'.': {}, 'k:{"name":"AUTH_OIDC_TOKEN_PROVIDER"}': {'.': {}, 'f:name': {}, 'f:value': {}}, 'k:{"name":"AUTH_PROVIDER"}': {'.': {}, 'f:name': {}, 'f:value': {}}}, 'f:image': {}, 'f:imagePullPolicy': {}, 'f:name': {}, 'f:ports': {'.': {}, 'k:{"containerPort":7007,"protocol":"TCP"}': {'.': {}, 'f:containerPort': {}, 'f:name': {}, 'f:protocol': {}}}, 'f:readinessProbe': {'.': {}, 'f:failureThreshold': {}, 'f:httpGet': {'.': {}, 'f:path': {}, 'f:port': {}, 'f:scheme': {}}, 'f:periodSeconds': {}, 'f:successThreshold': {}, 'f:timeoutSeconds': {}}, 'f:resources': {}, 'f:terminationMessagePath': {}, 'f:terminationMessagePolicy': {}, 'f:volumeMounts': {'.': {}, 'k:{"mountPath":"/etc/config"}': {'.': {}, 'f:mountPath': {}, 'f:name': {}}}}}, 'f:dnsPolicy': {}, 'f:restartPolicy': {}, 'f:schedulerName': {}, 'f:securityContext': {}, 'f:serviceAccount': {}, 'f:serviceAccountName': {}, 'f:terminationGracePeriodSeconds': {}, 'f:volumes': {'.': {}, 'k:{"name":"config-volume"}': {'.': {}, 'f:configMap': {'.': {}, 'f:defaultMode': {}, 'f:name': {}}, 'f:name': {}}}}}}}}, {'manager': 'kube-controller-manager', 'operation': 'Update', 'apiVersion': 'apps/v1', 'time': '2025-10-13T16:28:12Z', 'fieldsType': 'FieldsV1', 'fieldsV1': {'f:metadata': {'f:annotations': {'f:deployment.kubernetes.io/revision': {}}}, 'f:status': {'f:availableReplicas': {}, 'f:conditions': {'.': {}, 'k:{"type":"Available"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}, 'k:{"type":"Progressing"}': {'.': {}, 'f:lastTransitionTime': {}, 'f:lastUpdateTime': {}, 'f:message': {}, 'f:reason': {}, 'f:status': {}, 'f:type': {}}}, 'f:observedGeneration': {}, 'f:readyReplicas': {}, 'f:replicas': {}, 'f:updatedReplicas': {}}}, 'subresource': 'status'}]}, 'spec': {'replicas': 1, 'selector': {'matchLabels': {'app': 'nephio-webui'}}, 'template': {'metadata': {'creationTimestamp': None, 'labels': {'app': 'nephio-webui'}}, 'spec': {'volumes': [{'name': 'config-volume', 'configMap': {'name': 'nephio-webui-config', 'defaultMode': 420}}], 'containers': [{'name': 'main', 'image': 'nephio/kpt-backstage-plugins:latest', 'args': ['--config', '/etc/config/app-config.nephio.yaml'], 'ports': [{'name': 'http', 'containerPort': 7007, 'protocol': 'TCP'}], 'env': [{'name': 'AUTH_PROVIDER', 'value': 'current-context'}, {'name': 'AUTH_OIDC_TOKEN_PROVIDER', 'value': 'okta'}], 'resources': {}, 'volumeMounts': [{'name': 'config-volume', 'mountPath': '/etc/config'}], 'readinessProbe': {'httpGet': {'path': '/', 'port': 7007, 'scheme': 'HTTP'}, 'timeoutSeconds': 1, 'periodSeconds': 10, 'successThreshold': 1, 'failureThreshold': 3}, 'terminationMessagePath': '/dev/termination-log', 'terminationMessagePolicy': 'File', 'imagePullPolicy': 'IfNotPresent'}], 'restartPolicy': 'Always', 'terminationGracePeriodSeconds': 10, 'dnsPolicy': 'ClusterFirst', 'serviceAccountName': 'nephio-webui-sa', 'serviceAccount': 'nephio-webui-sa', 'securityContext': {}, 'schedulerName': 'default-scheduler'}}, 'strategy': {'type': 'RollingUpdate', 'rollingUpdate': {'maxUnavailable': '25%', 'maxSurge': '25%'}}, 'revisionHistoryLimit': 10, 'progressDeadlineSeconds': 600}, 'status': {'observedGeneration': 1, 'replicas': 1, 'updatedReplicas': 1, 'readyReplicas': 1, 'availableReplicas': 1, 'conditions': [{'type': 'Available', 'status': 'True', 'lastUpdateTime': '2025-10-13T16:28:12Z', 'lastTransitionTime': '2025-10-13T16:28:12Z', 'reason': 'MinimumReplicasAvailable', 'message': 'Deployment has minimum availability.'}, {'type': 'Progressing', 'status': 'True', 'lastUpdateTime': '2025-10-13T16:28:12Z', 'lastTransitionTime': '2025-10-13T16:28:12Z', 'reason': 'NewReplicaSetAvailable', 'message': 'ReplicaSet "nephio-webui-785d58fdcb" has successfully progressed.'}]}, 'apiVersion': 'apps/v1', 'kind': 'Deployment'})

TASK [install : Create stock repositories] *************************************
Monday 13 October 2025  16:28:17 +0000 (0:00:00.923)       0:09:12.013 ******** 
Monday 13 October 2025  16:28:17 +0000 (0:00:00.924)       0:09:12.012 ******** 
changed: [127.0.0.1] => (item={'name': 'catalog-distros-sandbox', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/distros/sandbox', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-workloads-free5gc', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/workloads/free5gc', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-infra-capi', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/infra/capi', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-nephio-core', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/nephio/core', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-nephio-optional', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/nephio/optional', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'oai-core-packages', 'repo': 'https://github.com/OPENAIRINTERFACE/oai-packages.git', 'directory': '/', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-workloads-oai-ran', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/workloads/oai', 'branch': 'main'})
changed: [127.0.0.1] => (item={'name': 'catalog-workloads-tools', 'repo': 'https://github.com/nephio-project/catalog.git', 'directory': '/workloads/tools', 'branch': 'main'})

TASK [install : Wait for stock repositories] ***********************************
Monday 13 October 2025  16:28:25 +0000 (0:00:07.521)       0:09:19.534 ******** 
Monday 13 October 2025  16:28:25 +0000 (0:00:07.520)       0:09:19.533 ******** 
ok: [127.0.0.1] => (item=catalog-infra-capi)
ok: [127.0.0.1] => (item=catalog-nephio-core)
ok: [127.0.0.1] => (item=catalog-nephio-optional)
ok: [127.0.0.1] => (item=catalog-workloads-free5gc)
changed: [127.0.0.1] => (item=catalog-workloads-oai-ran)
ok: [127.0.0.1] => (item=oai-core-packages)

TASK [Deploy repositories] *****************************************************
Monday 13 October 2025  16:28:36 +0000 (0:00:10.951)       0:09:30.486 ******** 
Monday 13 October 2025  16:28:36 +0000 (0:00:10.951)       0:09:30.485 ******** 
included: kpt for 127.0.0.1 => (item={'pkg': 'distros/sandbox/repository', 'dest': '/tmp/repository/mgmt'})
included: kpt for 127.0.0.1 => (item={'pkg': 'nephio/optional/rootsync', 'dest': '/tmp/rootsync/mgmt'})
included: kpt for 127.0.0.1 => (item={'pkg': 'distros/sandbox/repository', 'dest': '/tmp/repository/mgmt-staging'})

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:28:36 +0000 (0:00:00.131)       0:09:30.618 ******** 
Monday 13 October 2025  16:28:36 +0000 (0:00:00.131)       0:09:30.617 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/repository/mgmt] ***
Monday 13 October 2025  16:28:36 +0000 (0:00:00.072)       0:09:30.690 ******** 
Monday 13 October 2025  16:28:36 +0000 (0:00:00.072)       0:09:30.689 ******** 
changed: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/repository] *************************
Monday 13 October 2025  16:28:36 +0000 (0:00:00.273)       0:09:30.964 ******** 
Monday 13 October 2025  16:28:36 +0000 (0:00:00.273)       0:09:30.963 ******** 
changed: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/repository] ****
Monday 13 October 2025  16:28:37 +0000 (0:00:01.079)       0:09:32.044 ******** 
Monday 13 October 2025  16:28:37 +0000 (0:00:01.079)       0:09:32.043 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/repository] ***
Monday 13 October 2025  16:28:38 +0000 (0:00:00.375)       0:09:32.419 ******** 
Monday 13 October 2025  16:28:38 +0000 (0:00:00.375)       0:09:32.419 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"mgmt\"",
        "├── [Kptfile]  Kptfile mgmt",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [repo-gitea.yaml]  Repository default/example-cluster-name",
        "├── [repo-porch.yaml]  Repository default/example-cluster-name",
        "├── [set-values.yaml]  StarlarkRun generate-values",
        "├── [token-configsync.yaml]  Token default/example-site-name-access-token-configsync",
        "├── [token-porch.yaml]  Token default/example-site-name-access-token-porch",
        "└── [workload-cluster.yaml]  WorkloadCluster workload-cluster"
    ]
}

TASK [kpt : Render package: distros/sandbox/repository] ************************
Monday 13 October 2025  16:28:38 +0000 (0:00:00.069)       0:09:32.489 ******** 
Monday 13 October 2025  16:28:38 +0000 (0:00:00.069)       0:09:32.488 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:28:41 +0000 (0:00:03.381)       0:09:35.871 ******** 
Monday 13 October 2025  16:28:41 +0000 (0:00:03.381)       0:09:35.870 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/repository] ***
Monday 13 October 2025  16:28:41 +0000 (0:00:00.352)       0:09:36.224 ******** 
Monday 13 October 2025  16:28:41 +0000 (0:00:00.352)       0:09:36.223 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/repository] *************
Monday 13 October 2025  16:28:43 +0000 (0:00:01.538)       0:09:37.763 ******** 
Monday 13 October 2025  16:28:43 +0000 (0:00:01.538)       0:09:37.762 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "diff /tmp/kpt-3331157712/local-main/package-context.yaml /tmp/kpt-3331157712/target-main/package-context.yaml",
        "9c9,10",
        "<   name: mgmt",
        "---",
        ">   name: example-repo",
        ">   clusterName: example-cluster-name",
        "diff /tmp/kpt-3331157712/local-main/repo-gitea.yaml /tmp/kpt-3331157712/target-main/repo-gitea.yaml",
        "4c4",
        "<   name: mgmt",
        "---",
        ">   name: example-cluster-name",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Repository|default|example-cluster-name",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Repository|default|example-cluster-name'",
        "9c9",
        "<   description: mgmt repository",
        "---",
        ">   description: example-cluster-name repository",
        "diff /tmp/kpt-3331157712/local-main/repo-porch.yaml /tmp/kpt-3331157712/target-main/repo-porch.yaml",
        "4c4",
        "<   name: mgmt",
        "---",
        ">   name: example-cluster-name",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: config.porch.kpt.dev|Repository|default|example-cluster-name",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'config.porch.kpt.dev|Repository|default|example-cluster-name'",
        "14c14",
        "<     repo: http://172.18.0.200:3000/nephio/mgmt.git",
        "---",
        ">     repo: http://172.18.0.200:3000/nephio/example-cluster-name.git",
        "16c16",
        "<       name: mgmt-access-token-porch",
        "---",
        ">       name: example-cluster-name-access-token-porch",
        "diff /tmp/kpt-3331157712/local-main/token-configsync.yaml /tmp/kpt-3331157712/target-main/token-configsync.yaml",
        "4,5c4,5",
        "<   name: mgmt-access-token-configsync",
        "<   namespace: config-management-system",
        "---",
        ">   name: example-site-name-access-token-configsync",
        ">   namespace: default",
        "10c10",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Token|default|example-site-name-access-token-configsync",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Token|default|example-site-name-access-token-configsync'",
        "diff /tmp/kpt-3331157712/local-main/token-porch.yaml /tmp/kpt-3331157712/target-main/token-porch.yaml",
        "4c4",
        "<   name: mgmt-access-token-porch",
        "---",
        ">   name: example-site-name-access-token-porch",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Token|default|example-site-name-access-token-porch",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Token|default|example-site-name-access-token-porch'",
        "diff /tmp/kpt-3331157712/local-main/workload-cluster.yaml /tmp/kpt-3331157712/target-main/workload-cluster.yaml",
        "8c8",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|WorkloadCluster|default|workload-cluster",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|WorkloadCluster|default|workload-cluster'"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:28:43 +0000 (0:00:00.082)       0:09:37.846 ******** 
Monday 13 October 2025  16:28:43 +0000 (0:00:00.082)       0:09:37.845 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/repository] **************************
Monday 13 October 2025  16:28:43 +0000 (0:00:00.280)       0:09:38.127 ******** 
Monday 13 October 2025  16:28:43 +0000 (0:00:00.280)       0:09:38.126 ******** 
changed: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/repository] *******
Monday 13 October 2025  16:28:44 +0000 (0:00:00.469)       0:09:38.596 ******** 
Monday 13 October 2025  16:28:44 +0000 (0:00:00.469)       0:09:38.595 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": true,
        "cmd": "/usr/local/bin/kpt live init /tmp/repository/mgmt --context kubernetes-admin@kubernetes",
        "failed": false,
        "rc": 0,
        "stdout": "",
        "stdout_lines": []
    }
}

TASK [kpt : Apply package: distros/sandbox/repository] *************************
Monday 13 October 2025  16:28:44 +0000 (0:00:00.129)       0:09:38.726 ******** 
Monday 13 October 2025  16:28:44 +0000 (0:00:00.129)       0:09:38.725 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:28:44 +0000 (0:00:00.334)       0:09:39.060 ******** 
Monday 13 October 2025  16:28:44 +0000 (0:00:00.334)       0:09:39.059 ******** 
ok: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:28:44 +0000 (0:00:00.080)       0:09:39.141 ******** 
Monday 13 October 2025  16:28:44 +0000 (0:00:00.080)       0:09:39.140 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": [
        {
            "ansible_job_id": "j785759261061.245158",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j785759261061.245158",
            "started": 1
        }
    ]
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:28:44 +0000 (0:00:00.107)       0:09:39.248 ******** 
Monday 13 October 2025  16:28:44 +0000 (0:00:00.107)       0:09:39.247 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/rootsync/mgmt] ****
Monday 13 October 2025  16:28:45 +0000 (0:00:00.085)       0:09:39.333 ******** 
Monday 13 October 2025  16:28:45 +0000 (0:00:00.085)       0:09:39.333 ******** 
changed: [127.0.0.1]

TASK [kpt : Fetch package: nephio/optional/rootsync] ***************************
Monday 13 October 2025  16:28:45 +0000 (0:00:00.281)       0:09:39.615 ******** 
Monday 13 October 2025  16:28:45 +0000 (0:00:00.281)       0:09:39.615 ******** 
changed: [127.0.0.1]

TASK [kpt : Get package content information for nephio/optional/rootsync] ******
Monday 13 October 2025  16:28:46 +0000 (0:00:00.986)       0:09:40.602 ******** 
Monday 13 October 2025  16:28:46 +0000 (0:00:00.986)       0:09:40.601 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for nephio/optional/rootsync] ****
Monday 13 October 2025  16:28:46 +0000 (0:00:00.369)       0:09:40.971 ******** 
Monday 13 October 2025  16:28:46 +0000 (0:00:00.369)       0:09:40.970 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"mgmt\"",
        "├── [Kptfile]  Kptfile mgmt",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [rootsync.yaml]  RootSync config-management-system/example-cluster-name",
        "├── [set-values.yaml]  StarlarkRun generate-values",
        "└── [workload-cluster.yaml]  WorkloadCluster workload-cluster"
    ]
}

TASK [kpt : Render package: nephio/optional/rootsync] **************************
Monday 13 October 2025  16:28:46 +0000 (0:00:00.084)       0:09:41.055 ******** 
Monday 13 October 2025  16:28:46 +0000 (0:00:00.084)       0:09:41.054 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:28:47 +0000 (0:00:01.153)       0:09:42.209 ******** 
Monday 13 October 2025  16:28:47 +0000 (0:00:01.154)       0:09:42.208 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: nephio/optional/rootsync] ***
Monday 13 October 2025  16:28:48 +0000 (0:00:00.328)       0:09:42.538 ******** 
Monday 13 October 2025  16:28:48 +0000 (0:00:00.328)       0:09:42.537 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: nephio/optional/rootsync] ***************
Monday 13 October 2025  16:28:49 +0000 (0:00:01.607)       0:09:44.145 ******** 
Monday 13 October 2025  16:28:49 +0000 (0:00:01.607)       0:09:44.144 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "diff /tmp/kpt-1330978666/local-main/package-context.yaml /tmp/kpt-1330978666/target-main/package-context.yaml",
        "9c9,10",
        "<   name: mgmt",
        "---",
        ">   name: example-rootsync",
        ">   clusterName: example-cluster-name",
        "diff /tmp/kpt-1330978666/local-main/rootsync.yaml /tmp/kpt-1330978666/target-main/rootsync.yaml",
        "4c4",
        "<   name: mgmt",
        "---",
        ">   name: example-cluster-name",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: configsync.gke.io|RootSync|config-management-system|example-cluster-name",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'configsync.gke.io|RootSync|config-management-system|example-cluster-name'",
        "11c11",
        "<     repo: http://172.18.0.200:3000/nephio/mgmt.git",
        "---",
        ">     repo: http://172.18.0.200:3000/nephio/example-cluster-name.git",
        "15c15",
        "<       name: mgmt-access-token-configsync",
        "---",
        ">       name: example-cluster-name-access-token-configsync",
        "diff /tmp/kpt-1330978666/local-main/workload-cluster.yaml /tmp/kpt-1330978666/target-main/workload-cluster.yaml",
        "8c8",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|WorkloadCluster|default|workload-cluster",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|WorkloadCluster|default|workload-cluster'"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:28:49 +0000 (0:00:00.086)       0:09:44.232 ******** 
Monday 13 October 2025  16:28:49 +0000 (0:00:00.086)       0:09:44.231 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: nephio/optional/rootsync] ****************************
Monday 13 October 2025  16:28:50 +0000 (0:00:00.324)       0:09:44.557 ******** 
Monday 13 October 2025  16:28:50 +0000 (0:00:00.324)       0:09:44.556 ******** 
changed: [127.0.0.1]

TASK [kpt : Print package initialization for nephio/optional/rootsync] *********
Monday 13 October 2025  16:28:50 +0000 (0:00:00.435)       0:09:44.993 ******** 
Monday 13 October 2025  16:28:50 +0000 (0:00:00.435)       0:09:44.992 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": true,
        "cmd": "/usr/local/bin/kpt live init /tmp/rootsync/mgmt --context kubernetes-admin@kubernetes",
        "failed": false,
        "rc": 0,
        "stdout": "",
        "stdout_lines": []
    }
}

TASK [kpt : Apply package: nephio/optional/rootsync] ***************************
Monday 13 October 2025  16:28:50 +0000 (0:00:00.171)       0:09:45.164 ******** 
Monday 13 October 2025  16:28:50 +0000 (0:00:00.171)       0:09:45.163 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:28:51 +0000 (0:00:00.315)       0:09:45.479 ******** 
Monday 13 October 2025  16:28:51 +0000 (0:00:00.315)       0:09:45.478 ******** 
ok: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:28:51 +0000 (0:00:00.082)       0:09:45.562 ******** 
Monday 13 October 2025  16:28:51 +0000 (0:00:00.082)       0:09:45.561 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": [
        {
            "ansible_job_id": "j785759261061.245158",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j785759261061.245158",
            "started": 1
        },
        {
            "ansible_job_id": "j991018046546.246022",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j991018046546.246022",
            "started": 1
        }
    ]
}

TASK [kpt : Define working directory] ******************************************
Monday 13 October 2025  16:28:51 +0000 (0:00:00.110)       0:09:45.673 ******** 
Monday 13 October 2025  16:28:51 +0000 (0:00:00.110)       0:09:45.672 ******** 
ok: [127.0.0.1]

TASK [kpt : Create base directory if it does not exist: /tmp/repository/mgmt-staging] ***
Monday 13 October 2025  16:28:51 +0000 (0:00:00.084)       0:09:45.757 ******** 
Monday 13 October 2025  16:28:51 +0000 (0:00:00.084)       0:09:45.756 ******** 
ok: [127.0.0.1]

TASK [kpt : Fetch package: distros/sandbox/repository] *************************
Monday 13 October 2025  16:28:51 +0000 (0:00:00.333)       0:09:46.091 ******** 
Monday 13 October 2025  16:28:51 +0000 (0:00:00.333)       0:09:46.090 ******** 
changed: [127.0.0.1]

TASK [kpt : Get package content information for distros/sandbox/repository] ****
Monday 13 October 2025  16:28:52 +0000 (0:00:01.052)       0:09:47.143 ******** 
Monday 13 October 2025  16:28:52 +0000 (0:00:01.052)       0:09:47.142 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package content information for distros/sandbox/repository] ***
Monday 13 October 2025  16:28:53 +0000 (0:00:00.419)       0:09:47.562 ******** 
Monday 13 October 2025  16:28:53 +0000 (0:00:00.419)       0:09:47.562 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_tree.stdout_lines": [
        "Package \"mgmt-staging\"",
        "├── [Kptfile]  Kptfile mgmt-staging",
        "├── [package-context.yaml]  ConfigMap kptfile.kpt.dev",
        "├── [repo-gitea.yaml]  Repository default/example-cluster-name",
        "├── [repo-porch.yaml]  Repository default/example-cluster-name",
        "├── [set-values.yaml]  StarlarkRun generate-values",
        "├── [token-configsync.yaml]  Token default/example-site-name-access-token-configsync",
        "├── [token-porch.yaml]  Token default/example-site-name-access-token-porch",
        "└── [workload-cluster.yaml]  WorkloadCluster workload-cluster"
    ]
}

TASK [kpt : Render package: distros/sandbox/repository] ************************
Monday 13 October 2025  16:28:53 +0000 (0:00:00.093)       0:09:47.656 ******** 
Monday 13 October 2025  16:28:53 +0000 (0:00:00.093)       0:09:47.655 ******** 
ok: [127.0.0.1]

TASK [kpt : Recursively restore ownership of a directory package] **************
Monday 13 October 2025  16:28:54 +0000 (0:00:01.224)       0:09:48.880 ******** 
Monday 13 October 2025  16:28:54 +0000 (0:00:01.224)       0:09:48.879 ******** 
ok: [127.0.0.1]

TASK [kpt : Get package differences between local and upstream: distros/sandbox/repository] ***
Monday 13 October 2025  16:28:54 +0000 (0:00:00.372)       0:09:49.253 ******** 
Monday 13 October 2025  16:28:54 +0000 (0:00:00.372)       0:09:49.252 ******** 
ok: [127.0.0.1]

TASK [kpt : Print package differences: distros/sandbox/repository] *************
Monday 13 October 2025  16:28:56 +0000 (0:00:01.568)       0:09:50.822 ******** 
Monday 13 October 2025  16:28:56 +0000 (0:00:01.568)       0:09:50.821 ******** 
ok: [127.0.0.1] => {
    "kpt_pkg_diff.stdout_lines": [
        "diff /tmp/kpt-821650148/local-main/package-context.yaml /tmp/kpt-821650148/target-main/package-context.yaml",
        "9c9,10",
        "<   name: mgmt-staging",
        "---",
        ">   name: example-repo",
        ">   clusterName: example-cluster-name",
        "diff /tmp/kpt-821650148/local-main/repo-gitea.yaml /tmp/kpt-821650148/target-main/repo-gitea.yaml",
        "4c4",
        "<   name: mgmt-staging",
        "---",
        ">   name: example-cluster-name",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Repository|default|example-cluster-name",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Repository|default|example-cluster-name'",
        "9c9",
        "<   description: mgmt-staging repository",
        "---",
        ">   description: example-cluster-name repository",
        "diff /tmp/kpt-821650148/local-main/repo-porch.yaml /tmp/kpt-821650148/target-main/repo-porch.yaml",
        "4c4",
        "<   name: mgmt-staging",
        "---",
        ">   name: example-cluster-name",
        "7,8c7",
        "<     internal.kpt.dev/upstream-identifier: config.porch.kpt.dev|Repository|default|example-cluster-name",
        "<     nephio.org/staging: \"true\"",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'config.porch.kpt.dev|Repository|default|example-cluster-name'",
        "11c10",
        "<   deployment: false",
        "---",
        ">   deployment: true",
        "15c14",
        "<     repo: http://172.18.0.200:3000/nephio/mgmt-staging.git",
        "---",
        ">     repo: http://172.18.0.200:3000/nephio/example-cluster-name.git",
        "17c16",
        "<       name: mgmt-staging-access-token-porch",
        "---",
        ">       name: example-cluster-name-access-token-porch",
        "diff /tmp/kpt-821650148/local-main/token-configsync.yaml /tmp/kpt-821650148/target-main/token-configsync.yaml",
        "4,5c4,5",
        "<   name: mgmt-staging-access-token-configsync",
        "<   namespace: config-management-system",
        "---",
        ">   name: example-site-name-access-token-configsync",
        ">   namespace: default",
        "10c10",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Token|default|example-site-name-access-token-configsync",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Token|default|example-site-name-access-token-configsync'",
        "diff /tmp/kpt-821650148/local-main/token-porch.yaml /tmp/kpt-821650148/target-main/token-porch.yaml",
        "4c4",
        "<   name: mgmt-staging-access-token-porch",
        "---",
        ">   name: example-site-name-access-token-porch",
        "7c7",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|Token|default|example-site-name-access-token-porch",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|Token|default|example-site-name-access-token-porch'",
        "diff /tmp/kpt-821650148/local-main/workload-cluster.yaml /tmp/kpt-821650148/target-main/workload-cluster.yaml",
        "8c8",
        "<     internal.kpt.dev/upstream-identifier: infra.nephio.org|WorkloadCluster|default|workload-cluster",
        "---",
        ">     internal.kpt.dev/upstream-identifier: 'infra.nephio.org|WorkloadCluster|default|workload-cluster'"
    ]
}

TASK [kpt : Check package has been initialized] ********************************
Monday 13 October 2025  16:28:56 +0000 (0:00:00.070)       0:09:50.893 ******** 
Monday 13 October 2025  16:28:56 +0000 (0:00:00.070)       0:09:50.892 ******** 
ok: [127.0.0.1]

TASK [kpt : Init package: distros/sandbox/repository] **************************
Monday 13 October 2025  16:28:56 +0000 (0:00:00.343)       0:09:51.237 ******** 
Monday 13 October 2025  16:28:56 +0000 (0:00:00.344)       0:09:51.236 ******** 
changed: [127.0.0.1]

TASK [kpt : Print package initialization for distros/sandbox/repository] *******
Monday 13 October 2025  16:28:57 +0000 (0:00:00.499)       0:09:51.737 ******** 
Monday 13 October 2025  16:28:57 +0000 (0:00:00.499)       0:09:51.736 ******** 
ok: [127.0.0.1] => {
    "kpt_live_init": {
        "changed": true,
        "cmd": "/usr/local/bin/kpt live init /tmp/repository/mgmt-staging --context kubernetes-admin@kubernetes",
        "failed": false,
        "rc": 0,
        "stdout": "",
        "stdout_lines": []
    }
}

TASK [kpt : Apply package: distros/sandbox/repository] *************************
Monday 13 October 2025  16:28:57 +0000 (0:00:00.087)       0:09:51.824 ******** 
Monday 13 October 2025  16:28:57 +0000 (0:00:00.087)       0:09:51.823 ******** 
ok: [127.0.0.1]

TASK [kpt : Export job ids array] **********************************************
Monday 13 October 2025  16:28:57 +0000 (0:00:00.404)       0:09:52.229 ******** 
Monday 13 October 2025  16:28:57 +0000 (0:00:00.404)       0:09:52.228 ******** 
ok: [127.0.0.1]

TASK [kpt : Print job ids] *****************************************************
Monday 13 October 2025  16:28:57 +0000 (0:00:00.065)       0:09:52.295 ******** 
Monday 13 October 2025  16:28:57 +0000 (0:00:00.065)       0:09:52.294 ******** 
ok: [127.0.0.1] => {
    "all_kpt_apply": [
        {
            "ansible_job_id": "j785759261061.245158",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j785759261061.245158",
            "started": 1
        },
        {
            "ansible_job_id": "j991018046546.246022",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j991018046546.246022",
            "started": 1
        },
        {
            "ansible_job_id": "j35707079605.247018",
            "attempts": 1,
            "changed": false,
            "failed": 0,
            "finished": 0,
            "results_file": "/home/rehanfazal/.ansible_async/j35707079605.247018",
            "started": 1
        }
    ]
}

TASK [Wait for packages to be applied] *****************************************
Monday 13 October 2025  16:28:58 +0000 (0:00:00.103)       0:09:52.398 ******** 
Monday 13 October 2025  16:28:58 +0000 (0:00:00.103)       0:09:52.397 ******** 
ok: [127.0.0.1] => (item={'failed': 0, 'started': 1, 'finished': 0, 'ansible_job_id': 'j785759261061.245158', 'results_file': '/home/rehanfazal/.ansible_async/j785759261061.245158', 'changed': False, 'attempts': 1})
ok: [127.0.0.1] => (item={'failed': 0, 'started': 1, 'finished': 0, 'ansible_job_id': 'j991018046546.246022', 'results_file': '/home/rehanfazal/.ansible_async/j991018046546.246022', 'changed': False, 'attempts': 1})
ok: [127.0.0.1] => (item={'failed': 0, 'started': 1, 'finished': 0, 'ansible_job_id': 'j35707079605.247018', 'results_file': '/home/rehanfazal/.ansible_async/j35707079605.247018', 'changed': False, 'attempts': 1})

TASK [Wait for repositories] ***************************************************
Monday 13 October 2025  16:28:58 +0000 (0:00:00.874)       0:09:53.272 ******** 
Monday 13 October 2025  16:28:58 +0000 (0:00:00.874)       0:09:53.272 ******** 
ok: [127.0.0.1] => (item=mgmt)
ok: [127.0.0.1] => (item=mgmt-staging)

PLAY RECAP *********************************************************************
127.0.0.1                  : ok=365  changed=11   unreachable=0    failed=0    skipped=49   rescued=0    ignored=0   

Playbook run took 0 days, 0 hours, 9 minutes, 55 seconds
Monday 13 October 2025  16:29:01 +0000 (0:00:02.087)       0:09:55.360 ******** 
=============================================================================== 
kpt : Apply package: nephio/optional/webui ---------------------------- 318.95s
kpt : Apply package: nephio/optional/fluxcd ---------------------------- 16.25s
bootstrap : Wait for deployments in namespace capm3-system ------------- 12.31s
install : Wait for stock repositories ---------------------------------- 10.95s
install : Create stock repositories ------------------------------------- 7.52s
kpt : Get package differences between local and upstream: nephio/optional/argo-cd-full --- 7.11s
kpt : Get package differences between local and upstream: nephio/core/configsync --- 6.84s
install : Wait for deployments in namespace argocd ---------------------- 6.00s
kpt : Apply package: infra/capi/cluster-capi-infrastructure-docker ------ 5.91s
kpt : Apply package: nephio/core/nephio-operator ------------------------ 5.87s
kpt : Apply package: nephio/core/configsync ----------------------------- 5.87s
kpt : Apply package: nephio/optional/argo-cd-full ----------------------- 5.86s
kpt : Apply package: distros/sandbox/metallb ---------------------------- 5.85s
kpt : Apply package: infra/capi/cluster-capi ---------------------------- 5.83s
kpt : Apply package: nephio/core/porch ---------------------------------- 5.73s
kpt : Render package: nephio/optional/webui ----------------------------- 5.09s
kpt : Get package differences between local and upstream: distros/sandbox/cert-manager --- 4.26s
install : Wait for deployments in namespace flux-system ----------------- 3.96s
install : Get deployment resources in namespace resource-group-system --- 3.75s
kpt : Get package differences between local and upstream: nephio/optional/network-config --- 3.74s
Monday 13 October 2025  16:29:01 +0000 (0:00:02.089)       0:09:55.361 ******** 
=============================================================================== 
kpt ------------------------------------------------------------------- 496.43s
install ---------------------------------------------------------------- 55.12s
bootstrap -------------------------------------------------------------- 35.70s
kubernetes.core.k8s ----------------------------------------------------- 2.09s
ansible.builtin.pip ----------------------------------------------------- 1.67s
andrewrothstein.git ----------------------------------------------------- 1.63s
andrewrothstein.kpt ----------------------------------------------------- 1.59s
ansible.builtin.async_status -------------------------------------------- 0.87s
ansible.builtin.include_role -------------------------------------------- 0.22s
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
total ----------------------------------------------------------------- 595.33s
